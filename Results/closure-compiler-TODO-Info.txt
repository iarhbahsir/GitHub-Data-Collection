Number of TODOs: 848
Average Specificity: 0.8773301238207546Specificites Box Plots: (min, q1, mean, median, q3, max)
	Incomplete TODO: 0.556713, 0.800771, 0.8793645225334964, 0.896903, 0.985057, 1.0
	Completed TODO: 0.602091, 0.7546255, 0.8154693333333332, 0.841327, 0.8672075, 0.98565
Completion Rate: 3.1839622641509435%


TODOs:

Type: Incomplete
Content:
" * @param {number} e",  // TODO(tbreisacher): The param type should be 'E' not 'number'
Specificity: 0.974461
Content Structure:
case(number-5, *-2)
amod(number-5, @param-3)
nmod:*(/-11, number-5)
dep(number-5, e-7)
nsubj(/-11, /-10)
root(ROOT-0, /-11)
dobj(/-11, TODO-12)
appos(TODO-12, tbreisacher-14)
det(type-19, The-17)
compound(type-19, param-18)
nsubj(E-23, type-19)
aux(E-23, should-20)
cop(E-23, be-21)
acl:relcl(TODO-12, E-23)
neg(number-27, not-25)
nmod(E-23, number-27)
File Name: /test/com/google/javascript/jscomp/ExternExportsPassTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 7989eafeef1a9ea199cb6f9289d51e11e5053199
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
"/** @typedef {?} */ var symbol;", // TODO(sdh): remove once primitive 'symbol' supported
Specificity: 0.965467
Content Structure:
root(ROOT-0, ''-1)
dep(@typedef-4, **-3)
dep(/-16, @typedef-4)
appos(@typedef-4, ?-6)
dep(symbol-11, *-8)
amod(symbol-11, var-10)
dep(/-16, symbol-11)
nsubj(/-16, /-15)
advcl(supported-28, /-16)
dobj(/-16, TODO-17)
discourse(TODO-17, sdh-19)
advmod(supported-28, remove-22)
advmod(symbol-26, once-23)
amod(symbol-26, primitive-24)
nsubj(supported-28, symbol-26)
parataxis(''-1, supported-28)
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
&& !isTypeVariable(n); // TODO(johnlenz): Remove this restriction
Specificity: 0.930214
Content Structure:
root(ROOT-0, &-1)
cc(&-1, &-2)
amod(isTypeVariable-4, !-3)
conj:&(&-1, isTypeVariable-4)
appos(&-1, n-6)
dep(&-1, /-9)
compound(TODO-11, /-10)
dobj(/-9, TODO-11)
appos(TODO-11, johnlenz-13)
parataxis(/-9, Remove-16)
det(restriction-18, this-17)
dobj(Remove-16, restriction-18)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(ChadKillingsworth) Add support for object literals

Specificity: 0.791349
Content Structure:
root(ROOT-0, ChadKillingsworth-2)
amod(support-5, Add-4)
dep(ChadKillingsworth-2, support-5)
case(literals-8, for-6)
compound(literals-8, object-7)
nmod:for(support-5, literals-8)
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(ChadKillingsworth): Discover if there is a better way to detect these.
Specificity: 0.850156
Content Structure:
dep(Discover-5, ChadKillingsworth-2)
root(ROOT-0, Discover-5)
mark(is-8, if-6)
expl(is-8, there-7)
advcl(Discover-5, is-8)
det(way-11, a-9)
amod(way-11, better-10)
nsubj(is-8, way-11)
mark(detect-13, to-12)
acl(way-11, detect-13)
dobj(detect-13, these-14)
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(anatol): add flag that decides whether to process UNNAMED messages.
Some projects would not want such functionality (unnamed) as they don't
use SOY templates.
Specificity: 0.993263
Content Structure:
dep(want-19, anatol-2)
parataxis(want-19, add-5)
dobj(add-5, flag-6)
nsubj(decides-8, flag-6)
ref(flag-6, that-7)
acl:relcl(flag-6, decides-8)
mark(process-11, whether-9)
mark(process-11, to-10)
ccomp(decides-8, process-11)
amod(messages-13, UNNAMED-12)
dobj(process-11, messages-13)
det(projects-16, Some-15)
nsubj(want-19, projects-16)
aux(want-19, would-17)
neg(want-19, not-18)
root(ROOT-0, want-19)
amod(functionality-21, such-20)
dobj(want-19, functionality-21)
dep(want-19, unnamed-23)
mark(use-29, as-25)
nsubj(use-29, they-26)
aux(use-29, do-27)
neg(use-29, n't-28)
advcl(want-19, use-29)
compound(templates-31, SOY-30)
dobj(use-29, templates-31)
File Name: ./src/com/google/javascript/jscomp/JsMessageVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): Also look for getters and setters specially (in RawNominalType::protoProps),
but avoid putting them in the hot path of getProp.
Specificity: 0.986877
Content Structure:
dep(look-6, aravindpg-2)
advmod(look-6, Also-5)
root(ROOT-0, look-6)
case(getters-8, for-7)
nmod:for(look-6, getters-8)
cc(getters-8, and-9)
nmod:for(look-6, setters-10)
conj:and(getters-8, setters-10)
advmod(look-6, specially-11)
case(RawNominalType-14, in-13)
nmod:in(protoProps-17, RawNominalType-14)
dep(specially-11, protoProps-17)
cc(look-6, but-20)
conj:but(look-6, avoid-21)
xcomp(avoid-21, putting-22)
dobj(putting-22, them-23)
case(path-27, in-24)
det(path-27, the-25)
amod(path-27, hot-26)
nmod:in(putting-22, path-27)
case(getProp-29, of-28)
nmod:of(path-27, getProp-29)
File Name: ./src/com/google/javascript/jscomp/newtypes/NominalType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): Only difference is we don't add parens at the ends of our union type
string reprs in NTI. Fix them to be the same if possible.
Specificity: 0.98985
Content Structure:
dep(add-11, aravindpg-2)
advmod(difference-6, Only-5)
nsubj(add-11, difference-6)
cop(we-8, is-7)
acl:relcl(difference-6, we-8)
aux(add-11, do-9)
neg(add-11, n't-10)
root(ROOT-0, add-11)
amod(reprs-21, parens-12)
case(ends-15, at-13)
det(ends-15, the-14)
nmod:at(parens-12, ends-15)
case(type-19, of-16)
nmod:poss(type-19, our-17)
compound(type-19, union-18)
nmod:of(ends-15, type-19)
compound(reprs-21, string-20)
dobj(add-11, reprs-21)
case(NTI-23, in-22)
nmod:in(reprs-21, NTI-23)
acl(NTI-23, Fix-25)
dobj(Fix-25, them-26)
nsubj:xsubj(same-30, them-26)
mark(same-30, to-27)
cop(same-30, be-28)
det(same-30, the-29)
xcomp(Fix-25, same-30)
mark(possible-32, if-31)
dep(reprs-21, possible-32)
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): This is purely a stub to ensure we never get into a codepath that
depends on us being an unresolved type. We currently do not mark unresolved types as such
in NTI since the main use-case (warning for unfulfilled forward declares) can be
handled differently (by warning after GTI), so we don't want to change the type system.
Specificity: 0.999989
Content Structure:
root(ROOT-0, aravindpg-2)
nsubj(stub-9, This-5)
cop(stub-9, is-6)
advmod(stub-9, purely-7)
det(stub-9, a-8)
dep(aravindpg-2, stub-9)
mark(ensure-11, to-10)
acl(stub-9, ensure-11)
nsubj(get-14, we-12)
neg(get-14, never-13)
xcomp(ensure-11, get-14)
case(codepath-17, into-15)
det(codepath-17, a-16)
nmod:into(get-14, codepath-17)
nsubj(depends-19, that-18)
parataxis(get-14, depends-19)
mark(type-25, on-20)
nsubj(type-25, us-21)
cop(type-25, being-22)
det(type-25, an-23)
amod(type-25, unresolved-24)
advcl(depends-19, type-25)
nsubj(mark-31, We-27)
advmod(mark-31, currently-28)
aux(mark-31, do-29)
neg(mark-31, not-30)
parataxis(get-14, mark-31)
amod(types-33, unresolved-32)
dobj(mark-31, types-33)
advmod(NTI-37, as-34)
case(NTI-37, such-35)
case(NTI-37, in-36)
advcl(mark-31, NTI-37)
mark(handled-51, since-38)
det(use-case-41, the-39)
amod(use-case-41, main-40)
nsubjpass(handled-51, use-case-41)
nsubj(declares-47, warning-43)
case(unfulfilled-45, for-44)
acl(warning-43, unfulfilled-45)
advmod(declares-47, forward-46)
dep(use-case-41, declares-47)
aux(handled-51, can-49)
auxpass(handled-51, be-50)
advcl(mark-31, handled-51)
advmod(handled-51, differently-52)
mark(warning-55, by-54)
dep(handled-51, warning-55)
case(GTI-57, after-56)
nmod:after(warning-55, GTI-57)
advmod(get-14, so-60)
nsubj(want-64, we-61)
nsubj:xsubj(change-66, we-61)
aux(want-64, do-62)
neg(want-64, n't-63)
parataxis(get-14, want-64)
mark(change-66, to-65)
xcomp(want-64, change-66)
det(system-69, the-67)
compound(system-69, type-68)
dobj(change-66, system-69)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): This may be unsuitable from a typing point of view.
Revisit if needed.

Specificity: 0.891849
Content Structure:
root(ROOT-0, aravindpg-2)
dep(aravindpg-2, This-5)
aux(unsuitable-8, may-6)
cop(unsuitable-8, be-7)
acl:relcl(This-5, unsuitable-8)
case(point-12, from-9)
det(point-12, a-10)
amod(point-12, typing-11)
nmod:from(unsuitable-8, point-12)
case(view-14, of-13)
nmod:of(point-12, view-14)
dep(This-5, Revisit-16)
dep(needed-18, if-17)
amod(Revisit-16, needed-18)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): could implement in a more sophisticated way, following the
implementation in JSTypeRegistry.
Specificity: 0.894809
Content Structure:
dep(implement-6, aravindpg-2)
aux(implement-6, could-5)
root(ROOT-0, implement-6)
case(way-11, in-7)
det(way-11, a-8)
advmod(sophisticated-10, more-9)
amod(way-11, sophisticated-10)
nmod:in(implement-6, way-11)
case(implementation-15, following-13)
det(implementation-15, the-14)
nmod:following(way-11, implementation-15)
case(JSTypeRegistry-17, in-16)
nmod:in(implementation-15, JSTypeRegistry-17)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): could implement in a more sophisticated way.
One particular pain point is that we currently return the object literal representation of
prototype objects instead of something more readable such as "Foo.prototype". But this is
difficult to fix since we don't represent prototype objects in any special way.
Specificity: 0.999821
Content Structure:
dep(is-17, aravindpg-2)
aux(implement-6, could-5)
parataxis(is-17, implement-6)
case(way-11, in-7)
det(way-11, a-8)
advmod(sophisticated-10, more-9)
amod(way-11, sophisticated-10)
nmod:in(implement-6, way-11)
nummod(point-16, One-13)
amod(point-16, particular-14)
compound(point-16, pain-15)
nsubj(is-17, point-16)
root(ROOT-0, is-17)
mark(return-21, that-18)
nsubj(return-21, we-19)
advmod(return-21, currently-20)
ccomp(is-17, return-21)
det(representation-25, the-22)
compound(representation-25, object-23)
amod(representation-25, literal-24)
dobj(return-21, representation-25)
case(objects-28, of-26)
compound(objects-28, prototype-27)
nmod:of(representation-25, objects-28)
case(something-31, instead-29)
mwe(instead-29, of-30)
nmod:instead_of(objects-28, something-31)
advmod(readable-33, more-32)
dep(return-21, readable-33)
case(Foo.prototype-37, such-34)
mwe(such-34, as-35)
nmod:such_as(readable-33, Foo.prototype-37)
cc(return-21, But-40)
nsubj(difficult-43, this-41)
nsubj:xsubj(fix-45, this-41)
cop(difficult-43, is-42)
ccomp(is-17, difficult-43)
conj:but(return-21, difficult-43)
mark(fix-45, to-44)
xcomp(difficult-43, fix-45)
mark(represent-50, since-46)
nsubj(represent-50, we-47)
aux(represent-50, do-48)
neg(represent-50, n't-49)
advcl(fix-45, represent-50)
compound(objects-52, prototype-51)
dobj(represent-50, objects-52)
case(way-56, in-53)
det(way-56, any-54)
amod(way-56, special-55)
nmod:in(represent-50, way-56)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): might be better to define a PropertyI interface and
then have a more general-purpose getProperty method here.
Specificity: 0.933153
Content Structure:
dep(better-7, aravindpg-2)
aux(better-7, might-5)
cop(better-7, be-6)
root(ROOT-0, better-7)
mark(define-9, to-8)
xcomp(better-7, define-9)
det(interface-12, a-10)
compound(interface-12, PropertyI-11)
dobj(define-9, interface-12)
cc(define-9, and-13)
advmod(have-15, then-14)
xcomp(better-7, have-15)
conj:and(define-9, have-15)
det(method-20, a-16)
advmod(general-purpose-18, more-17)
amod(method-20, general-purpose-18)
compound(method-20, getProperty-19)
dobj(have-15, method-20)
advmod(have-15, here-21)
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): this might need to also include the extra properties as stored in the
ObjectType::props. If so, demonstrate a test case that needs it and fix this.
Specificity: 0.99273
Content Structure:
root(ROOT-0, aravindpg-2)
nsubj(need-7, this-5)
nsubj:xsubj(include-10, this-5)
nsubj:xsubj(demonstrate-26, this-5)
nsubj:xsubj(fix-34, this-5)
aux(need-7, might-6)
dep(aravindpg-2, need-7)
mark(include-10, to-8)
advmod(include-10, also-9)
xcomp(need-7, include-10)
det(properties-13, the-11)
amod(properties-13, extra-12)
dobj(include-10, properties-13)
mark(stored-15, as-14)
advcl(include-10, stored-15)
case(ObjectType-18, in-16)
det(ObjectType-18, the-17)
nmod:in(props-21, ObjectType-18)
dep(stored-15, props-21)
case(so-24, If-23)
advcl(stored-15, so-24)
xcomp(need-7, demonstrate-26)
conj:and(include-10, demonstrate-26)
det(case-29, a-27)
compound(case-29, test-28)
dobj(demonstrate-26, case-29)
nsubj(needs-31, case-29)
ref(case-29, that-30)
acl:relcl(case-29, needs-31)
dobj(needs-31, it-32)
cc(include-10, and-33)
xcomp(need-7, fix-34)
conj:and(include-10, fix-34)
dobj(fix-34, this-35)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(aravindpg): this ought to warn under both, or at any rate NTI.
Specificity: 0.873961
Content Structure:
root(ROOT-0, aravindpg-2)
nsubj(ought-6, this-5)
nsubj:xsubj(warn-8, this-5)
nsubj:xsubj(warn-8', this-5)
dep(aravindpg-2, ought-6)
mark(warn-8, to-7)
xcomp(ought-6, warn-8)
xcomp(ought-6, warn-8')
conj:or(warn-8, warn-8')
case(both-10, under-9)
nmod:under(warn-8, both-10)
cc(warn-8, or-12)
case(NTI-16, at-13)
det(NTI-16, any-14)
compound(NTI-16, rate-15)
nmod:at(warn-8', NTI-16)
File Name: ./test/com/google/javascript/jscomp/ImplicitNullabilityCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(b/63630312): should flatten an entire comma expression in a single pass.
Specificity: 0.794575
Content Structure:
dep(flatten-6, b/63630312-2)
aux(flatten-6, should-5)
root(ROOT-0, flatten-6)
det(expression-10, an-7)
amod(expression-10, entire-8)
compound(expression-10, comma-9)
dobj(flatten-6, expression-10)
case(pass-14, in-11)
det(pass-14, a-12)
amod(pass-14, single-13)
nmod:in(flatten-6, pass-14)
File Name: /src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
Time Of Creation: 2017-07-13T15:15:11-07:00
Time Of Deletion: null
Creation Commit Hash: 89d5711fc8260ad838284f1a875e2d9ff6cbcb4d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bangert): Delete this alias once it has been deprecated for 3 months.
Specificity: 0.839201
Content Structure:
dep(Delete-5, bangert-2)
root(ROOT-0, Delete-5)
det(alias-7, this-6)
dobj(Delete-5, alias-7)
mark(deprecated-12, once-8)
nsubjpass(deprecated-12, it-9)
aux(deprecated-12, has-10)
auxpass(deprecated-12, been-11)
advcl(Delete-5, deprecated-12)
case(months-15, for-13)
nummod(months-15, 3-14)
nmod:for(deprecated-12, months-15)
File Name: /src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-07-05T11:54:38-07:00
Time Of Deletion: null
Creation Commit Hash: cd1dd52dbba028a64e3108f8e84accfd9869c0eb
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(bangert): Delete this alias once it has been deprecated for 3 months.
Specificity: 0.839201
Content Structure:
dep(Delete-5, bangert-2)
root(ROOT-0, Delete-5)
det(alias-7, this-6)
dobj(Delete-5, alias-7)
mark(deprecated-12, once-8)
nsubjpass(deprecated-12, it-9)
aux(deprecated-12, has-10)
auxpass(deprecated-12, been-11)
advcl(Delete-5, deprecated-12)
case(months-15, for-13)
nummod(months-15, 3-14)
nmod:for(deprecated-12, months-15)
File Name: /src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Type: Incomplete
Content:
(bangert): Find a non-conflicting name.
Specificity: 0.69501
Content Structure:
dep(Find-5, bangert-2)
root(ROOT-0, Find-5)
det(name-8, a-6)
amod(name-8, non-conflicting-7)
dobj(Find-5, name-8)
File Name: /src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-07-05T11:54:38-07:00
Time Of Deletion: null
Creation Commit Hash: cd1dd52dbba028a64e3108f8e84accfd9869c0eb
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(bangert): Find a non-conflicting name.
Specificity: 0.69501
Content Structure:
dep(Find-5, bangert-2)
root(ROOT-0, Find-5)
det(name-8, a-6)
amod(name-8, non-conflicting-7)
dobj(Find-5, name-8)
File Name: /src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Type: Incomplete
Content:
(bangert): Remove this -- we want to rewrite code before closure syntax is removed.
Unfortunately, setClosurePass is required, or code doesn't type check.


diff --git a/src/com/google/javascript/refactoring/RefasterJsScanner.java b/src/com/google/javascript/refactoring/RefasterJsScanner.java
index 1fbfa5f..b426cb9 100644
-- a/src/com/google/javascript/refactoring/RefasterJsScanner.java
++ b/src/com/google/javascript/refactoring/RefasterJsScanner.java
@@ -140,10 +141,18 @@ public final class RefasterJsScanner extends Scanner {
.isEquivalentTo(matchedTemplate.afterTemplate.getLastChild())) {
}

for (String require : matchedTemplate.getGoogRequiresToAdd()) {
}

Node newNode =
transformNode(
matchedTemplate.afterTemplate.getLastChild(),
matchedTemplate.matcher.getTemplateNodeToMatchMap(),
@@ -161,10 +170,7 @@ public final class RefasterJsScanner extends Scanner {
}
Add/remove any goog.requires
for (String require : matchedTemplate.getGoogRequiresToAdd()) {
}

for (String require : matchedTemplate.getGoogRequiresToRemove()) {
}
@@ -172,10 +178,13 @@ public final class RefasterJsScanner extends Scanner {
}

Specificity: 1.0
Content Structure:
dep(required-23, bangert-2)
parataxis(required-23, Remove-5)
dobj(Remove-5, this-6)
nsubj(want-9, we-8)
nsubj:xsubj(rewrite-11, we-8)
dep(this-6, want-9)
mark(rewrite-11, to-10)
xcomp(want-9, rewrite-11)
dobj(rewrite-11, code-12)
mark(removed-17, before-13)
compound(syntax-15, closure-14)
nsubjpass(removed-17, syntax-15)
auxpass(removed-17, is-16)
advcl(rewrite-11, removed-17)
advmod(required-23, Unfortunately-19)
nsubjpass(required-23, setClosurePass-21)
nsubj(does-27, setClosurePass-21)
auxpass(required-23, is-22)
root(ROOT-0, required-23)
cc(required-23, or-25)
advmod(does-27, code-26)
conj:or(required-23, does-27)
neg(does-27, n't-28)
dobj(does-27, type-29)
compound(diff-32, check-30)
dep(extends-101, diff-32)
compound(1fbfa5f-38, git-34)
compound(1fbfa5f-38, a/src/com/google/javascript/refactoring/RefasterJsScanner.java-35)
compound(1fbfa5f-38, b/src/com/google/javascript/refactoring/RefasterJsScanner.java-36)
compound(1fbfa5f-38, index-37)
dep(diff-32, 1fbfa5f-38)
dep(a/src/com/google/javascript/refactoring/RefasterJsScanner.java-44, 100644-42)
parataxis(diff-32, a/src/com/google/javascript/refactoring/RefasterJsScanner.java-44)
dep(b/src/com/google/javascript/refactoring/RefasterJsScanner.java-47, +-46)
parataxis(a/src/com/google/javascript/refactoring/RefasterJsScanner.java-44, b/src/com/google/javascript/refactoring/RefasterJsScanner.java-47)
parataxis(b/src/com/google/javascript/refactoring/RefasterJsScanner.java-47, -140,10-49)
dep(-140,10-49, +141,18-50)
amod(class-54, public-52)
amod(class-54, final-53)
dep(-140,10-49, class-54)
compound(Scanner-57, RefasterJsScanner-55)
compound(Scanner-57, extends-56)
dep(class-54, Scanner-57)
nummod(-RRB--64, .-59)
amod(-RRB--64, isEquivalentTo-60)
amod(-RRB--64, matchedTemplate.afterTemplate.getLastChild-62)
dep(Scanner-57, -RRB--64)
amod(Scanner-57, -RCB--68)
nmod(-RCB--68, for-69)
compound(require-72, String-71)
dep(-RCB--68, require-72)
amod(-LRB--75, matchedTemplate.getGoogRequiresToAdd-74)
dep(require-72, -LRB--75)
compound(transformNode-83, -RCB--79)
compound(transformNode-83, Node-80)
compound(transformNode-83, newNode-81)
compound(transformNode-83, =-82)
dep(Scanner-57, transformNode-83)
amod(-LRB--86, matchedTemplate.afterTemplate.getLastChild-85)
appos(transformNode-83, -LRB--86)
compound(-LRB--90, matchedTemplate.matcher.getTemplateNodeToMatchMap-89)
appos(transformNode-83, -LRB--90)
dep(-161,10-94, @@-93)
dep(extends-101, -161,10-94)
nummod(-161,10-94, +170,7-95)
compound(RefasterJsScanner-100, public-97)
amod(RefasterJsScanner-100, final-98)
compound(RefasterJsScanner-100, class-99)
nsubj(extends-101, RefasterJsScanner-100)
acl:relcl(type-29, extends-101)
compound(Add/remove-105, Scanner-102)
compound(Add/remove-105, -LCB--103)
nsubj(goog.requires-107, Add/remove-105)
det(goog.requires-107, any-106)
ccomp(extends-101, goog.requires-107)
case(require-111, for-108)
compound(require-111, String-110)
nmod:for(goog.requires-107, require-111)
acl:relcl(require-111, matchedTemplate.getGoogRequiresToAdd-113)
dep(matchedTemplate.getGoogRequiresToAdd-113, -RRB--115)
dep(goog.requires-107, -RCB--118)
case(require-122, for-119)
compound(require-122, String-121)
advcl(-RCB--118, require-122)
amod(-LRB--125, matchedTemplate.getGoogRequiresToRemove-124)
dep(require-122, -LRB--125)
dep(+178,13-132, -RCB--129)
nummod(+178,13-132, -172,10-131)
dep(goog.requires-107, +178,13-132)
amod(class-136, public-134)
amod(class-136, final-135)
parataxis(+178,13-132, class-136)
compound(-LCB--140, RefasterJsScanner-137)
compound(-LCB--140, extends-138)
compound(-LCB--140, Scanner-139)
dep(class-136, -LCB--140)
File Name: /src/com/google/javascript/refactoring/RefactoringDriver.java
Time Of Creation: 2017-07-05T11:54:38-07:00
Time Of Deletion: null
Creation Commit Hash: cd1dd52dbba028a64e3108f8e84accfd9869c0eb
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(bangert): Remove this -- we want to rewrite code before closure syntax is removed.
Specificity: 0.859371
Content Structure:
dep(want-9, bangert-2)
parataxis(want-9, Remove-5)
dobj(Remove-5, this-6)
nsubj(want-9, we-8)
nsubj:xsubj(rewrite-11, we-8)
root(ROOT-0, want-9)
mark(rewrite-11, to-10)
xcomp(want-9, rewrite-11)
dobj(rewrite-11, code-12)
mark(removed-17, before-13)
compound(syntax-15, closure-14)
nsubjpass(removed-17, syntax-15)
auxpass(removed-17, is-16)
advcl(rewrite-11, removed-17)
File Name: /src/com/google/javascript/refactoring/RefactoringDriver.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Type: Incomplete
Content:
(bangert): make this compatible with preserveSugar. const B = goog.require('b') runs
into problems because the type checker cannot handle const.
Rewrite
"var B = goog.require('B');" to
"goog.require('B');"
@@ -1083,7 +1091,7 @@ final class ClosureRewriteModule implements HotSwapCompilerPass {
}
if (targetIsNonLegacyGoogModule) {
if (targetIsNonLegacyGoogModule && !preserveSugar) {
Add goog.require() and namespace name to preprocessor table because they're removed
by current pass. If target is not a module then goog.require() is retained for
ProcessClosurePrimitives pass and symbols will be added there instead.
@@ -1472,7 +1480,6 @@ final class ClosureRewriteModule implements HotSwapCompilerPass {

}

@@ -1529,7 +1536,9 @@ final class ClosureRewriteModule implements HotSwapCompilerPass {
Remove the require node so this problem isn't reported all over again in
ProcessClosurePrimitives.
if (!preserveSugar) {
}
}

diff --git a/src/com/google/javascript/jscomp/CompilerOptions.java b/src/com/google/javascript/jscomp/CompilerOptions.java
index 491e56e..143e935 100644
-- a/src/com/google/javascript/jscomp/CompilerOptions.java
++ b/src/com/google/javascript/jscomp/CompilerOptions.java
@@ -755,7 +755,7 @@ public class CompilerOptions implements Serializable {

Specificity: 1.0
Content Structure:
root(ROOT-0, bangert-2)
dep(bangert-2, make-5)
det(runs-20, this-6)
amod(runs-20, compatible-7)
case(B-12, with-8)
compound(B-12, preserveSugar-9)
amod(B-12, const-11)
nmod:with(compatible-7, B-12)
dep(goog.require-14, =-13)
dep(B-12, goog.require-14)
dep(compatible-7, b-17)
dobj(make-5, runs-20)
case(problems-22, into-21)
nmod:into(make-5, problems-22)
mark(handle-29, because-23)
det(checker-26, the-24)
compound(checker-26, type-25)
nsubj(handle-29, checker-26)
aux(handle-29, can-27)
neg(handle-29, not-28)
acl:relcl(problems-22, handle-29)
compound(Rewrite-32, const-30)
nsubj(var-34, Rewrite-32)
ccomp(handle-29, var-34)
compound(goog.require-37, B-35)
compound(goog.require-37, =-36)
dobj(var-34, goog.require-37)
nsubj:xsubj(goog.require-47, goog.require-37)
dep(goog.require-37, B-40)
mark(goog.require-47, to-45)
xcomp(var-34, goog.require-47)
dep(problems-22, B-50)
nummod(+1091,7-57, -1083,7-56)
dep(problems-22, +1091,7-57)
amod(class-60, final-59)
dep(problems-22, class-60)
nsubj(implements-62, ClosureRewriteModule-61)
acl:relcl(class-60, implements-62)
compound(-RCB--65, HotSwapCompilerPass-63)
dobj(implements-62, -RCB--65)
case(targetIsNonLegacyGoogModule-68, if-66)
nmod:if(-RCB--65, targetIsNonLegacyGoogModule-68)
mark(preserveSugar-77, if-71)
compound(&-74, targetIsNonLegacyGoogModule-73)
nsubj(preserveSugar-77, &-74)
cc(&-74, &-75)
conj:&(&-74, !-76)
nsubj(preserveSugar-77, !-76)
dep(targetIsNonLegacyGoogModule-68, preserveSugar-77)
parataxis(implements-62, Add-80)
amod(-LRB--82, goog.require-81)
dobj(Add-80, -LRB--82)
cc(make-5, and-84)
dep(bangert-2, namespace-85)
conj:and(make-5, namespace-85)
dobj(namespace-85, name-86)
mark(preprocessor-88, to-87)
dep(+1480,6-123, preprocessor-88)
dobj(preprocessor-88, table-89)
mark(removed-93, because-90)
nsubjpass(removed-93, they-91)
auxpass(removed-93, 're-92)
advcl(preprocessor-88, removed-93)
case(pass-96, by-94)
amod(pass-96, current-95)
nmod:agent(removed-93, pass-96)
mark(module-103, If-98)
nsubj(module-103, target-99)
cop(module-103, is-100)
neg(module-103, not-101)
det(module-103, a-102)
dep(preprocessor-88, module-103)
advmod(retained-109, then-104)
amod(-LRB--106, goog.require-105)
nsubjpass(retained-109, -LRB--106)
auxpass(retained-109, is-108)
acl:relcl(module-103, retained-109)
case(pass-112, for-110)
compound(pass-112, ProcessClosurePrimitives-111)
nmod:for(retained-109, pass-112)
cc(retained-109, and-113)
nsubjpass(added-117, symbols-114)
aux(added-117, will-115)
auxpass(added-117, be-116)
acl:relcl(module-103, added-117)
conj:and(retained-109, added-117)
xcomp(added-117, there-118)
advmod(there-118, instead-119)
nummod(+1480,6-123, -1472,7-122)
dep(name-86, +1480,6-123)
amod(ClosureRewriteModule-127, final-125)
compound(ClosureRewriteModule-127, class-126)
nsubj(implements-128, ClosureRewriteModule-127)
parataxis(+1480,6-123, implements-128)
compound(@@-132, HotSwapCompilerPass-129)
compound(@@-132, -LCB--130)
dobj(implements-128, @@-132)
nummod(+1536,9-134, -1529,7-133)
dep(@@-132, +1536,9-134)
amod(ClosureRewriteModule-138, final-136)
compound(ClosureRewriteModule-138, class-137)
nsubj(implements-139, ClosureRewriteModule-138)
parataxis(+1536,9-134, implements-139)
compound(Remove-142, HotSwapCompilerPass-140)
dobj(implements-139, Remove-142)
det(require-144, the-143)
nsubj(node-145, require-144)
acl:relcl(Remove-142, node-145)
mark(reported-151, so-146)
det(problem-148, this-147)
nsubjpass(reported-151, problem-148)
auxpass(reported-151, is-149)
neg(reported-151, n't-150)
advcl(node-145, reported-151)
dep(again-154, all-152)
case(again-154, over-153)
advmod(reported-151, again-154)
case(ProcessClosurePrimitives-156, in-155)
nmod:in(reported-151, ProcessClosurePrimitives-156)
mark(-RCB--164, if-158)
amod(preserveSugar-161, !-160)
nsubj(-RCB--164, preserveSugar-161)
advcl(implements-128, -RCB--164)
dobj(-RCB--164, diff-166)
compound(491e56e-172, git-168)
compound(491e56e-172, a/src/com/google/javascript/jscomp/CompilerOptions.java-169)
compound(491e56e-172, b/src/com/google/javascript/jscomp/CompilerOptions.java-170)
compound(491e56e-172, index-171)
dep(diff-166, 491e56e-172)
nummod(100644-176, .143-174)
amod(100644-176, e935-175)
dobj(make-5, 100644-176)
dobj(make-5, a/src/com/google/javascript/jscomp/CompilerOptions.java-178)
compound(a/src/com/google/javascript/jscomp/CompilerOptions.java-178, +-180)
compound(a/src/com/google/javascript/jscomp/CompilerOptions.java-178, b/src/com/google/javascript/jscomp/CompilerOptions.java-181)
dep(a/src/com/google/javascript/jscomp/CompilerOptions.java-178, @@-182)
nummod(+755,7-184, -755,7-183)
dep(a/src/com/google/javascript/jscomp/CompilerOptions.java-178, +755,7-184)
amod(CompilerOptions-188, public-186)
compound(CompilerOptions-188, class-187)
nsubj(implements-189, CompilerOptions-188)
parataxis(+755,7-184, implements-189)
compound(-LCB--191, Serializable-190)
dobj(implements-189, -LCB--191)
File Name: /src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-07-05T11:54:38-07:00
Time Of Deletion: null
Creation Commit Hash: cd1dd52dbba028a64e3108f8e84accfd9869c0eb
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(bangert): make this compatible with preserveSugar. const B = goog.require('b') runs
Specificity: 0.918111
Content Structure:
root(ROOT-0, bangert-2)
dep(bangert-2, make-5)
det(runs-20, this-6)
amod(runs-20, compatible-7)
case(B-12, with-8)
compound(B-12, preserveSugar-9)
amod(B-12, const-11)
nmod:with(compatible-7, B-12)
dep(goog.require-14, =-13)
dep(B-12, goog.require-14)
dep(compatible-7, b-17)
dobj(make-5, runs-20)
File Name: /src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Type: Incomplete
Content:
(bashir) Check if we need to createSynthesizedExternVar like process.
Specificity: 0.834522
Content Structure:
nsubj(Check-4, bashir-2)
root(ROOT-0, Check-4)
mark(need-7, if-5)
nsubj(need-7, we-6)
nsubj:xsubj(createSynthesizedExternVar-9, we-6)
advcl(Check-4, need-7)
mark(createSynthesizedExternVar-9, to-8)
xcomp(need-7, createSynthesizedExternVar-9)
case(process-11, like-10)
nmod:like(createSynthesizedExternVar-9, process-11)
File Name: ./src/com/google/javascript/jscomp/VarCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir) In hot-swap version this means that for global scope we
only go through all global variables accessed in the modified file not
all global variables. This should be fixed.
Specificity: 0.989999
Content Structure:
dep(means-8, bashir-2)
case(version-6, In-4)
amod(version-6, hot-swap-5)
nmod:in(means-8, version-6)
nsubj(means-8, this-7)
advcl(fixed-33, means-8)
mark(go-15, that-9)
case(scope-12, for-10)
amod(scope-12, global-11)
nmod:for(go-15, scope-12)
nsubj(go-15, we-13)
advmod(go-15, only-14)
ccomp(means-8, go-15)
case(variables-19, through-16)
det(variables-19, all-17)
amod(variables-19, global-18)
nmod:through(go-15, variables-19)
acl(variables-19, accessed-20)
case(file-24, in-21)
det(file-24, the-22)
amod(file-24, modified-23)
nmod:in(accessed-20, file-24)
neg(go-15, not-25)
det(variables-28, all-26)
amod(variables-28, global-27)
nmod:npmod(not-25, variables-28)
nsubjpass(fixed-33, This-30)
aux(fixed-33, should-31)
auxpass(fixed-33, be-32)
root(ROOT-0, fixed-33)
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir) It would be good to extract a single dumb data object with
only getters and setters that keeps all global information we keep for a
compiler instance. Then move some of the functions of this class there.
Specificity: 0.99767
Content Structure:
nsubj(move-33, bashir-2)
nsubj(good-7, It-4)
nsubj:xsubj(extract-9, It-4)
aux(good-7, would-5)
cop(good-7, be-6)
acl:relcl(bashir-2, good-7)
mark(extract-9, to-8)
xcomp(good-7, extract-9)
det(object-14, a-10)
amod(object-14, single-11)
amod(object-14, dumb-12)
compound(object-14, data-13)
dobj(extract-9, object-14)
case(getters-17, with-15)
advmod(getters-17, only-16)
nmod:with(extract-9, getters-17)
nsubj(keeps-21, getters-17)
cc(getters-17, and-18)
nmod:with(extract-9, setters-19)
conj:and(getters-17, setters-19)
nsubj(keeps-21, setters-19)
ref(getters-17, that-20)
acl:relcl(getters-17, keeps-21)
det(information-24, all-22)
amod(information-24, global-23)
dobj(keeps-21, information-24)
nsubj(keep-26, we-25)
acl:relcl(information-24, keep-26)
case(instance-30, for-27)
det(instance-30, a-28)
compound(instance-30, compiler-29)
nmod:for(keep-26, instance-30)
advmod(move-33, Then-32)
root(ROOT-0, move-33)
dobj(move-33, some-34)
case(functions-37, of-35)
det(functions-37, the-36)
nmod:of(some-34, functions-37)
case(class-40, of-38)
det(class-40, this-39)
nmod:of(functions-37, class-40)
advmod(move-33, there-41)
File Name: ./src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir) Maybe implement error-flush functionality in Compiler?
Specificity: 0.750007
Content Structure:
nsubj(implement-5, bashir-2)
advmod(implement-5, Maybe-4)
root(ROOT-0, implement-5)
amod(functionality-7, error-flush-6)
dobj(implement-5, functionality-7)
case(Compiler-9, in-8)
nmod:in(implement-5, Compiler-9)
File Name: ./test/com/google/javascript/jscomp/BaseReplaceScriptTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir) Why the error goes away by adding /**@type {Bar}*/ here?
Specificity: 0.914962
Content Structure:
nsubj(**-12, bashir-2)
advmod(goes-7, Why-4)
det(error-6, the-5)
nsubj(goes-7, error-6)
acl:relcl(bashir-2, goes-7)
compound:prt(goes-7, away-8)
mark(adding-10, by-9)
advcl(goes-7, adding-10)
dobj(adding-10, /-11)
root(ROOT-0, **-12)
compound(Bar-15, @type-13)
dobj(**-12, Bar-15)
dep(here-19, *-17)
dep(**-12, here-19)
File Name: ./test/com/google/javascript/jscomp/SimpleReplaceScriptTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): If in future most of PassFactory's in DefaultPassConfig
turns out to be DefaultPassConfig.HotSwapPassFactory, we should probably
change the implementation here by the one in HotSwapPassFactory.
Specificity: 0.993876
Content Structure:
root(ROOT-0, bashir-2)
mark(turns-14, If-5)
case(future-7, in-6)
nmod:in(turns-14, future-7)
nsubj(turns-14, most-8)
nsubj:xsubj(DefaultPassConfig.HotSwapPassFactory-18, most-8)
case(PassFactory-10, of-9)
nmod:'s(most-8, PassFactory-10)
case(PassFactory-10, 's-11)
case(DefaultPassConfig-13, in-12)
nmod:in(most-8, DefaultPassConfig-13)
advcl(change-23, turns-14)
compound:prt(turns-14, out-15)
mark(DefaultPassConfig.HotSwapPassFactory-18, to-16)
cop(DefaultPassConfig.HotSwapPassFactory-18, be-17)
xcomp(turns-14, DefaultPassConfig.HotSwapPassFactory-18)
nsubj(change-23, we-20)
aux(change-23, should-21)
advmod(change-23, probably-22)
dep(bashir-2, change-23)
det(implementation-25, the-24)
dobj(change-23, implementation-25)
advmod(change-23, here-26)
case(one-29, by-27)
det(one-29, the-28)
nmod:by(change-23, one-29)
case(HotSwapPassFactory-31, in-30)
nmod:in(one-29, HotSwapPassFactory-31)
File Name: ./src/com/google/javascript/jscomp/PassFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): If this is too slow it is not too difficult to make it
faster with keeping an index for variables accessed in sourceName.
Specificity: 0.973387
Content Structure:
dep(difficult-14, bashir-2)
mark(slow-9, If-5)
nsubj(slow-9, this-6)
cop(slow-9, is-7)
advmod(slow-9, too-8)
advcl(difficult-14, slow-9)
nsubj(difficult-14, it-10)
nsubj:xsubj(make-16, it-10)
cop(difficult-14, is-11)
neg(difficult-14, not-12)
advmod(difficult-14, too-13)
root(ROOT-0, difficult-14)
mark(make-16, to-15)
xcomp(difficult-14, make-16)
dobj(make-16, it-17)
advmod(make-16, faster-18)
mark(keeping-20, with-19)
advcl(make-16, keeping-20)
det(index-22, an-21)
dobj(keeping-20, index-22)
case(variables-24, for-23)
nmod:for(index-22, variables-24)
acl(variables-24, accessed-25)
case(sourceName-27, in-26)
nmod:in(accessed-25, sourceName-27)
File Name: ./src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): Implement a real hot-swap version instead and make it fully
consistent with the full version.
Specificity: 0.896394
Content Structure:
root(ROOT-0, bashir-2)
dep(bashir-2, Implement-5)
det(version-9, a-6)
amod(version-9, real-7)
amod(version-9, hot-swap-8)
dobj(Implement-5, version-9)
advmod(Implement-5, instead-10)
cc(Implement-5, and-11)
dep(bashir-2, make-12)
conj:and(Implement-5, make-12)
nsubj(consistent-15, it-13)
advmod(consistent-15, fully-14)
xcomp(make-12, consistent-15)
case(version-19, with-16)
det(version-19, the-17)
amod(version-19, full-18)
nmod:with(Implement-5, version-19)
File Name: ./src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): Variable declaration is not the only side effect of last
global scope generation but here we only wipe that part off.
Specificity: 0.960253
Content Structure:
nsubj(effect-12, bashir-2)
amod(declaration-6, Variable-5)
dep(bashir-2, declaration-6)
cop(effect-12, is-7)
neg(effect-12, not-8)
det(effect-12, the-9)
amod(effect-12, only-10)
compound(effect-12, side-11)
root(ROOT-0, effect-12)
case(generation-17, of-13)
amod(generation-17, last-14)
amod(generation-17, global-15)
compound(generation-17, scope-16)
nmod:of(effect-12, generation-17)
cc(effect-12, but-18)
advmod(wipe-22, here-19)
nsubj(wipe-22, we-20)
advmod(wipe-22, only-21)
conj:but(effect-12, wipe-22)
det(part-24, that-23)
dobj(wipe-22, part-24)
compound:prt(wipe-22, off-25)
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): We can do binary search here, but since this is fast enough
right now, we just do a linear search for simplicity.
Specificity: 0.974066
Content Structure:
root(ROOT-0, bashir-2)
nsubj(do-7, We-5)
aux(do-7, can-6)
dep(bashir-2, do-7)
amod(search-9, binary-8)
dobj(do-7, search-9)
advmod(do-7, here-10)
cc(do-7, but-12)
mark(is-15, since-13)
nsubj(is-15, this-14)
advcl(do-23, is-15)
advmod(right-18, fast-16)
advmod(right-18, enough-17)
advmod(is-15, right-18)
advmod(is-15, now-19)
nsubj(do-23, we-21)
advmod(do-23, just-22)
dep(bashir-2, do-23)
conj:but(do-7, do-23)
det(search-26, a-24)
amod(search-26, linear-25)
dobj(do-23, search-26)
case(simplicity-28, for-27)
nmod:for(search-26, simplicity-28)
File Name: ./src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bashir): typesIndexedByProperty should also be updated!
Specificity: 0.77643
Content Structure:
dep(updated-9, bashir-2)
advmod(updated-9, typesIndexedByProperty-5)
aux(updated-9, should-6)
advmod(updated-9, also-7)
cop(updated-9, be-8)
root(ROOT-0, updated-9)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bellashim): Add a non-transpiling version of this test when InlineFunctions
can run in that mode.
Specificity: 0.899654
Content Structure:
dep(Add-5, bellashim-2)
root(ROOT-0, Add-5)
det(version-8, a-6)
amod(version-8, non-transpiling-7)
dobj(Add-5, version-8)
case(test-11, of-9)
det(test-11, this-10)
nmod:of(version-8, test-11)
det(mode-18, test-11)
advmod(run-15, when-12)
nsubj(run-15, InlineFunctions-13)
aux(run-15, can-14)
acl:relcl(test-11, run-15)
case(mode-18, in-16)
ref(test-11, that-17)
nmod:in(run-15, mode-18)
File Name: /test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-19T14:34:51-07:00
Time Of Deletion: null
Creation Commit Hash: 183c87fcc132255d2f89b7206c9feb1d6fc768cb
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(bellashim):Make the test below pass
Specificity: 0.728811
Content Structure:
root(ROOT-0, bellashim-2)
dep(bellashim-2, Make-5)
det(test-7, the-6)
dobj(Make-5, test-7)
case(pass-9, below-8)
nmod:below(Make-5, pass-9)
File Name: /test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-19T14:34:51-07:00
Time Of Deletion: 2017-06-26T10:13:08-07:00
Creation Commit Hash: 183c87fcc132255d2f89b7206c9feb1d6fc768cb
Deletion Commit Hash: 24703f9fd91d42778a5a83c49db8b5d58078154e
Time To Complete: P7D; PT-4H-21M-43S

Type: Incomplete
Content:
(blickly): Add support for @final annotation to NTI.
Specificity: 0.813976
Content Structure:
root(ROOT-0, blickly-2)
amod(support-6, Add-5)
dep(blickly-2, support-6)
case(annotation-9, for-7)
amod(annotation-9, @final-8)
nmod:for(support-6, annotation-9)
case(NTI-11, to-10)
nmod:to(annotation-9, NTI-11)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Allow TypeScript syntax in arrow function parameters
Specificity: 0.802705
Content Structure:
root(ROOT-0, blickly-2)
compound(syntax-7, Allow-5)
compound(syntax-7, TypeScript-6)
dep(blickly-2, syntax-7)
case(parameters-11, in-8)
compound(parameters-11, arrow-9)
compound(parameters-11, function-10)
nmod:in(syntax-7, parameters-11)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Can we optimize this to skip unnecessary iterations?
Specificity: 0.78259
Content Structure:
root(ROOT-0, blickly-2)
aux(optimize-7, Can-5)
nsubj(optimize-7, we-6)
dep(blickly-2, optimize-7)
dobj(optimize-7, this-8)
nsubj:xsubj(skip-10, this-8)
mark(skip-10, to-9)
xcomp(optimize-7, skip-10)
amod(iterations-12, unnecessary-11)
dobj(skip-10, iterations-12)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Can we optimize this to skip unnecessary iterations?
Specificity: 0.78259
Content Structure:
root(ROOT-0, blickly-2)
aux(optimize-7, Can-5)
nsubj(optimize-7, we-6)
dep(blickly-2, optimize-7)
dobj(optimize-7, this-8)
nsubj:xsubj(skip-10, this-8)
mark(skip-10, to-9)
xcomp(optimize-7, skip-10)
amod(iterations-12, unnecessary-11)
dobj(skip-10, iterations-12)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Catching the INVALID_ARGUMENT_TYPE here requires
return-type unification.
Specificity: 0.974977
Content Structure:
root(ROOT-0, blickly-2)
csubj(requires-9, Catching-5)
det(INVALID_ARGUMENT_TYPE-7, the-6)
dobj(Catching-5, INVALID_ARGUMENT_TYPE-7)
advmod(Catching-5, here-8)
dep(blickly-2, requires-9)
amod(unification-11, return-type-10)
dobj(requires-9, unification-11)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Consider a warning if RHS doesn't contain ||
Specificity: 0.833211
Content Structure:
root(ROOT-0, blickly-2)
dep(blickly-2, Consider-5)
det(warning-7, a-6)
dobj(Consider-5, warning-7)
mark(contain-12, if-8)
nsubj(contain-12, RHS-9)
aux(contain-12, does-10)
neg(contain-12, n't-11)
advcl(Consider-5, contain-12)
amod(|-14, |-13)
dobj(contain-12, |-14)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Currently, this warning is not good, referring to props of
BOTTOM. Ideally, we could warn about accessing a prop on undefined.
Specificity: 0.984941
Content Structure:
root(ROOT-0, blickly-2)
advmod(good-11, Currently-5)
det(warning-8, this-7)
nsubj(good-11, warning-8)
cop(good-11, is-9)
neg(good-11, not-10)
ccomp(warn-23, good-11)
xcomp(good-11, referring-13)
case(props-15, to-14)
nmod:to(referring-13, props-15)
case(BOTTOM-17, of-16)
nmod:of(props-15, BOTTOM-17)
advmod(BOTTOM-17, Ideally-19)
nsubj(warn-23, we-21)
aux(warn-23, could-22)
dep(blickly-2, warn-23)
mark(accessing-25, about-24)
advcl(warn-23, accessing-25)
det(prop-27, a-26)
dobj(accessing-25, prop-27)
case(undefined-29, on-28)
advcl(accessing-25, undefined-29)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Distinguish between undeclared varargs and no varargs.
Specificity: 0.762612
Content Structure:
root(ROOT-0, blickly-2)
dep(blickly-2, Distinguish-5)
case(varargs-8, between-6)
amod(varargs-8, undeclared-7)
nmod:between(Distinguish-5, varargs-8)
cc(varargs-8, and-9)
neg(varargs-11, no-10)
nmod:between(Distinguish-5, varargs-11)
conj:and(varargs-8, varargs-11)
File Name: ./src/com/google/javascript/jscomp/newtypes/DeclaredFunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Do we need instantiation here?
Specificity: 0.72899
Content Structure:
root(ROOT-0, blickly-2)
aux(need-7, Do-5)
nsubj(need-7, we-6)
dep(blickly-2, need-7)
dobj(need-7, instantiation-8)
advmod(need-7, here-9)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Do we need instatiation here?
Specificity: 0.729193
Content Structure:
root(ROOT-0, blickly-2)
aux(need-7, Do-5)
nsubj(need-7, we-6)
dep(blickly-2, need-7)
dobj(need-7, instatiation-8)
advmod(need-7, here-9)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Infer a loose type for THIS if we're in a function.
Specificity: 0.895159
Content Structure:
dep(Infer-5, blickly-2)
root(ROOT-0, Infer-5)
det(type-8, a-6)
amod(type-8, loose-7)
dobj(Infer-5, type-8)
case(THIS-10, for-9)
nmod:for(Infer-5, THIS-10)
mark(function-16, if-11)
nsubj(function-16, we-12)
cop(function-16, 're-13)
case(function-16, in-14)
det(function-16, a-15)
advcl(Infer-5, function-16)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Investigate why the method's type isn't preserved.
Specificity: 0.781075
Content Structure:
root(ROOT-0, blickly-2)
dep(blickly-2, Investigate-5)
advmod(preserved-13, why-6)
det(method-8, the-7)
nmod:poss(type-10, method-8)
case(method-8, 's-9)
nsubjpass(preserved-13, type-10)
auxpass(preserved-13, is-11)
neg(preserved-13, n't-12)
acl:relcl(Investigate-5, preserved-13)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): It would be better not to be renaming detached nodes
Specificity: 0.812582
Content Structure:
root(ROOT-0, blickly-2)
dep(blickly-2, It-5)
aux(better-8, would-6)
cop(better-8, be-7)
acl:relcl(It-5, better-8)
neg(renaming-12, not-9)
mark(renaming-12, to-10)
aux(renaming-12, be-11)
xcomp(better-8, renaming-12)
amod(nodes-14, detached-13)
dobj(renaming-12, nodes-14)
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
and remove this special case.
Specificity: 0.975791
Content Structure:
dep(Make-5, blickly-2)
root(ROOT-0, Make-5)
det(SIDE_EFFECT_PREDICATE-7, the-6)
nsubj(check-8, SIDE_EFFECT_PREDICATE-7)
nsubj(remove-12, SIDE_EFFECT_PREDICATE-7)
ccomp(Make-5, check-8)
advmod(exact-10, more-9)
xcomp(check-8, exact-10)
cc(check-8, and-11)
ccomp(Make-5, remove-12)
conj:and(check-8, remove-12)
det(case-15, this-13)
amod(case-15, special-14)
dobj(remove-12, case-15)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
and remove this special case.
Specificity: 0.975791
Content Structure:
dep(Make-5, blickly-2)
root(ROOT-0, Make-5)
det(SIDE_EFFECT_PREDICATE-7, the-6)
nsubj(check-8, SIDE_EFFECT_PREDICATE-7)
nsubj(remove-12, SIDE_EFFECT_PREDICATE-7)
ccomp(Make-5, check-8)
advmod(exact-10, more-9)
xcomp(check-8, exact-10)
cc(check-8, and-11)
ccomp(Make-5, remove-12)
conj:and(check-8, remove-12)
det(case-15, this-13)
amod(case-15, special-14)
dobj(remove-12, case-15)
File Name: /src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-27T10:58:06-07:00
Time Of Deletion: null
Creation Commit Hash: f07f6a22314d14577f2c4e44688b355577e11c41
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Make this warning go away.
This is old behavior, but it doesn't make sense to warn about since
both assignments are inferred.

Specificity: 0.978618
Content Structure:
dep(behavior-14, blickly-2)
parataxis(behavior-14, Make-5)
det(warning-7, this-6)
nsubj(go-8, warning-7)
ccomp(Make-5, go-8)
compound:prt(go-8, away-9)
nsubj(behavior-14, This-11)
cop(behavior-14, is-12)
amod(behavior-14, old-13)
root(ROOT-0, behavior-14)
cc(make-20, but-16)
nsubj(make-20, it-17)
aux(make-20, does-18)
neg(make-20, n't-19)
dep(behavior-14, make-20)
dobj(make-20, sense-21)
mark(warn-23, to-22)
advcl(make-20, warn-23)
compound:prt(warn-23, about-24)
mark(inferred-29, since-25)
det(assignments-27, both-26)
nsubjpass(inferred-29, assignments-27)
auxpass(inferred-29, are-28)
advcl(warn-23, inferred-29)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Move this code to CodingConvention so that
it's possible to define alternate ways of defining properties.
Specificity: 0.933368
Content Structure:
dep(Move-5, blickly-2)
root(ROOT-0, Move-5)
det(code-7, this-6)
dobj(Move-5, code-7)
case(CodingConvention-9, to-8)
nmod:to(Move-5, CodingConvention-9)
mark(possible-14, so-10)
mwe(so-10, that-11)
nsubj(possible-14, it-12)
nsubj:xsubj(define-16, it-12)
cop(possible-14, 's-13)
advcl(Move-5, possible-14)
mark(define-16, to-15)
xcomp(possible-14, define-16)
amod(ways-18, alternate-17)
dobj(define-16, ways-18)
case(properties-21, of-19)
amod(properties-21, defining-20)
nmod:of(ways-18, properties-21)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Move to NodeUtil if it makes more sense there.
Specificity: 0.836283
Content Structure:
dep(Move-5, blickly-2)
root(ROOT-0, Move-5)
case(NodeUtil-7, to-6)
nmod:to(Move-5, NodeUtil-7)
mark(makes-10, if-8)
nsubj(makes-10, it-9)
advcl(Move-5, makes-10)
amod(sense-12, more-11)
dobj(makes-10, sense-12)
advmod(makes-10, there-13)
File Name: ./src/com/google/javascript/jscomp/ConvertToTypedInterface.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Preserve the declaration order of the this properties.
Specificity: 0.782282
Content Structure:
dep(Preserve-5, blickly-2)
root(ROOT-0, Preserve-5)
det(order-8, the-6)
compound(order-8, declaration-7)
dobj(Preserve-5, order-8)
case(properties-12, of-9)
det:predet(properties-12, the-10)
det(properties-12, this-11)
nmod:of(order-8, properties-12)
File Name: ./src/com/google/javascript/jscomp/ConvertToTypedInterface.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Reenable these once module rewriting happens after Typescript transpilation.
Specificity: 0.815934
Content Structure:
dep(Reenable-5, blickly-2)
root(ROOT-0, Reenable-5)
det(rewriting-9, these-6)
advmod(module-8, once-7)
amod(rewriting-9, module-8)
nsubj(happens-10, rewriting-9)
ccomp(Reenable-5, happens-10)
case(transpilation-13, after-11)
compound(transpilation-13, Typescript-12)
nmod:after(happens-10, transpilation-13)
File Name: /test/com/google/javascript/jscomp/Es6TypedToEs6ConverterTest.java
Time Of Creation: 2017-05-31T18:12:17-07:00
Time Of Deletion: null
Creation Commit Hash: 83681e4e50fe1abfd1d08074cb3d89fd851f35fe
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Remove these suppressions when all externs declarations on window are gone.
Specificity: 0.837415
Content Structure:
dep(Remove-5, blickly-2)
root(ROOT-0, Remove-5)
det(suppressions-7, these-6)
dobj(Remove-5, suppressions-7)
advmod(gone-15, when-8)
det(declarations-11, all-9)
amod(declarations-11, externs-10)
nsubjpass(gone-15, declarations-11)
case(window-13, on-12)
nmod:on(declarations-11, window-13)
auxpass(gone-15, are-14)
advcl(Remove-5, gone-15)
File Name: ./src/com/google/javascript/jscomp/DeclaredGlobalExternsOnWindow.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Separate this so it can be part of the normalization early transpilation passes.
Specificity: 0.871925
Content Structure:
dep(passes-17, blickly-2)
nsubj(passes-17, Separate-5)
dep(Separate-5, this-6)
mark(part-11, so-7)
nsubj(part-11, it-8)
aux(part-11, can-9)
cop(part-11, be-10)
dep(Separate-5, part-11)
case(transpilation-16, of-12)
det(transpilation-16, the-13)
amod(transpilation-16, normalization-14)
amod(transpilation-16, early-15)
nmod:of(part-11, transpilation-16)
root(ROOT-0, passes-17)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): The fact that this has no warnings is somewhat unpleasant.
Specificity: 0.820638
Content Structure:
dep(unpleasant-14, blickly-2)
det(fact-6, The-5)
nsubj(unpleasant-14, fact-6)
mark(has-9, that-7)
nsubj(has-9, this-8)
dep(fact-6, has-9)
neg(warnings-11, no-10)
dobj(has-9, warnings-11)
cop(unpleasant-14, is-12)
advmod(unpleasant-14, somewhat-13)
root(ROOT-0, unpleasant-14)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Warn if function in externs has body
Specificity: 0.760489
Content Structure:
root(ROOT-0, blickly-2)
dep(blickly-2, Warn-5)
mark(has-10, if-6)
nsubj(has-10, function-7)
case(externs-9, in-8)
nmod:in(function-7, externs-9)
dep(blickly-2, has-10)
dobj(has-10, body-11)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): We should warn for this as well, but it's harder to detect.
Specificity: 0.877643
Content Structure:
root(ROOT-0, blickly-2)
nsubj(warn-7, We-5)
aux(warn-7, should-6)
dep(blickly-2, warn-7)
case(this-9, for-8)
nmod:for(warn-7, this-9)
advmod(warn-7, as-10)
mwe(as-10, well-11)
cc(warn-7, but-13)
nsubj(harder-16, it-14)
nsubj:xsubj(detect-18, it-14)
cop(harder-16, 's-15)
dep(blickly-2, harder-16)
conj:but(warn-7, harder-16)
mark(detect-18, to-17)
xcomp(harder-16, detect-18)
File Name: ./test/com/google/javascript/jscomp/ClosureRewriteModuleTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): We would like to find the parameter mismatch here.
Currently they match with type WithProp<?>, which is somewhat unsatisfying.
Specificity: 0.975833
Content Structure:
nsubj(Currently-15, blickly-2)
nsubj(like-7, We-5)
nsubj:xsubj(find-9, We-5)
aux(like-7, would-6)
dep(blickly-2, like-7)
mark(find-9, to-8)
xcomp(like-7, find-9)
det(mismatch-12, the-10)
compound(mismatch-12, parameter-11)
dobj(find-9, mismatch-12)
advmod(find-9, here-13)
root(ROOT-0, Currently-15)
nsubj(match-17, they-16)
ccomp(Currently-15, match-17)
case(type-19, with-18)
nmod:with(match-17, type-19)
compound(>-23, WithProp-20)
compound(>-23, <-21)
dobj(match-17, >-23)
nsubj(unsatisfying-28, >-23)
ref(>-23, which-25)
cop(unsatisfying-28, is-26)
advmod(unsatisfying-28, somewhat-27)
acl:relcl(>-23, unsatisfying-28)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Would be nice if we caught the MISTYPED_ASSIGN_RHS here
Specificity: 0.971291
Content Structure:
root(ROOT-0, blickly-2)
aux(nice-7, Would-5)
cop(nice-7, be-6)
dep(blickly-2, nice-7)
mark(caught-10, if-8)
nsubj(caught-10, we-9)
advcl(nice-7, caught-10)
det(MISTYPED_ASSIGN_RHS-12, the-11)
dobj(caught-10, MISTYPED_ASSIGN_RHS-12)
advmod(caught-10, here-13)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): Would be nice not to warn here,
even if it means missing the warning below
Specificity: 0.902459
Content Structure:
root(ROOT-0, blickly-2)
aux(nice-7, Would-5)
cop(nice-7, be-6)
dep(blickly-2, nice-7)
neg(warn-10, not-8)
mark(warn-10, to-9)
dep(nice-7, warn-10)
advmod(warn-10, here-11)
advmod(means-16, even-13)
mark(means-16, if-14)
nsubj(means-16, it-15)
advcl(warn-10, means-16)
xcomp(means-16, missing-17)
det(warning-19, the-18)
dobj(missing-17, warning-19)
advmod(missing-17, below-20)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(blickly): determine if we can parse this without the
overhead of forking the parser.
Specificity: 0.861456
Content Structure:
dep(determine-5, blickly-2)
root(ROOT-0, determine-5)
mark(parse-9, if-6)
nsubj(parse-9, we-7)
aux(parse-9, can-8)
advcl(determine-5, parse-9)
dobj(parse-9, this-10)
case(overhead-13, without-11)
det(overhead-13, the-12)
nmod:without(parse-9, overhead-13)
mark(forking-15, of-14)
acl(overhead-13, forking-15)
det(parser-17, the-16)
dobj(forking-15, parser-17)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Allowing null id is less ideal. Add checkNotNull(id) here and fix
call sites that break.
Specificity: 0.965571
Content Structure:
nsubj(Add-12, bradfordcsmith-2)
nsubj(fix-19, bradfordcsmith-2)
amod(id-7, Allowing-5)
amod(id-7, null-6)
nsubj(ideal-10, id-7)
cop(ideal-10, is-8)
advmod(ideal-10, less-9)
dep(bradfordcsmith-2, ideal-10)
root(ROOT-0, Add-12)
dobj(Add-12, checkNotNull-13)
appos(checkNotNull-13, id-15)
advmod(Add-12, here-17)
cc(Add-12, and-18)
conj:and(Add-12, fix-19)
compound(sites-21, call-20)
dobj(fix-19, sites-21)
nsubj(break-23, sites-21)
ref(sites-21, that-22)
acl:relcl(sites-21, break-23)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Although unlikely, super() could have argument expressions with
side-effects.
Specificity: 0.881243
Content Structure:
dep(have-12, bradfordcsmith-2)
mark(unlikely-6, Although-5)
advcl(have-12, unlikely-6)
amod(-LRB--9, super-8)
nsubj(have-12, -LRB--9)
aux(have-12, could-11)
root(ROOT-0, have-12)
compound(expressions-14, argument-13)
dobj(have-12, expressions-14)
case(side-effects-16, with-15)
nmod:with(expressions-14, side-effects-16)
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Avoid creating data for non-constructor functions.
Specificity: 0.728814
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, Avoid-5)
acl(Avoid-5, creating-6)
dobj(creating-6, data-7)
case(functions-10, for-8)
amod(functions-10, non-constructor-9)
nmod:for(data-7, functions-10)
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Investigate how can we use multi-threads as default.
Specificity: 0.769948
Content Structure:
dep(Investigate-5, bradfordcsmith-2)
root(ROOT-0, Investigate-5)
advmod(use-9, how-6)
aux(use-9, can-7)
nsubj(use-9, we-8)
dep(Investigate-5, use-9)
dobj(use-9, multi-threads-10)
case(default-12, as-11)
nmod:as(use-9, default-12)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Just check for a single module instead of null.

Specificity: 0.801887
Content Structure:
dep(check-6, bradfordcsmith-2)
advmod(check-6, Just-5)
root(ROOT-0, check-6)
case(module-10, for-7)
det(module-10, a-8)
amod(module-10, single-9)
nmod:for(check-6, module-10)
case(null-13, instead-11)
mwe(instead-11, of-12)
nmod:instead_of(module-10, null-13)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Make sure all of the type syntax handling code is avoided when
this is false.
Specificity: 0.901816
Content Structure:
dep(Make-5, bradfordcsmith-2)
root(ROOT-0, Make-5)
xcomp(Make-5, sure-6)
nsubjpass(avoided-15, all-7)
case(code-13, of-8)
det(code-13, the-9)
compound(code-13, type-10)
compound(code-13, syntax-11)
compound(code-13, handling-12)
nmod:of(all-7, code-13)
auxpass(avoided-15, is-14)
ccomp(sure-6, avoided-15)
advmod(false-19, when-16)
nsubj(false-19, this-17)
cop(false-19, is-18)
advcl(avoided-15, false-19)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Should we be ignoring possible init/initModules() errors here?
Specificity: 0.874946
Content Structure:
root(ROOT-0, bradfordcsmith-2)
aux(ignoring-8, Should-5)
nsubj(ignoring-8, we-6)
aux(ignoring-8, be-7)
dep(bradfordcsmith-2, ignoring-8)
advmod(errors-13, possible-9)
amod(errors-13, init/initModules-10)
compound(errors-13, -LRB--11)
nmod(ignoring-8, errors-13)
advmod(ignoring-8, here-14)
File Name: ./src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): Some complex cases still aren't covered, like
if (...) { super(); arrow function } else { super(); }
Specificity: 0.994066
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, Some-5)
amod(cases-7, complex-6)
nsubjpass(covered-11, cases-7)
advmod(covered-11, still-8)
auxpass(covered-11, are-9)
neg(covered-11, n't-10)
acl:relcl(Some-5, covered-11)
parataxis(covered-11, like-13)
case(...-16, if-14)
nmod:if(covered-11, ...-16)
amod(-LRB--20, super-19)
dep(...-16, -LRB--20)
amod(else-26, arrow-23)
compound(else-26, function-24)
dep(...-16, else-26)
amod(-LRB--29, super-28)
dep(else-26, -LRB--29)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteArrowFunction.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): The option to instrument for coverage only should belong to the
runner, not the compiler.
Specificity: 0.909976
Content Structure:
dep(belong-13, bradfordcsmith-2)
det(option-6, The-5)
nsubj(belong-13, option-6)
case(instrument-8, to-7)
nmod:to(option-6, instrument-8)
case(coverage-10, for-9)
nmod:for(instrument-8, coverage-10)
advmod(coverage-10, only-11)
aux(belong-13, should-12)
root(ROOT-0, belong-13)
case(runner-16, to-14)
det(runner-16, the-15)
nmod:to(belong-13, runner-16)
neg(compiler-20, not-18)
det(compiler-20, the-19)
appos(runner-16, compiler-20)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): This marking is really about how variable scoping is handled during
type checking. It should really be handled in a more direct fashion.
Specificity: 0.976304
Content Structure:
dep(is-7, bradfordcsmith-2)
nsubj(is-7, This-5)
acl(This-5, marking-6)
root(ROOT-0, is-7)
advmod(is-7, really-8)
mark(handled-23, about-9)
advmod(handled-14, how-10)
amod(scoping-12, variable-11)
nsubjpass(handled-14, scoping-12)
auxpass(handled-14, is-13)
advcl(handled-23, handled-14)
case(checking-17, during-15)
compound(checking-17, type-16)
nmod:during(handled-14, checking-17)
nsubjpass(handled-23, It-19)
aux(handled-23, should-20)
advmod(handled-23, really-21)
auxpass(handled-23, be-22)
advcl(is-7, handled-23)
case(fashion-28, in-24)
det(fashion-28, a-25)
advmod(direct-27, more-26)
amod(fashion-28, direct-27)
nmod:in(handled-23, fashion-28)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): What cases are these? Can we do better?
Specificity: 0.809727
Content Structure:
nsubj(Can-10, bradfordcsmith-2)
nsubj(these-8, What-5)
dep(What-5, cases-6)
cop(these-8, are-7)
dep(bradfordcsmith-2, these-8)
root(ROOT-0, Can-10)
nsubj(do-12, we-11)
ccomp(Can-10, do-12)
advmod(do-12, better-13)
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): handle LET and CONST
Specificity: 0.903593
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, handle-5)
dobj(handle-5, LET-6)
cc(LET-6, and-7)
dobj(handle-5, CONST-8)
conj:and(LET-6, CONST-8)
File Name: /src/com/google/javascript/jscomp/CrossModuleReferenceCollector.java
Time Of Creation: 2017-06-14T13:45:27-07:00
Time Of Deletion: null
Creation Commit Hash: eed83c1596fd42fb99f051d6a22ecd0a7ea62b14
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): handle async functions here
Specificity: 0.680552
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, handle-5)
amod(functions-7, async-6)
dobj(handle-5, functions-7)
advmod(handle-5, here-8)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): handle cases like `goog.inherits(x.ChildClass, SuperClass)`
Specificity: 0.877457
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, handle-5)
nsubj(like-7, cases-6)
ccomp(handle-5, like-7)
xcomp(like-7, goog.inherits-9)
dep(goog.inherits-9, x.ChildClass-11)
dep(x.ChildClass-11, SuperClass-13)
File Name: /src/com/google/javascript/jscomp/CrossModuleReferenceCollector.java
Time Of Creation: 2017-06-14T13:45:27-07:00
Time Of Deletion: null
Creation Commit Hash: eed83c1596fd42fb99f051d6a22ecd0a7ea62b14
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): lastSourcePosition should really point to the end of the last token
before the tree to correctly detect implicit semicolons, but it doesn't matter for the
current use case.
Specificity: 0.991289
Content Structure:
root(ROOT-0, bradfordcsmith-2)
nsubj(point-8, lastSourcePosition-5)
aux(point-8, should-6)
advmod(point-8, really-7)
dep(bradfordcsmith-2, point-8)
case(end-11, to-9)
det(end-11, the-10)
nmod:to(point-8, end-11)
case(token-15, of-12)
det(token-15, the-13)
amod(token-15, last-14)
nmod:of(end-11, token-15)
case(tree-18, before-16)
det(tree-18, the-17)
nmod:before(point-8, tree-18)
mark(detect-21, to-19)
advmod(detect-21, correctly-20)
acl(tree-18, detect-21)
amod(semicolons-23, implicit-22)
dobj(detect-21, semicolons-23)
cc(point-8, but-25)
nsubj(matter-29, it-26)
aux(matter-29, does-27)
neg(matter-29, n't-28)
dep(bradfordcsmith-2, matter-29)
conj:but(point-8, matter-29)
case(case-34, for-30)
det(case-34, the-31)
amod(case-34, current-32)
compound(case-34, use-33)
nmod:for(matter-29, case-34)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(bradfordcsmith): new.target in global scope should be a syntax error
Specificity: 0.762502
Content Structure:
root(ROOT-0, bradfordcsmith-2)
dep(bradfordcsmith-2, new.target-5)
case(scope-8, in-6)
amod(scope-8, global-7)
nmod:in(new.target-5, scope-8)
aux(error-13, should-9)
cop(error-13, be-10)
det(error-13, a-11)
compound(error-13, syntax-12)
acl:relcl(new.target-5, error-13)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(brndn): by contrast, isPrivateAccessAllowed does allow
private access when a source file is unknown. I didn't change it
in order not to break existing code.
Specificity: 0.986567
Content Structure:
nsubj(change-23, brndn-2)
case(contrast-6, by-5)
nmod:by(brndn-2, contrast-6)
dep(does-9, isPrivateAccessAllowed-8)
parataxis(change-23, does-9)
ccomp(does-9, allow-10)
amod(access-12, private-11)
dobj(allow-10, access-12)
advmod(unknown-18, when-13)
det(file-16, a-14)
compound(file-16, source-15)
nsubj(unknown-18, file-16)
cop(unknown-18, is-17)
advcl(allow-10, unknown-18)
nsubj(change-23, I-20)
aux(change-23, did-21)
neg(change-23, n't-22)
root(ROOT-0, change-23)
dobj(change-23, it-24)
acl(it-24, in-25)
mwe(in-25, order-26)
neg(break-29, not-27)
mark(break-29, to-28)
acl(it-24, break-29)
amod(code-31, existing-30)
dobj(break-29, code-31)
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(brndn): it is possible to be less conservative. If the classNode is DECOMPOSABLE,
we could use the expression decomposer to move it out of the way.
Specificity: 0.993079
Content Structure:
root(ROOT-0, brndn-2)
nsubj(possible-7, it-5)
nsubj:xsubj(less-10, it-5)
cop(possible-7, is-6)
dep(brndn-2, possible-7)
mark(less-10, to-8)
cop(less-10, be-9)
xcomp(possible-7, less-10)
dep(DECOMPOSABLE-17, conservative-11)
mark(DECOMPOSABLE-17, If-13)
det(classNode-15, the-14)
nsubj(DECOMPOSABLE-17, classNode-15)
cop(DECOMPOSABLE-17, is-16)
advcl(use-21, DECOMPOSABLE-17)
nsubj(use-21, we-19)
aux(use-21, could-20)
ccomp(less-10, use-21)
det(decomposer-24, the-22)
compound(decomposer-24, expression-23)
dobj(use-21, decomposer-24)
mark(move-26, to-25)
advcl(use-21, move-26)
dobj(move-26, it-27)
compound:prt(move-26, out-28)
case(way-31, of-29)
det(way-31, the-30)
nmod:of(move-26, way-31)
File Name: ./src/com/google/javascript/jscomp/Es6ExtractClasses.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dankurka): Switch to our general util once available
JsMethod to prevent mangling
Specificity: 0.85741
Content Structure:
root(ROOT-0, dankurka-2)
dep(dankurka-2, Switch-5)
case(util-9, to-6)
nmod:poss(util-9, our-7)
amod(util-9, general-8)
nmod:to(Switch-5, util-9)
advmod(available-11, once-10)
amod(util-9, available-11)
acl(util-9, JsMethod-12)
mark(prevent-14, to-13)
xcomp(JsMethod-12, prevent-14)
dobj(prevent-14, mangling-15)
File Name: ./src/com/google/debugging/sourcemap/SourceMapObjectParserJs.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dankurka): Use elemental2 here once available
Specificity: 0.726779
Content Structure:
root(ROOT-0, dankurka-2)
compound(elemental2-6, Use-5)
dep(dankurka-2, elemental2-6)
advmod(once-8, here-7)
advmod(available-9, once-8)
amod(elemental2-6, available-9)
File Name: ./src/com/google/debugging/sourcemap/SourceMapObjectParserJs.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dbeam): support cr.exportPath('ns').value.
Specificity: 0.823158
Content Structure:
nsubj(value-13, dbeam-2)
dep(dbeam-2, support-5)
dobj(support-5, cr.exportPath-6)
dep(cr.exportPath-6, ns-9)
root(ROOT-0, value-13)
File Name: ./src/com/google/javascript/jscomp/ChromePass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc) This modifies the siblings of n, which is undesirable for a
peephole optimization. This should probably get moved to another pass.

Specificity: 0.967087
Content Structure:
dep(modifies-5, dcc-2)
nsubj(modifies-5, This-4)
advcl(moved-23, modifies-5)
det(siblings-7, the-6)
dobj(modifies-5, siblings-7)
case(n-9, of-8)
nmod:of(siblings-7, n-9)
nsubj(undesirable-13, n-9)
ref(n-9, which-11)
cop(undesirable-13, is-12)
acl:relcl(n-9, undesirable-13)
case(optimization-17, for-14)
det(optimization-17, a-15)
amod(optimization-17, peephole-16)
nmod:for(undesirable-13, optimization-17)
nsubjpass(moved-23, This-19)
aux(moved-23, should-20)
advmod(moved-23, probably-21)
auxpass(moved-23, get-22)
root(ROOT-0, moved-23)
case(pass-26, to-24)
det(pass-26, another-25)
nmod:to(moved-23, pass-26)
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Add per-function side effects summaries.
Specificity: 0.712749
Content Structure:
root(ROOT-0, dcc-2)
amod(effects-8, Add-5)
amod(effects-8, per-function-6)
compound(effects-8, side-7)
dep(dcc-2, effects-8)
dep(effects-8, summaries-9)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Don't merge parameters with the heap unless necessary.

Internally, abstract locations are represented as integers
with bits set (masks) representing the storage classes in the location, so
that joining is bit-wise ORing and intersection is bitwise AND.

Specificity: 0.999369
Content Structure:
dep(represented-20, dcc-2)
aux(merge-7, Do-5)
neg(merge-7, n't-6)
parataxis(represented-20, merge-7)
dobj(merge-7, parameters-8)
case(heap-11, with-9)
det(heap-11, the-10)
nmod:with(merge-7, heap-11)
mark(necessary-13, unless-12)
dep(heap-11, necessary-13)
advmod(represented-20, Internally-15)
amod(locations-18, abstract-17)
nsubjpass(represented-20, locations-18)
auxpass(represented-20, are-19)
root(ROOT-0, represented-20)
mark(AND-47, as-21)
nsubj(AND-47, integers-22)
case(bits-24, with-23)
nmod:with(integers-22, bits-24)
acl(bits-24, set-25)
dep(set-25, masks-27)
ccomp(set-25, representing-29)
det(classes-32, the-30)
compound(classes-32, storage-31)
dobj(representing-29, classes-32)
case(location-35, in-33)
det(location-35, the-34)
nmod:in(representing-29, location-35)
cc(representing-29, so-37)
mark(ORing-42, that-38)
csubj(ORing-42, joining-39)
cop(ORing-42, is-40)
amod(ORing-42, bit-wise-41)
ccomp(set-25, ORing-42)
conj:so(representing-29, ORing-42)
cc(ORing-42, and-43)
conj:so(representing-29, intersection-44)
conj:and(ORing-42, intersection-44)
cop(AND-47, is-45)
amod(AND-47, bitwise-46)
advcl(represented-20, AND-47)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Implement CrossModuleMotionEnvironment
Specificity: 0.841408
Content Structure:
root(ROOT-0, dcc-2)
compound(CrossModuleMotionEnvironment-6, Implement-5)
dep(dcc-2, CrossModuleMotionEnvironment-6)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Implement IntraproceduralMotionEnvironment
Specificity: 0.804294
Content Structure:
root(ROOT-0, dcc-2)
compound(IntraproceduralMotionEnvironment-6, Implement-5)
dep(dcc-2, IntraproceduralMotionEnvironment-6)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Implement isPure().
Specificity: 0.83688
Content Structure:
root(ROOT-0, dcc-2)
compound(-LRB--7, Implement-5)
compound(-LRB--7, isPure-6)
dep(dcc-2, -LRB--7)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): Some (all) of these can probably be better achieved
using the control flow graph (like CheckUnreachableCode).
There is an existing CFG pass (UnreachableCodeElimination) that
could be changed to use code from CheckUnreachableCode to do this.
Specificity: 0.999631
Content Structure:
dep(is-27, dcc-2)
parataxis(is-27, Some-5)
dep(Some-5, all-7)
case(these-10, of-9)
nmod:of(Some-5, these-10)
aux(achieved-15, can-11)
advmod(achieved-15, probably-12)
auxpass(achieved-15, be-13)
advmod(achieved-15, better-14)
acl:relcl(these-10, achieved-15)
xcomp(achieved-15, using-16)
det(graph-20, the-17)
compound(graph-20, control-18)
compound(graph-20, flow-19)
dobj(using-16, graph-20)
case(CheckUnreachableCode-23, like-22)
nmod:like(graph-20, CheckUnreachableCode-23)
expl(is-27, There-26)
root(ROOT-0, is-27)
det(pass-31, an-28)
amod(pass-31, existing-29)
compound(pass-31, CFG-30)
nsubj(is-27, pass-31)
nsubjpass(changed-38, pass-31)
nsubj:xsubj(use-40, pass-31)
appos(pass-31, UnreachableCodeElimination-33)
ref(pass-31, that-35)
aux(changed-38, could-36)
auxpass(changed-38, be-37)
acl:relcl(pass-31, changed-38)
mark(use-40, to-39)
xcomp(changed-38, use-40)
dobj(use-40, code-41)
case(CheckUnreachableCode-43, from-42)
nmod:from(use-40, CheckUnreachableCode-43)
mark(do-45, to-44)
advcl(use-40, do-45)
dobj(do-45, this-46)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): be less conservative about movement within CASE
Specificity: 0.825666
Content Structure:
root(ROOT-0, dcc-2)
cop(conservative-7, be-5)
advmod(conservative-7, less-6)
dep(dcc-2, conservative-7)
case(movement-9, about-8)
nmod:about(conservative-7, movement-9)
case(CASE-11, within-10)
nmod:within(conservative-7, CASE-11)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): have nodesHaveSameControlFlow() use a CFG
Specificity: 0.930333
Content Structure:
root(ROOT-0, dcc-2)
dep(dcc-2, have-5)
discourse(use-9, nodesHaveSameControlFlow-6)
nsubj(use-9, -LRB--7)
ccomp(have-5, use-9)
det(CFG-11, a-10)
dobj(use-9, CFG-11)
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dcc): implement interprocedural side effect analysis.
Specificity: 0.701486
Content Structure:
root(ROOT-0, dcc-2)
dep(dcc-2, implement-5)
amod(analysis-9, interprocedural-6)
compound(analysis-9, side-7)
compound(analysis-9, effect-8)
dobj(implement-5, analysis-9)
File Name: ./test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar):
If the iteration order in the type envs is guaranteed to get the
keys in the same order for any env, then we can iterate through the
two type envs at the same time, to avoid the map lookup here.
Specificity: 0.99897
Content Structure:
root(ROOT-0, dimvar-2)
mark(guaranteed-14, If-5)
det(order-8, the-6)
compound(order-8, iteration-7)
nsubjpass(guaranteed-14, order-8)
nsubj:xsubj(get-16, order-8)
case(envs-12, in-9)
det(envs-12, the-10)
compound(envs-12, type-11)
nmod:in(order-8, envs-12)
auxpass(guaranteed-14, is-13)
advcl(iterate-30, guaranteed-14)
mark(get-16, to-15)
xcomp(guaranteed-14, get-16)
det(keys-18, the-17)
dobj(get-16, keys-18)
case(order-22, in-19)
det(order-22, the-20)
amod(order-22, same-21)
nmod:in(get-16, order-22)
case(env-25, for-23)
det(env-25, any-24)
nmod:for(order-22, env-25)
advmod(we-28, then-27)
nsubj(iterate-30, we-28)
nsubj:xsubj(avoid-42, we-28)
aux(iterate-30, can-29)
dep(dimvar-2, iterate-30)
case(envs-35, through-31)
det(envs-35, the-32)
nummod(envs-35, two-33)
compound(envs-35, type-34)
nmod:through(iterate-30, envs-35)
case(time-39, at-36)
det(time-39, the-37)
amod(time-39, same-38)
nmod:at(iterate-30, time-39)
mark(avoid-42, to-41)
xcomp(iterate-30, avoid-42)
det(lookup-45, the-43)
compound(lookup-45, map-44)
dobj(avoid-42, lookup-45)
advmod(avoid-42, here-46)
File Name: ./src/com/google/javascript/jscomp/newtypes/TypeEnv.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Address this issue by removing bad template
annotations on non-templatized classes.
Specificity: 0.828166
Content Structure:
dep(Address-5, dimvar-2)
root(ROOT-0, Address-5)
det(issue-7, this-6)
dobj(Address-5, issue-7)
mark(removing-9, by-8)
advcl(Address-5, removing-9)
amod(annotations-12, bad-10)
compound(annotations-12, template-11)
dobj(removing-9, annotations-12)
case(classes-15, on-13)
amod(classes-15, non-templatized-14)
nmod:on(removing-9, classes-15)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): After deleting the old type checker, change the signature of this and other
methods in TypeI to stop using wildcards.

Specificity: 0.964046
Content Structure:
root(ROOT-0, dimvar-2)
mark(deleting-6, After-5)
advcl(change-12, deleting-6)
det(checker-10, the-7)
amod(checker-10, old-8)
compound(checker-10, type-9)
dobj(deleting-6, checker-10)
dep(dimvar-2, change-12)
det(signature-14, the-13)
dobj(change-12, signature-14)
case(this-16, of-15)
nmod:of(signature-14, this-16)
cc(signature-14, and-17)
amod(methods-19, other-18)
dobj(change-12, methods-19)
conj:and(signature-14, methods-19)
case(TypeI-21, in-20)
nmod:in(methods-19, TypeI-21)
mark(stop-23, to-22)
advcl(change-12, stop-23)
xcomp(stop-23, using-24)
dobj(using-24, wildcards-25)
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Besides dead code after returns, this pass removes useless live
code such as breaks/continues/returns and stms w/out side effects.
These things don't require reachability info, consider making them their own
pass or putting them in some other, more related pass.
Specificity: 0.999326
Content Structure:
nsubj(consider-34, dimvar-2)
case(code-7, Besides-5)
amod(code-7, dead-6)
nmod:besides(removes-13, code-7)
case(returns-9, after-8)
nmod:after(code-7, returns-9)
det(pass-12, this-11)
nsubj(removes-13, pass-12)
nsubj(stms-21, pass-12)
dep(dimvar-2, removes-13)
amod(live-15, useless-14)
amod(code-16, live-15)
dobj(removes-13, code-16)
case(breaks/continues/returns-19, such-17)
mwe(such-17, as-18)
nmod:such_as(code-16, breaks/continues/returns-19)
cc(removes-13, and-20)
dep(dimvar-2, stms-21)
conj:and(removes-13, stms-21)
amod(effects-24, w/out-22)
compound(effects-24, side-23)
dobj(stms-21, effects-24)
det(things-27, These-26)
nsubj(require-30, things-27)
aux(require-30, do-28)
neg(require-30, n't-29)
parataxis(consider-34, require-30)
amod(info-32, reachability-31)
dobj(require-30, info-32)
root(ROOT-0, consider-34)
ccomp(consider-34, making-35)
nsubj(pass-39, them-36)
nmod:poss(pass-39, their-37)
amod(pass-39, own-38)
xcomp(making-35, pass-39)
cc(making-35, or-40)
ccomp(consider-34, putting-41)
conj:or(making-35, putting-41)
dobj(putting-41, them-42)
case(pass-49, in-43)
det(pass-49, some-44)
amod(pass-49, other-45)
advmod(pass-49, more-47)
amod(pass-49, related-48)
nmod:in(putting-41, pass-49)
File Name: ./src/com/google/javascript/jscomp/UnreachableCodeElimination.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): By adding prints, I found that the majority of the time, when
we substitute generics in obj, it has no effect; the result is equal to the type
before substitution. I did some timing tests to estimate what the improvement
would be if we did better here, and they were inconclusive because of large variance
in the test runs. Intuitively though, it seems that we can save time here,
so revisit this in the future when I have time to dig in deeper.
Specificity: 1.0
Content Structure:
root(ROOT-0, dimvar-2)
mark(adding-6, By-5)
advcl(found-10, adding-6)
dobj(adding-6, prints-7)
nsubj(found-10, I-9)
dep(dimvar-2, found-10)
mark(revisit-84, that-11)
det(majority-13, the-12)
nsubj(revisit-84, majority-13)
case(time-16, of-14)
det(time-16, the-15)
nmod:of(majority-13, time-16)
advmod(substitute-20, when-18)
nsubj(substitute-20, we-19)
acl:relcl(time-16, substitute-20)
dobj(substitute-20, generics-21)
case(obj-23, in-22)
nmod:in(has-26, obj-23)
nsubj(has-26, it-25)
acl:relcl(generics-21, has-26)
neg(effect-28, no-27)
dobj(has-26, effect-28)
det(result-31, the-30)
nsubj(equal-33, result-31)
aux(equal-33, is-32)
parataxis(has-26, equal-33)
case(type-36, to-34)
det(type-36, the-35)
nmod:to(equal-33, type-36)
mark(substitution-38, before-37)
advcl(equal-33, substitution-38)
nsubj(did-41, I-40)
dep(substitution-38, did-41)
det(timing-43, some-42)
nsubj(tests-44, timing-43)
nsubj:xsubj(estimate-46, timing-43)
ccomp(did-41, tests-44)
mark(estimate-46, to-45)
xcomp(tests-44, estimate-46)
dobj(be-51, what-47)
det(improvement-49, the-48)
nsubj(be-51, improvement-49)
aux(be-51, would-50)
ccomp(estimate-46, be-51)
mark(did-54, if-52)
nsubj(did-54, we-53)
advcl(be-51, did-54)
advmod(did-54, better-55)
advmod(did-54, here-56)
cc(did-41, and-58)
nsubjpass(inconclusive-61, they-59)
auxpass(inconclusive-61, were-60)
dep(substitution-38, inconclusive-61)
conj:and(did-41, inconclusive-61)
case(variance-65, because-62)
mwe(because-62, of-63)
amod(variance-65, large-64)
nmod:because_of(inconclusive-61, variance-65)
case(runs-69, in-66)
det(runs-69, the-67)
compound(runs-69, test-68)
nmod:in(variance-65, runs-69)
advmod(though-72, Intuitively-71)
advcl(equal-33, though-72)
nsubj(seems-75, it-74)
dep(though-72, seems-75)
mark(save-79, that-76)
nsubj(save-79, we-77)
aux(save-79, can-78)
ccomp(seems-75, save-79)
dobj(save-79, time-80)
advmod(save-79, here-81)
advmod(revisit-84, so-83)
ccomp(found-10, revisit-84)
dobj(revisit-84, this-85)
case(future-88, in-86)
det(future-88, the-87)
nmod:in(this-85, future-88)
advmod(have-91, when-89)
nsubj(have-91, I-90)
advcl(revisit-84, have-91)
dobj(have-91, time-92)
mark(dig-94, to-93)
acl(time-92, dig-94)
case(deeper-96, in-95)
advcl(dig-94, deeper-96)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Check for which of these warnings it makes sense to keep
going after warning, eg, for NOT_UNIQUE_INSTANTIATION, we must instantiate
to the join of the types.
Specificity: 0.99667
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, Check-5)
nmod:for(instantiate-27, Check-5)
case(which-7, for-6)
ref(Check-5, which-7)
case(warnings-10, of-8)
det(warnings-10, these-9)
nmod:of(instantiate-27, warnings-10)
nsubj(makes-12, it-11)
acl:relcl(warnings-10, makes-12)
dobj(makes-12, sense-13)
mark(keep-15, to-14)
advcl(makes-12, keep-15)
xcomp(keep-15, going-16)
case(warning-18, after-17)
nmod:after(going-16, warning-18)
appos(warning-18, eg-20)
case(NOT_UNIQUE_INSTANTIATION-23, for-22)
nmod:for(going-16, NOT_UNIQUE_INSTANTIATION-23)
nsubj(instantiate-27, we-25)
aux(instantiate-27, must-26)
acl:relcl(Check-5, instantiate-27)
case(join-30, to-28)
det(join-30, the-29)
nmod:to(instantiate-27, join-30)
case(types-33, of-31)
det(types-33, the-32)
nmod:of(join-30, types-33)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Do deferred checks for known functions that are properties.
typeCheck(LINE_JOINER.join(
"/** @const */ var ns = {};",
"ns.f = function(x) { return x - 1; };",
"function g() { ns.f('asdf'); }"),
Specificity: 0.999987
Content Structure:
root(ROOT-0, dimvar-2)
aux(known-9, Do-5)
amod(checks-7, deferred-6)
nsubj(known-9, checks-7)
acl(checks-7, for-8)
dep(dimvar-2, known-9)
dobj(known-9, functions-10)
mark(typeCheck-15, that-11)
cop(typeCheck-15, are-12)
compound(typeCheck-15, properties-13)
ccomp(known-9, typeCheck-15)
compound(-LRB--20, LINE_JOINER-17)
compound(-LRB--20, join-19)
nsubj(/-22, -LRB--20)
dep(typeCheck-15, /-22)
dep(/-22, **-23)
compound(=-29, @const-24)
compound(=-29, *-25)
compound(=-29, /-26)
compound(=-29, var-27)
compound(=-29, ns-28)
xcomp(/-22, =-29)
dep(=-29, -RCB--31)
nsubj(=-37, ns.f-36)
dep(=-29, =-37)
dobj(=-37, function-38)
dep(function-38, x-40)
dep(function-38, return-43)
dobj(return-43, x-44)
dep(x-44, 1-46)
dep(x-44, ''-50)
compound(g-54, function-53)
appos(''-50, g-54)
compound(ns.f-58, -RRB--56)
dep(g-54, ns.f-58)
dep(g-54, asdf-61)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): ENUM_IS_UNION is rare, but it happens. Should we support it?
Specificity: 0.937047
Content Structure:
nsubj(Should-13, dimvar-2)
nsubj(rare-7, ENUM_IS_UNION-5)
cop(rare-7, is-6)
dep(dimvar-2, rare-7)
cc(rare-7, but-9)
nsubj(happens-11, it-10)
dep(dimvar-2, happens-11)
conj:but(rare-7, happens-11)
root(ROOT-0, Should-13)
nsubj(support-15, we-14)
ccomp(Should-13, support-15)
dobj(support-15, it-16)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Either INEXISTENT_PROPERTY shouldn't be here, or we should
change DiagnosticGroups.setWarningLevel to not accidentally enable it.
Specificity: 0.985778
Content Structure:
root(ROOT-0, dimvar-2)
compound(INEXISTENT_PROPERTY-6, Either-5)
nsubj(be-9, INEXISTENT_PROPERTY-6)
aux(be-9, should-7)
neg(be-9, n't-8)
dep(dimvar-2, be-9)
advmod(be-9, here-10)
cc(be-9, or-12)
nsubj(change-15, we-13)
aux(change-15, should-14)
dep(dimvar-2, change-15)
conj:or(be-9, change-15)
dobj(change-15, DiagnosticGroups.setWarningLevel-16)
nsubj:xsubj(enable-20, DiagnosticGroups.setWarningLevel-16)
mark(enable-20, to-17)
neg(enable-20, not-18)
advmod(enable-20, accidentally-19)
xcomp(change-15, enable-20)
dobj(enable-20, it-21)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Eventually attach these to nodes, like the current types.
Specificity: 0.811342
Content Structure:
dep(attach-6, dimvar-2)
advmod(attach-6, Eventually-5)
root(ROOT-0, attach-6)
dobj(attach-6, these-7)
case(nodes-9, to-8)
nmod:to(attach-6, nodes-9)
case(types-14, like-11)
det(types-14, the-12)
amod(types-14, current-13)
nmod:like(attach-6, types-14)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Handle local scopes introduced by catch properly,
after we decide what to do with variables in general, eg, will we
use unique numeric ids?
Specificity: 0.98391
Content Structure:
nsubj(eg-24, dimvar-2)
amod(scopes-7, Handle-5)
amod(scopes-7, local-6)
dep(dimvar-2, scopes-7)
acl(scopes-7, introduced-8)
case(catch-10, by-9)
nmod:by(introduced-8, catch-10)
advmod(introduced-8, properly-11)
mark(decide-15, after-13)
nsubj(decide-15, we-14)
advcl(introduced-8, decide-15)
nsubj(do-18, what-16)
mark(do-18, to-17)
ccomp(decide-15, do-18)
case(variables-20, with-19)
nmod:with(do-18, variables-20)
case(general-22, in-21)
nmod:in(variables-20, general-22)
dep(use-28, eg-24)
aux(use-28, will-26)
nsubj(use-28, we-27)
root(ROOT-0, use-28)
amod(ids-31, unique-29)
amod(ids-31, numeric-30)
dobj(use-28, ids-31)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Handle local scopes introduced by catch properly,
after we decide what to do with variables in general, eg, will we
use unique numeric ids?
Specificity: 0.98391
Content Structure:
nsubj(eg-24, dimvar-2)
amod(scopes-7, Handle-5)
amod(scopes-7, local-6)
dep(dimvar-2, scopes-7)
acl(scopes-7, introduced-8)
case(catch-10, by-9)
nmod:by(introduced-8, catch-10)
advmod(introduced-8, properly-11)
mark(decide-15, after-13)
nsubj(decide-15, we-14)
advcl(introduced-8, decide-15)
nsubj(do-18, what-16)
mark(do-18, to-17)
ccomp(decide-15, do-18)
case(variables-20, with-19)
nmod:with(do-18, variables-20)
case(general-22, in-21)
nmod:in(variables-20, general-22)
dep(use-28, eg-24)
aux(use-28, will-26)
nsubj(use-28, we-27)
root(ROOT-0, use-28)
amod(ids-31, unique-29)
amod(ids-31, numeric-30)
dobj(use-28, ids-31)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Handle optional properties on @record of unknown type.
See how we do it in jstypecreatorfromjsdoc.
Specificity: 0.912734
Content Structure:
nsubj(See-14, dimvar-2)
dep(dimvar-2, Handle-5)
amod(properties-7, optional-6)
dobj(Handle-5, properties-7)
case(@record-9, on-8)
nmod:on(Handle-5, @record-9)
case(type-12, of-10)
amod(type-12, unknown-11)
nmod:of(@record-9, type-12)
root(ROOT-0, See-14)
advmod(do-17, how-15)
nsubj(do-17, we-16)
ccomp(See-14, do-17)
dobj(do-17, it-18)
case(jstypecreatorfromjsdoc-20, in-19)
nmod:in(do-17, jstypecreatorfromjsdoc-20)
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): I think we can fix the next one with better deferred checks
for prototype methods. Look into it.
typeCheck(LINE_JOINER.join(
"/** @constructor */ function Foo() {};",
"Foo.prototype.bar = function(s) { s < 'asdf'; };",
"function g() { (new Foo()).bar(5); }"),
Specificity: 1.0
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, I-5)
acl:relcl(I-5, think-6)
nsubj(fix-9, we-7)
aux(fix-9, can-8)
parataxis(think-6, fix-9)
det(one-12, the-10)
amod(one-12, next-11)
dobj(fix-9, one-12)
case(checks-16, with-13)
amod(checks-16, better-14)
amod(checks-16, deferred-15)
nmod:with(fix-9, checks-16)
case(prototype-18, for-17)
nmod:for(checks-16, prototype-18)
nsubj(typeCheck-25, methods-19)
dep(methods-19, Look-21)
case(it-23, into-22)
nmod:into(Look-21, it-23)
acl:relcl(prototype-18, typeCheck-25)
dep(prototype-18, LINE_JOINER-27)
acl:relcl(LINE_JOINER-27, join-29)
dobj(join-29, -LRB--30)
dep(bar-77, **-33)
nsubj(bar-77, @constructor-34)
dep(function-37, *-35)
dep(@constructor-34, function-37)
dobj(function-37, Foo-38)
compound(-RCB--42, -RRB--40)
dep(Foo-38, -RCB--42)
compound(=-48, Foo.prototype.bar-47)
dep(Foo-38, =-48)
dep(=-48, function-49)
dep(function-49, s-51)
dep(function-49, s-54)
parataxis(s-54, asdf-57)
compound(-LCB--69, function-65)
compound(-LCB--69, g-66)
compound(-LCB--69, -LRB--67)
appos(Foo-38, -LCB--69)
amod(Foo-72, new-71)
dep(-LCB--69, Foo-72)
appos(-LCB--69, -RRB--74)
parataxis(join-29, bar-77)
dobj(bar-77, 5-79)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): If objs and enums stay unchanged, reuse, don't recreate.
Specificity: 0.834244
Content Structure:
root(ROOT-0, dimvar-2)
mark(stay-9, If-5)
nsubj(stay-9, objs-6)
cc(objs-6, and-7)
conj:and(objs-6, enums-8)
nsubj(stay-9, enums-8)
advcl(recreate-16, stay-9)
xcomp(stay-9, unchanged-10)
xcomp(stay-9, reuse-12)
aux(recreate-16, do-14)
neg(recreate-16, n't-15)
dep(dimvar-2, recreate-16)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): In analyzeNameFwd/Bwd, we are careful to not
specialize namespaces, and we need the same check here. But
currently, stopping specialization here causes tests to fail,
because specializing the namespace is our way of updating its
functions after computing summaries. The better solution is to
retain Namespace instances after GTI instead of turning them into
ObjectTypes, and then update those with the summaries and stop
specializing here.
Specificity: 0.999997
Content Structure:
root(ROOT-0, dimvar-2)
case(analyzeNameFwd/Bwd-6, In-5)
nmod:in(careful-10, analyzeNameFwd/Bwd-6)
nsubj(careful-10, we-8)
nsubj:xsubj(specialize-13, we-8)
cop(careful-10, are-9)
dep(dimvar-2, careful-10)
mark(specialize-13, to-11)
neg(specialize-13, not-12)
xcomp(careful-10, specialize-13)
dobj(specialize-13, namespaces-14)
cc(careful-10, and-16)
nsubj(need-18, we-17)
dep(dimvar-2, need-18)
conj:and(careful-10, need-18)
det(check-21, the-19)
amod(check-21, same-20)
dobj(need-18, check-21)
advmod(need-18, here-22)
cc(need-18, But-24)
advmod(is-53, currently-25)
compound(specialization-28, stopping-27)
nsubj(causes-30, specialization-28)
advmod(causes-30, here-29)
dep(is-39, causes-30)
dobj(causes-30, tests-31)
mark(fail-33, to-32)
acl(tests-31, fail-33)
mark(specializing-36, because-35)
advcl(causes-30, specializing-36)
det(namespace-38, the-37)
dobj(specializing-36, namespace-38)
parataxis(is-53, is-39)
nmod:poss(way-41, our-40)
nsubj(is-39, way-41)
mark(updating-43, of-42)
acl(way-41, updating-43)
nmod:poss(functions-45, its-44)
dobj(updating-43, functions-45)
case(summaries-48, after-46)
amod(summaries-48, computing-47)
nmod:after(updating-43, summaries-48)
det(solution-52, The-50)
amod(solution-52, better-51)
nsubj(is-53, solution-52)
nsubj:xsubj(retain-55, solution-52)
nsubj:xsubj(update-69, solution-52)
conj:and(careful-10, is-53)
conj:but(need-18, is-53)
mark(retain-55, to-54)
xcomp(is-53, retain-55)
amod(instances-57, Namespace-56)
dobj(retain-55, instances-57)
case(GTI-59, after-58)
nmod:after(retain-55, GTI-59)
mark(turning-62, instead-60)
mwe(instead-60, of-61)
advcl(retain-55, turning-62)
dobj(turning-62, them-63)
case(ObjectTypes-65, into-64)
nmod:into(turning-62, ObjectTypes-65)
cc(retain-55, and-67)
advmod(update-69, then-68)
xcomp(is-53, update-69)
conj:and(retain-55, update-69)
dobj(update-69, those-70)
case(summaries-73, with-71)
det(summaries-73, the-72)
nmod:with(those-70, summaries-73)
cc(update-69, and-74)
conj:and(retain-55, stop-75)
conj:and(update-69, stop-75)
xcomp(stop-75, specializing-76)
advmod(specializing-76, here-77)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Instead of the for-loop, we could make props be a multi-map from
the property name to Property, and then here just pull the relevant Property instances.
Won't make much difference to performance, since props usually only has a few elements,
but it will make the code clearer.
Specificity: 0.999858
Content Structure:
nsubj(make-36, dimvar-2)
case(for-loop-8, Instead-5)
mwe(Instead-5, of-6)
det(for-loop-8, the-7)
nmod:instead_of(make-12, for-loop-8)
nsubj(make-12, we-10)
nsubj(pull-28, we-10)
aux(make-12, could-11)
dep(dimvar-2, make-12)
nsubj(multi-map-16, props-13)
cop(multi-map-16, be-14)
det(multi-map-16, a-15)
ccomp(make-12, multi-map-16)
case(name-20, from-17)
det(name-20, the-18)
compound(name-20, property-19)
nmod:from(multi-map-16, name-20)
case(Property-22, to-21)
nmod:to(multi-map-16, Property-22)
cc(make-12, and-24)
advmod(pull-28, then-25)
advmod(just-27, here-26)
advmod(pull-28, just-27)
dep(dimvar-2, pull-28)
conj:and(make-12, pull-28)
det(instances-32, the-29)
amod(instances-32, relevant-30)
compound(instances-32, Property-31)
dobj(pull-28, instances-32)
aux(make-36, Wo-34)
neg(make-36, n't-35)
root(ROOT-0, make-36)
amod(difference-38, much-37)
dobj(make-36, difference-38)
case(performance-40, to-39)
nmod:to(make-36, performance-40)
mark(has-46, since-42)
nsubj(has-46, props-43)
advmod(has-46, usually-44)
advmod(has-46, only-45)
advcl(make-36, has-46)
det(elements-49, a-47)
amod(elements-49, few-48)
dobj(has-46, elements-49)
cc(make-36, but-51)
nsubj(make-54, it-52)
aux(make-54, will-53)
conj:but(make-36, make-54)
det(code-56, the-55)
nsubj(clearer-57, code-56)
xcomp(make-54, clearer-57)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Look into why the name node has a less precise type in the
outer scope; we've already computed a good type for it, don't lose it.
Specificity: 0.990348
Content Structure:
dep(computed-24, dimvar-2)
parataxis(computed-24, Look-5)
mark(has-11, into-6)
advmod(has-11, why-7)
det(node-10, the-8)
compound(node-10, name-9)
nsubj(has-11, node-10)
advcl(Look-5, has-11)
det(type-15, a-12)
advmod(precise-14, less-13)
amod(type-15, precise-14)
dobj(has-11, type-15)
case(scope-19, in-16)
det(scope-19, the-17)
amod(scope-19, outer-18)
nmod:in(type-15, scope-19)
nsubj(computed-24, we-21)
aux(computed-24, 've-22)
advmod(computed-24, already-23)
root(ROOT-0, computed-24)
det(type-27, a-25)
amod(type-27, good-26)
dobj(computed-24, type-27)
case(it-29, for-28)
nmod:for(type-27, it-29)
aux(lose-33, do-31)
neg(lose-33, n't-32)
dep(computed-24, lose-33)
dobj(lose-33, it-34)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Needs deferred checks for known property-functions.
typeCheck(LINE_JOINER.join(
"/** @const */ var ns = {};",
"ns.f = function(x) { return x - 1; };",
"/** @type {string} */",
"ns.f.prop = 'asdf';",
"function g() { ns.f(ns.f.prop); }"),
Specificity: 0.999999
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, Needs-5)
amod(checks-7, deferred-6)
nsubj(typeCheck-12, checks-7)
case(property-functions-10, for-8)
amod(property-functions-10, known-9)
nmod:for(checks-7, property-functions-10)
acl:relcl(Needs-5, typeCheck-12)
compound(-LRB--17, LINE_JOINER-14)
compound(-LRB--17, join-16)
nsubj(=-26, -LRB--17)
compound(=-26, /-19)
compound(=-26, **-20)
compound(=-26, @const-21)
compound(=-26, *-22)
compound(=-26, /-23)
compound(=-26, var-24)
compound(=-26, ns-25)
xcomp(typeCheck-12, =-26)
dep(=-26, -RCB--28)
nsubj(=-34, ns.f-33)
dep(=-26, =-34)
nsubj(''-47, function-35)
dep(function-35, x-37)
dep(function-35, return-40)
dobj(return-40, x-41)
dep(x-41, 1-43)
ccomp(=-34, ''-47)
dep(''-47, **-51)
case(string-54, @type-52)
nmod:@type(**-51, string-54)
dep(string-54, *-56)
xcomp(typeCheck-12, ns.f.prop-61)
case(asdf-64, =-62)
nmod:=(ns.f.prop-61, asdf-64)
compound(g-71, function-70)
dep(ns.f.prop-61, g-71)
nummod(ns.f.prop-77, -RRB--73)
compound(ns.f.prop-77, ns.f-75)
dep(g-71, ns.f.prop-77)
dep(ns.f.prop-77, -RCB--80)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Only exclude unorderable self-referential
assignments. i.e. x = {a: x.b, b: x.a} is not orderable,
but x = {a: 1, b: x.a} is.

Also, ES5 getters/setters aren't handled by this pass.
Specificity: 0.999493
Content Structure:
dep(handled-47, dimvar-2)
advmod(exclude-6, Only-5)
parataxis(handled-47, exclude-6)
dep(assignments-9, unorderable-7)
amod(assignments-9, self-referential-8)
dep(orderable-25, assignments-9)
compound(=-13, i.e.-11)
compound(=-13, x-12)
nsubj(orderable-25, =-13)
dep(=-13, a-15)
dep(a-15, x.b-17)
dep(a-15, b-19)
dep(b-19, x.a-21)
cop(orderable-25, is-23)
neg(orderable-25, not-24)
advcl(exclude-6, orderable-25)
cc(orderable-25, but-27)
dep(is-39, x-28)
mark(is-39, =-29)
det(x.a-37, a-31)
dep(x.a-37, 1-33)
appos(1-33, b-35)
nsubj(is-39, x.a-37)
advcl(exclude-6, is-39)
conj:but(orderable-25, is-39)
advmod(handled-47, Also-41)
compound(getters/setters-44, ES5-43)
nsubjpass(handled-47, getters/setters-44)
auxpass(handled-47, are-45)
neg(handled-47, n't-46)
root(ROOT-0, handled-47)
case(pass-50, by-48)
det(pass-50, this-49)
nmod:agent(handled-47, pass-50)
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Remove the generic when OTI is gone.

Specificity: 0.826548
Content Structure:
dep(Remove-5, dimvar-2)
root(ROOT-0, Remove-5)
det(generic-7, the-6)
dobj(Remove-5, generic-7)
advmod(gone-11, when-8)
nsubjpass(gone-11, OTI-9)
auxpass(gone-11, is-10)
advcl(Remove-5, gone-11)
File Name: ./src/com/google/javascript/rhino/TypeIEnv.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Revisit what we throw away after the bwd analysis
Specificity: 0.794758
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, Revisit-5)
dobj(throw-8, Revisit-5)
ref(Revisit-5, what-6)
nsubj(throw-8, we-7)
acl:relcl(Revisit-5, throw-8)
compound:prt(throw-8, away-9)
case(analysis-13, after-10)
det(analysis-13, the-11)
compound(analysis-13, bwd-12)
nmod:after(throw-8, analysis-13)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): Some methods in this interface are polymorphic because they are used
in compiler passes mixed with the old type system.
Polymorphism avoids the need for casting in many cases (fewer casts in java 8 than in java 7).
After all non-type-checking passes use TypeI, we should make these methods not polymorphic.

We considered defining the interface as TypeIRegistry<T extends TypeI>, but it would only
help with getNativeType and getType, not with the other methods, and it would increase
verbosity in all places that use the interface.
Specificity: 1.0
Content Structure:
nsubj(use-51, dimvar-2)
det(methods-6, Some-5)
nsubj(polymorphic-11, methods-6)
case(interface-9, in-7)
det(interface-9, this-8)
nmod:in(methods-6, interface-9)
cop(polymorphic-11, are-10)
dep(dimvar-2, polymorphic-11)
mark(used-15, because-12)
nsubjpass(used-15, they-13)
auxpass(used-15, are-14)
ccomp(polymorphic-11, used-15)
case(passes-18, in-16)
compound(passes-18, compiler-17)
nmod:in(used-15, passes-18)
acl(passes-18, mixed-19)
case(type-23, with-20)
det(type-23, the-21)
amod(type-23, old-22)
nmod:with(mixed-19, type-23)
compound(Polymorphism-26, system-24)
nsubj(avoids-27, Polymorphism-26)
acl:relcl(type-23, avoids-27)
det(need-29, the-28)
dobj(avoids-27, need-29)
mark(casting-31, for-30)
advcl(avoids-27, casting-31)
case(cases-34, in-32)
amod(cases-34, many-33)
nmod:in(casting-31, cases-34)
amod(casts-37, fewer-36)
dep(polymorphic-11, casts-37)
case(java-39, in-38)
nmod:in(casts-37, java-39)
advmod(java-43, 8-40)
case(8-40, than-41)
case(java-43, in-42)
nmod:in(casts-37, java-43)
nummod(java-43, 7-44)
case(passes-50, After-47)
det(passes-50, all-48)
amod(passes-50, non-type-checking-49)
nmod:after(use-51, passes-50)
root(ROOT-0, use-51)
dobj(use-51, TypeI-52)
nsubj(make-56, we-54)
aux(make-56, should-55)
dep(use-51, make-56)
det(methods-58, these-57)
dobj(make-56, methods-58)
dep(considered-63, not-59)
dep(not-59, polymorphic-60)
nsubj(considered-63, We-62)
acl:relcl(methods-58, considered-63)
xcomp(considered-63, defining-64)
det(interface-66, the-65)
dobj(defining-64, interface-66)
case(<T extends TypeI>-69, as-67)
compound(<T extends TypeI>-69, TypeIRegistry-68)
nmod:as(defining-64, <T extends TypeI>-69)
cc(considered-63, but-71)
nsubj(help-75, it-72)
aux(help-75, would-73)
advmod(help-75, only-74)
acl:relcl(methods-58, help-75)
conj:but(considered-63, help-75)
case(getNativeType-77, with-76)
advcl(help-75, getNativeType-77)
cc(getNativeType-77, and-78)
advcl(help-75, getType-79)
conj:and(getNativeType-77, getType-79)
neg(methods-85, not-81)
case(methods-85, with-82)
det(methods-85, the-83)
amod(methods-85, other-84)
nmod:with(getNativeType-77, methods-85)
cc(use-51, and-87)
nsubj(increase-90, it-88)
aux(increase-90, would-89)
conj:and(use-51, increase-90)
advmod(increase-90, verbosity-91)
case(places-94, in-92)
det(places-94, all-93)
nmod:in(increase-90, places-94)
nsubj(use-96, places-94)
ref(places-94, that-95)
acl:relcl(places-94, use-96)
det(interface-98, the-97)
dobj(use-96, interface-98)
File Name: ./src/com/google/javascript/rhino/TypeIRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): The expected formal type is string if g appears before f
and number o/w. Also, we allow adding named types to ctors in any scope,
but other properties only in the same scope where the ctor is defined.
Must be consistent about which scopes can add new props.
Specificity: 0.999835
Content Structure:
dep(allow-23, dimvar-2)
det(type-8, The-5)
amod(type-8, expected-6)
amod(type-8, formal-7)
parataxis(allow-23, type-8)
cop(string-10, is-9)
acl:relcl(type-8, string-10)
mark(appears-13, if-11)
nsubj(appears-13, g-12)
advcl(string-10, appears-13)
case(f-15, before-14)
nmod:before(appears-13, f-15)
cc(f-15, and-16)
compound(o/w-18, number-17)
nmod:before(appears-13, o/w-18)
conj:and(f-15, o/w-18)
advmod(allow-23, Also-20)
nsubj(allow-23, we-22)
root(ROOT-0, allow-23)
xcomp(allow-23, adding-24)
amod(types-26, named-25)
dobj(adding-24, types-26)
case(ctors-28, to-27)
nmod:to(adding-24, ctors-28)
case(scope-31, in-29)
det(scope-31, any-30)
nmod:in(ctors-28, scope-31)
cc(scope-40, but-33)
amod(properties-35, other-34)
nmod:npmod(only-36, properties-35)
dep(scope-40, only-36)
case(scope-40, in-37)
det(scope-40, the-38)
amod(scope-40, same-39)
dep(allow-23, scope-40)
advmod(defined-45, where-41)
det(ctor-43, the-42)
nsubjpass(defined-45, ctor-43)
auxpass(defined-45, is-44)
acl:relcl(scope-40, defined-45)
advmod(consistent-49, Must-47)
cop(consistent-49, be-48)
dep(allow-23, consistent-49)
mark(add-54, about-50)
dobj(add-54, which-51)
nsubj(add-54, scopes-52)
aux(add-54, can-53)
advcl(consistent-49, add-54)
amod(props-56, new-55)
dobj(add-54, props-56)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This doesn't work for multiple levels in the hierarchy.
Clean up how we process inherited properties and then fix this.
Specificity: 0.96579
Content Structure:
nsubj(Clean-16, dimvar-2)
nsubj(work-8, This-5)
aux(work-8, does-6)
neg(work-8, n't-7)
dep(dimvar-2, work-8)
case(levels-11, for-9)
amod(levels-11, multiple-10)
nmod:for(work-8, levels-11)
case(hierarchy-14, in-12)
det(hierarchy-14, the-13)
nmod:in(levels-11, hierarchy-14)
root(ROOT-0, Clean-16)
compound:prt(Clean-16, up-17)
advmod(process-20, how-18)
nsubj(process-20, we-19)
nsubj(fix-25, we-19)
ccomp(Clean-16, process-20)
amod(properties-22, inherited-21)
dobj(process-20, properties-22)
cc(process-20, and-23)
advmod(fix-25, then-24)
ccomp(Clean-16, fix-25)
conj:and(process-20, fix-25)
dobj(fix-25, this-26)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This doesn't work for multiple levels in the hierarchy.
Clean up how we process inherited properties and then fix this.
Specificity: 0.96579
Content Structure:
nsubj(Clean-16, dimvar-2)
nsubj(work-8, This-5)
aux(work-8, does-6)
neg(work-8, n't-7)
dep(dimvar-2, work-8)
case(levels-11, for-9)
amod(levels-11, multiple-10)
nmod:for(work-8, levels-11)
case(hierarchy-14, in-12)
det(hierarchy-14, the-13)
nmod:in(levels-11, hierarchy-14)
root(ROOT-0, Clean-16)
compound:prt(Clean-16, up-17)
advmod(process-20, how-18)
nsubj(process-20, we-19)
nsubj(fix-25, we-19)
ccomp(Clean-16, process-20)
amod(properties-22, inherited-21)
dobj(process-20, properties-22)
cc(process-20, and-23)
advmod(fix-25, then-24)
ccomp(Clean-16, fix-25)
conj:and(process-20, fix-25)
dobj(fix-25, this-26)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This may prove to be too strict, may revisit.
Specificity: 0.812874
Content Structure:
nsubj(revisit-14, dimvar-2)
dep(dimvar-2, This-5)
aux(prove-7, may-6)
acl:relcl(This-5, prove-7)
mark(strict-11, to-8)
cop(strict-11, be-9)
advmod(strict-11, too-10)
xcomp(prove-7, strict-11)
aux(revisit-14, may-13)
root(ROOT-0, revisit-14)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This method is used to avoid a spurious warning in ES6
externs, where a prototype property is declared using GETELEM.
We'll remove this when we properly handle ES6.
Specificity: 0.995949
Content Structure:
root(ROOT-0, dimvar-2)
det(method-6, This-5)
nsubjpass(used-8, method-6)
nsubj:xsubj(avoid-10, method-6)
auxpass(used-8, is-7)
dep(dimvar-2, used-8)
mark(avoid-10, to-9)
xcomp(used-8, avoid-10)
det(warning-13, a-11)
amod(warning-13, spurious-12)
dobj(avoid-10, warning-13)
case(externs-16, in-14)
nummod(externs-16, ES6-15)
nmod:in(avoid-10, externs-16)
advmod(declared-23, where-18)
det(property-21, a-19)
compound(property-21, prototype-20)
nsubjpass(declared-23, property-21)
auxpass(declared-23, is-22)
acl:relcl(externs-16, declared-23)
xcomp(declared-23, using-24)
dobj(using-24, GETELEM-25)
nsubj(remove-29, We-27)
aux(remove-29, 'll-28)
acl:relcl(GETELEM-25, remove-29)
dobj(remove-29, this-30)
advmod(handle-34, when-31)
nsubj(handle-34, we-32)
advmod(handle-34, properly-33)
acl:relcl(this-30, handle-34)
dobj(handle-34, ES6-35)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This method is used to avoid a spurious warning in ES6
externs, where a prototype property is declared using GETELEM.
We'll remove this when we properly handle ES6.
Specificity: 0.995949
Content Structure:
root(ROOT-0, dimvar-2)
det(method-6, This-5)
nsubjpass(used-8, method-6)
nsubj:xsubj(avoid-10, method-6)
auxpass(used-8, is-7)
dep(dimvar-2, used-8)
mark(avoid-10, to-9)
xcomp(used-8, avoid-10)
det(warning-13, a-11)
amod(warning-13, spurious-12)
dobj(avoid-10, warning-13)
case(externs-16, in-14)
nummod(externs-16, ES6-15)
nmod:in(avoid-10, externs-16)
advmod(declared-23, where-18)
det(property-21, a-19)
compound(property-21, prototype-20)
nsubjpass(declared-23, property-21)
auxpass(declared-23, is-22)
acl:relcl(externs-16, declared-23)
xcomp(declared-23, using-24)
dobj(using-24, GETELEM-25)
nsubj(remove-29, We-27)
aux(remove-29, 'll-28)
acl:relcl(GETELEM-25, remove-29)
dobj(remove-29, this-30)
advmod(handle-34, when-31)
nsubj(handle-34, we-32)
advmod(handle-34, properly-33)
acl:relcl(this-30, handle-34)
dobj(handle-34, ES6-35)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): This should get moved to preventing cycles in FunctionTypeBuilder
rather than removing them here after they have been created.
Also, this doesn't do the right thing for extended interfaces, though that is
masked by another bug.
Specificity: 0.99867
Content Structure:
dep(do-30, dimvar-2)
parataxis(do-30, This-5)
aux(moved-8, should-6)
auxpass(moved-8, get-7)
acl:relcl(This-5, moved-8)
mark(preventing-10, to-9)
advcl(moved-8, preventing-10)
dobj(preventing-10, cycles-11)
case(FunctionTypeBuilder-13, in-12)
nmod:in(cycles-11, FunctionTypeBuilder-13)
cc(preventing-10, rather-14)
mwe(rather-14, than-15)
advcl(moved-8, removing-16)
conj:negcc(preventing-10, removing-16)
dobj(removing-16, them-17)
advmod(created-23, here-18)
mark(created-23, after-19)
nsubjpass(created-23, they-20)
aux(created-23, have-21)
auxpass(created-23, been-22)
advcl(removing-16, created-23)
advmod(do-30, Also-25)
nsubj(do-30, this-27)
aux(do-30, does-28)
neg(do-30, n't-29)
root(ROOT-0, do-30)
det(thing-33, the-31)
amod(thing-33, right-32)
dobj(do-30, thing-33)
case(interfaces-36, for-34)
amod(interfaces-36, extended-35)
nmod:for(do-30, interfaces-36)
mark(masked-41, though-38)
nsubjpass(masked-41, that-39)
auxpass(masked-41, is-40)
advcl(do-30, masked-41)
case(bug-44, by-42)
det(bug-44, another-43)
nmod:agent(masked-41, bug-44)
File Name: ./src/com/google/javascript/rhino/jstype/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): To get the adjusted end-of-fwd type for objs, we must be
able to know whether a property was added during the evaluation of the
function, or was on the object already.
Specificity: 0.994338
Content Structure:
root(ROOT-0, dimvar-2)
mark(get-6, To-5)
advcl(able-17, get-6)
det(type-10, the-7)
amod(type-10, adjusted-8)
amod(type-10, end-of-fwd-9)
dobj(get-6, type-10)
case(objs-12, for-11)
nmod:for(get-6, objs-12)
nsubj(able-17, we-14)
nsubj:xsubj(know-19, we-14)
aux(able-17, must-15)
cop(able-17, be-16)
dep(dimvar-2, able-17)
mark(know-19, to-18)
xcomp(able-17, know-19)
mark(added-24, whether-20)
det(property-22, a-21)
nsubjpass(added-24, property-22)
auxpass(added-24, was-23)
ccomp(know-19, added-24)
case(evaluation-27, during-25)
det(evaluation-27, the-26)
nmod:during(added-24, evaluation-27)
case(function-30, of-28)
det(function-30, the-29)
nmod:of(evaluation-27, function-30)
cc(added-24, or-32)
cop(object-36, was-33)
case(object-36, on-34)
det(object-36, the-35)
ccomp(know-19, object-36)
conj:or(added-24, object-36)
advmod(able-17, already-37)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): We attach the type to every expression because that's also
what the old type inference does.
But maybe most of these types are never looked at.
See if the passes that use types only need types on a small subset of the
nodes, and only store these types to save mem.
Specificity: 0.999907
Content Structure:
nsubj(See-34, dimvar-2)
nsubj(attach-6, We-5)
dep(dimvar-2, attach-6)
det(type-8, the-7)
dobj(attach-6, type-8)
case(expression-11, to-9)
det(expression-11, every-10)
nmod:to(attach-6, expression-11)
mark('s-14, because-12)
nsubj('s-14, that-13)
advcl(attach-6, 's-14)
advmod('s-14, also-15)
dep(does-21, what-16)
det(inference-20, the-17)
amod(inference-20, old-18)
compound(inference-20, type-19)
nsubj(does-21, inference-20)
dep('s-14, does-21)
cc(does-21, But-23)
advmod(looked-31, maybe-24)
nsubjpass(looked-31, most-25)
case(types-28, of-26)
det(types-28, these-27)
nmod:of(most-25, types-28)
auxpass(looked-31, are-29)
neg(looked-31, never-30)
dep('s-14, looked-31)
conj:but(does-21, looked-31)
nmod(looked-31, at-32)
root(ROOT-0, See-34)
mark(passes-37, if-35)
nsubj(passes-37, the-36)
advcl(See-34, passes-37)
mark(need-42, that-38)
compound(types-40, use-39)
nsubj(need-42, types-40)
nsubj(store-54, types-40)
advmod(need-42, only-41)
ccomp(passes-37, need-42)
dobj(need-42, types-43)
case(subset-47, on-44)
det(subset-47, a-45)
amod(subset-47, small-46)
nmod:on(types-43, subset-47)
case(nodes-50, of-48)
det(nodes-50, the-49)
nmod:of(subset-47, nodes-50)
cc(need-42, and-52)
advmod(store-54, only-53)
ccomp(passes-37, store-54)
conj:and(need-42, store-54)
det(types-56, these-55)
dobj(store-54, types-56)
mark(save-58, to-57)
advcl(store-54, save-58)
dobj(save-58, mem-59)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): We could warn about this since x is callable and we're
passing a non-function, but we don't catch it for now.
Specificity: 0.971969
Content Structure:
root(ROOT-0, dimvar-2)
nsubj(warn-7, We-5)
aux(warn-7, could-6)
dep(dimvar-2, warn-7)
case(this-9, about-8)
nmod:about(warn-7, this-9)
mark(callable-13, since-10)
nsubj(callable-13, x-11)
cop(callable-13, is-12)
advcl(warn-7, callable-13)
cc(warn-7, and-14)
nsubj(passing-17, we-15)
aux(passing-17, 're-16)
dep(dimvar-2, passing-17)
conj:and(warn-7, passing-17)
det(non-function-19, a-18)
dobj(passing-17, non-function-19)
cc(passing-17, but-21)
nsubj(catch-25, we-22)
aux(catch-25, do-23)
neg(catch-25, n't-24)
conj:and(warn-7, catch-25)
conj:but(passing-17, catch-25)
dobj(catch-25, it-26)
case(now-28, for-27)
nmod:for(catch-25, now-28)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): We do some short-circuiting based on the declared type,
but maybe we can do more based also on the existing inferred type (?)
Specificity: 0.982575
Content Structure:
compound(-RRB--3, dimvar-2)
root(ROOT-0, -RRB--3)
nsubj(do-6, We-5)
parataxis(-RRB--3, do-6)
det(short-circuiting-8, some-7)
dobj(do-6, short-circuiting-8)
case(type-13, based-9)
mwe(based-9, on-10)
det(type-13, the-11)
amod(type-13, declared-12)
advcl(do-6, type-13)
cc(do-6, but-15)
advmod(do-19, maybe-16)
nsubj(do-19, we-17)
aux(do-19, can-18)
parataxis(-RRB--3, do-19)
conj:but(do-6, do-19)
dobj(do-19, more-20)
acl(more-20, based-21)
advmod(based-21, also-22)
case(-LRB--28, on-23)
det(-LRB--28, the-24)
amod(-LRB--28, existing-25)
amod(-LRB--28, inferred-26)
compound(-LRB--28, type-27)
nmod:on(based-21, -LRB--28)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): When a class extends a class that inherits from IObject,
it should be unrestricted.
Specificity: 0.912588
Content Structure:
root(ROOT-0, dimvar-2)
advmod(extends-8, When-5)
det(class-7, a-6)
nsubj(extends-8, class-7)
advcl(unrestricted-19, extends-8)
det(class-10, a-9)
dobj(extends-8, class-10)
nsubj(inherits-12, class-10)
ref(class-10, that-11)
acl:relcl(class-10, inherits-12)
case(IObject-14, from-13)
nmod:from(inherits-12, IObject-14)
nsubjpass(unrestricted-19, it-16)
aux(unrestricted-19, should-17)
auxpass(unrestricted-19, be-18)
dep(dimvar-2, unrestricted-19)
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): When the union has many things, we join and throw
away types, except the result of the last join. Very inefficient.
Consider optimizing.
Specificity: 0.98525
Content Structure:
root(ROOT-0, dimvar-2)
advmod(has-8, When-5)
det(union-7, the-6)
nsubj(has-8, union-7)
advcl(join-13, has-8)
amod(things-10, many-9)
dobj(has-8, things-10)
nsubj(join-13, we-12)
nsubj(throw-15, we-12)
dep(dimvar-2, join-13)
cc(join-13, and-14)
dep(dimvar-2, throw-15)
conj:and(join-13, throw-15)
compound:prt(throw-15, away-16)
dobj(throw-15, types-17)
case(result-21, except-19)
det(result-21, the-20)
nmod:except(join-13, result-21)
case(Consider-30, of-22)
det(Consider-30, the-23)
amod(Consider-30, last-24)
compound(Consider-30, join-25)
compound(Consider-30, Very-27)
compound(Consider-30, inefficient-28)
nmod:of(result-21, Consider-30)
acl(Consider-30, optimizing-31)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): catch this warning once we typecheck ES6 natively.
Specificity: 0.801951
Content Structure:
dep(catch-5, dimvar-2)
root(ROOT-0, catch-5)
det(warning-7, this-6)
dobj(catch-5, warning-7)
mark(typecheck-10, once-8)
nsubj(typecheck-10, we-9)
advcl(catch-5, typecheck-10)
dobj(typecheck-10, ES6-11)
advmod(typecheck-10, natively-12)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceWithTranspilationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): check if we can have @const props here
Specificity: 0.744576
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, check-5)
mark(have-9, if-6)
nsubj(have-9, we-7)
aux(have-9, can-8)
dep(dimvar-2, have-9)
amod(props-11, @const-10)
dobj(have-9, props-11)
advmod(have-9, here-12)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): check if we can have @const props here
Specificity: 0.744576
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, check-5)
mark(have-9, if-6)
nsubj(have-9, we-7)
aux(have-9, can-8)
dep(dimvar-2, have-9)
amod(props-11, @const-10)
dobj(have-9, props-11)
advmod(have-9, here-12)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): convert this pass to use NTI. Low priority since it's
mostly unused. Converting it shouldn't block switching to NTI.
Specificity: 0.979249
Content Structure:
dep(block-24, dimvar-2)
parataxis(block-24, convert-5)
det(priority-13, this-6)
amod(priority-13, pass-7)
mark(use-9, to-8)
xcomp(pass-7, use-9)
compound(priority-13, NTI-10)
compound(priority-13, Low-12)
dobj(convert-5, priority-13)
mark(unused-18, since-14)
nsubj(unused-18, it-15)
cop(unused-18, 's-16)
advmod(unused-18, mostly-17)
acl(priority-13, unused-18)
nsubj(block-24, Converting-20)
dep(Converting-20, it-21)
aux(block-24, should-22)
neg(block-24, n't-23)
root(ROOT-0, block-24)
xcomp(block-24, switching-25)
case(NTI-27, to-26)
nmod:to(switching-25, NTI-27)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): currently, a class and a @record that is a
supertype can be in the same union. We must normalize like we do
for other types, to maintain the invariant that the members of
a union are not subtypes of each other.
Specificity: 0.999247
Content Structure:
root(ROOT-0, dimvar-2)
advmod(dimvar-2, currently-5)
det(class-8, a-7)
appos(dimvar-2, class-8)
cc(class-8, and-9)
det(@record-11, a-10)
appos(dimvar-2, @record-11)
conj:and(class-8, @record-11)
nsubj(supertype-15, @record-11)
ref(@record-11, that-12)
cop(supertype-15, is-13)
det(supertype-15, a-14)
acl:relcl(@record-11, supertype-15)
aux(union-21, can-16)
cop(union-21, be-17)
case(union-21, in-18)
det(union-21, the-19)
amod(union-21, same-20)
dep(supertype-15, union-21)
nsubj(normalize-25, We-23)
aux(normalize-25, must-24)
acl:relcl(supertype-15, normalize-25)
mark(do-28, like-26)
nsubj(do-28, we-27)
nsubj:xsubj(maintain-34, we-27)
advcl(normalize-25, do-28)
case(types-31, for-29)
amod(types-31, other-30)
nmod:for(do-28, types-31)
mark(maintain-34, to-33)
xcomp(do-28, maintain-34)
det(invariant-36, the-35)
dobj(maintain-34, invariant-36)
mark(subtypes-45, that-37)
det(members-39, the-38)
nsubj(subtypes-45, members-39)
case(union-42, of-40)
det(union-42, a-41)
nmod:of(members-39, union-42)
cop(subtypes-45, are-43)
neg(subtypes-45, not-44)
ccomp(do-28, subtypes-45)
case(other-48, of-46)
det(other-48, each-47)
nmod:of(subtypes-45, other-48)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): don't return null for anonymous functions
Specificity: 0.722807
Content Structure:
root(ROOT-0, dimvar-2)
aux(null-8, do-5)
neg(null-8, n't-6)
nsubj(null-8, return-7)
dep(dimvar-2, null-8)
case(functions-11, for-9)
amod(functions-11, anonymous-10)
nmod:for(null-8, functions-11)
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): fix
Specificity: 0.634325
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, fix-5)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): fix handling of namespace types in markAndGetTypeOfPreanalyzedNode
and uncomment
typeCheck(LINE_JOINER.join(
"/** @const */ var ns = {};",
"/** @typedef {number} */",
"ns.num2;",
"/** @type {number} */",
"ns.num2.prop = 123;"),
Specificity: 0.999979
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, fix-5)
amod(fix-5, handling-6)
case(types-9, of-7)
amod(types-9, namespace-8)
nmod:of(fix-5, types-9)
case(typeCheck-14, in-10)
amod(typeCheck-14, markAndGetTypeOfPreanalyzedNode-11)
cc(markAndGetTypeOfPreanalyzedNode-11, and-12)
conj:and(markAndGetTypeOfPreanalyzedNode-11, uncomment-13)
amod(typeCheck-14, uncomment-13)
nmod:in(fix-5, typeCheck-14)
dep(typeCheck-14, LINE_JOINER-16)
amod(/-58, join-18)
dep(join-18, ''-20)
dep(*-24, **-22)
amod(*-24, @const-23)
parataxis(''-20, *-24)
compound(ns-27, var-26)
parataxis(*-24, ns-27)
nummod(''-32, =-28)
compound(''-32, -RCB--30)
dep(ns-27, ''-32)
amod(number-39, **-36)
compound(number-39, @typedef-37)
dep(ns-27, number-39)
amod(/-42, *-41)
dep(number-39, /-42)
appos(/-42, ns.num2-46)
dep(number-55, **-52)
amod(number-55, @type-53)
amod(number-55, -LCB--54)
parataxis(ns-27, number-55)
compound(/-58, *-57)
dep(LINE_JOINER-16, /-58)
compound(=-63, ns.num2.prop-62)
appos(/-58, =-63)
nummod(=-63, 123-64)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): fix look-ups of stray properties in a follow-up change, and add a
precondition here that propdef should not be null.
Specificity: 0.951497
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, fix-5)
dobj(fix-5, look-ups-6)
case(properties-9, of-7)
amod(properties-9, stray-8)
nmod:of(look-ups-6, properties-9)
case(change-13, in-10)
det(change-13, a-11)
compound(change-13, follow-up-12)
nmod:in(properties-9, change-13)
cc(fix-5, and-15)
dep(dimvar-2, add-16)
conj:and(fix-5, add-16)
det(precondition-18, a-17)
dobj(add-16, precondition-18)
advmod(add-16, here-19)
mark(null-25, that-20)
nsubj(null-25, propdef-21)
aux(null-25, should-22)
neg(null-25, not-23)
cop(null-25, be-24)
ccomp(add-16, null-25)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-07-13T15:12:38-07:00
Time Of Deletion: null
Creation Commit Hash: 67606b098c5e8477c156487e995b2d93a2f0edb6
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): generate-exports should always run after typechecking.
If it runs before, it adds a bunch of properties to Object, which masks
many type warnings. Cleanup all clients and remove this.
Specificity: 0.9947
Content Structure:
root(ROOT-0, dimvar-2)
nsubj(run-8, generate-exports-5)
aux(run-8, should-6)
advmod(run-8, always-7)
dep(dimvar-2, run-8)
mark(adds-18, after-9)
dep(runs-14, typechecking-10)
mark(runs-14, If-12)
nsubj(runs-14, it-13)
advcl(adds-18, runs-14)
advmod(runs-14, before-15)
nsubj(adds-18, it-17)
advcl(run-8, adds-18)
det(bunch-20, a-19)
nsubj(Cleanup-32, bunch-20)
nsubj(remove-36, bunch-20)
case(properties-22, of-21)
nmod:of(bunch-20, properties-22)
nsubj(masks-27, properties-22)
case(Object-24, to-23)
nmod:to(properties-22, Object-24)
ref(properties-22, which-26)
acl:relcl(properties-22, masks-27)
amod(warnings-30, many-28)
compound(warnings-30, type-29)
dobj(masks-27, warnings-30)
ccomp(adds-18, Cleanup-32)
det(clients-34, all-33)
dobj(Cleanup-32, clients-34)
cc(Cleanup-32, and-35)
ccomp(adds-18, remove-36)
conj:and(Cleanup-32, remove-36)
dobj(remove-36, this-37)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): handle getters or setters?
Specificity: 0.684948
Content Structure:
dep(handle-5, dimvar-2)
root(ROOT-0, handle-5)
dobj(handle-5, getters-6)
cc(getters-6, or-7)
dobj(handle-5, setters-8)
conj:or(getters-6, setters-8)
File Name: ./src/com/google/javascript/jscomp/ExternExportsPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): handle greatest lower bound of interface types.
If we do that, we need to normalize the output, otherwise it could
contain two object types that are in a subtype relation, e.g., see
{@link NewTypeInferenceTest#testDifficultObjectSpecialization}.

Specificity: 0.9992
Content Structure:
dep(handle-5, dimvar-2)
root(ROOT-0, handle-5)
dep(bound-8, greatest-6)
dep(greatest-6, lower-7)
dep(need-19, bound-8)
case(types-11, of-9)
amod(types-11, interface-10)
nmod:of(bound-8, types-11)
mark(do-15, If-13)
nsubj(do-15, we-14)
advcl(need-19, do-15)
dobj(do-15, that-16)
nsubj(need-19, we-18)
nsubj:xsubj(normalize-21, we-18)
advcl(contain-28, need-19)
mark(normalize-21, to-20)
xcomp(need-19, normalize-21)
det(output-23, the-22)
dobj(normalize-21, output-23)
advmod(it-26, otherwise-25)
nsubj(contain-28, it-26)
aux(contain-28, could-27)
ccomp(handle-5, contain-28)
nummod(types-31, two-29)
compound(types-31, object-30)
dobj(contain-28, types-31)
nsubj(relation-37, types-31)
ref(types-31, that-32)
cop(relation-37, are-33)
case(relation-37, in-34)
det(relation-37, a-35)
amod(relation-37, subtype-36)
acl:relcl(types-31, relation-37)
discourse(see-41, e.g.-39)
ccomp(handle-5, see-41)
compound(#testDifficultObjectSpecialization-45, @link-43)
compound(#testDifficultObjectSpecialization-45, NewTypeInferenceTest-44)
dobj(see-41, #testDifficultObjectSpecialization-45)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): here, a lot of the time the set of objects will only contain objects for which
withLoose is a no-op. Worth it to detect it and return `this` in that case, to avoid
unnecessary creation of types?
Specificity: 0.998905
Content Structure:
root(ROOT-0, dimvar-2)
advmod(dimvar-2, here-5)
det(lot-8, a-7)
nsubj(Worth-27, lot-8)
case(time-11, of-9)
det(time-11, the-10)
nmod:of(lot-8, time-11)
nmod:for(no-op-25, time-11)
det(set-13, the-12)
nsubj(contain-18, set-13)
case(objects-15, of-14)
nmod:of(set-13, objects-15)
aux(contain-18, will-16)
advmod(contain-18, only-17)
acl:relcl(time-11, contain-18)
dobj(contain-18, objects-19)
nmod:for(no-op-25, objects-19)
case(which-21, for-20)
ref(time-11, which-21)
ref(objects-19, which-21)
nsubj(no-op-25, withLoose-22)
cop(no-op-25, is-23)
det(no-op-25, a-24)
acl:relcl(objects-19, no-op-25)
dep(dimvar-2, Worth-27)
dobj(Worth-27, it-28)
nsubj:xsubj(detect-30, it-28)
nsubj:xsubj(return-33, it-28)
mark(detect-30, to-29)
xcomp(Worth-27, detect-30)
dobj(detect-30, it-31)
cc(detect-30, and-32)
xcomp(Worth-27, return-33)
conj:and(detect-30, return-33)
dobj(return-33, this-35)
case(case-39, in-37)
det(case-39, that-38)
nmod:in(this-35, case-39)
mark(avoid-42, to-41)
advcl(return-33, avoid-42)
amod(creation-44, unnecessary-43)
dobj(avoid-42, creation-44)
case(types-46, of-45)
nmod:of(creation-44, types-46)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): if having this field on every property wastes memory,
consider alternatives:
1) Subclass Property for the few ones that have jsdoc.
2) Store the jsdocs scattered in NominalType and Namespace.
This is hard b/c for objlit namespaces, we don't keep around the
Namespace class in NTI; they're plain-old object literals.
Specificity: 0.999971
Content Structure:
root(ROOT-0, dimvar-2)
mark(wastes-12, if-5)
csubj(wastes-12, having-6)
det(field-8, this-7)
dobj(having-6, field-8)
case(property-11, on-9)
det(property-11, every-10)
nmod:on(field-8, property-11)
advcl(consider-15, wastes-12)
dobj(wastes-12, memory-13)
dep(dimvar-2, consider-15)
dobj(consider-15, alternatives-16)
dep(Property-21, 1-18)
compound(Property-21, Subclass-20)
dep(alternatives-16, Property-21)
case(ones-25, for-22)
det(ones-25, the-23)
amod(ones-25, few-24)
nmod:for(Property-21, ones-25)
nsubj(have-27, ones-25)
ref(ones-25, that-26)
acl:relcl(ones-25, have-27)
dobj(have-27, jsdoc-28)
dep(keep-52, 2-30)
dep(scattered-35, Store-32)
det(jsdocs-34, the-33)
dep(Store-32, jsdocs-34)
dep(b/c-44, scattered-35)
case(NominalType-37, in-36)
nmod:in(scattered-35, NominalType-37)
cc(NominalType-37, and-38)
nmod:in(scattered-35, Namespace-39)
conj:and(NominalType-37, Namespace-39)
nsubj(b/c-44, This-41)
cop(b/c-44, is-42)
amod(b/c-44, hard-43)
advcl(keep-52, b/c-44)
case(namespaces-47, for-45)
amod(namespaces-47, objlit-46)
nmod:for(b/c-44, namespaces-47)
nsubj(keep-52, we-49)
aux(keep-52, do-50)
neg(keep-52, n't-51)
acl:relcl(jsdoc-28, keep-52)
compound:prt(keep-52, around-53)
det(class-56, the-54)
amod(class-56, Namespace-55)
dobj(keep-52, class-56)
case(NTI-58, in-57)
nmod:in(class-56, NTI-58)
nsubj(literals-64, they-60)
cop(literals-64, 're-61)
amod(literals-64, plain-old-62)
compound(literals-64, object-63)
parataxis(keep-52, literals-64)
File Name: ./src/com/google/javascript/jscomp/newtypes/Property.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): if sm uses a goog.forwardDeclare in a local scope, give
an error instead of crashing.
Specificity: 0.906334
Content Structure:
root(ROOT-0, dimvar-2)
mark(uses-7, if-5)
nsubj(uses-7, sm-6)
advcl(give-15, uses-7)
det(goog.forwardDeclare-9, a-8)
dobj(uses-7, goog.forwardDeclare-9)
case(scope-13, in-10)
det(scope-13, a-11)
amod(scope-13, local-12)
nmod:in(goog.forwardDeclare-9, scope-13)
dep(dimvar-2, give-15)
det(error-17, an-16)
dobj(give-15, error-17)
mark(crashing-20, instead-18)
mwe(instead-18, of-19)
acl(error-17, crashing-20)
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): if this case comes up often, modify the parser to
remember comma positions for function decls and calls and fix the bug.
Specificity: 0.968226
Content Structure:
root(ROOT-0, dimvar-2)
mark(comes-8, if-5)
det(case-7, this-6)
nsubj(comes-8, case-7)
advcl(modify-12, comes-8)
compound:prt(comes-8, up-9)
advmod(comes-8, often-10)
dep(dimvar-2, modify-12)
det(parser-14, the-13)
dobj(modify-12, parser-14)
mark(remember-16, to-15)
acl(parser-14, remember-16)
compound(positions-18, comma-17)
dobj(remember-16, positions-18)
case(decls-21, for-19)
compound(decls-21, function-20)
nmod:for(remember-16, decls-21)
cc(decls-21, and-22)
nmod:for(remember-16, calls-23)
conj:and(decls-21, calls-23)
cc(modify-12, and-24)
dep(dimvar-2, fix-25)
conj:and(modify-12, fix-25)
det(bug-27, the-26)
dobj(fix-25, bug-27)
File Name: ./test/com/google/javascript/jscomp/parsing/AttachJsdocsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): if we support enums of unions, this is the behavior we want for generics.
The enum of a union is not a union. When unifying here with MyEnum, it's not the same
as unifying with number|string. In the former case, T is mapped to MyEnum, in the latter
it would be mapped to number and there would be no warning.
typeCheck(LINE_JOINER.join(
"/** @enum {number|string} */",
"var MyEnum = { A: 1, B: 'asdf' };",
"/**",
" * @template T",
" * @param {T|string} x",
" * @return {T}",
" */",
"function f(x) {",
"  return /** @type {T} */ (x)",
"}",
"function g(/** !MyEnum */ x) {",
"  f(x) - 3;",
"}"),
Specificity: 1.0
Content Structure:
nsubj(/-114, dimvar-2)
mark(support-7, if-5)
nsubj(support-7, we-6)
acl:relcl(dimvar-2, support-7)
nsubj(behavior-15, enums-8)
case(unions-10, of-9)
nmod:of(enums-8, unions-10)
appos(unions-10, this-12)
cop(behavior-15, is-13)
det(behavior-15, the-14)
xcomp(support-7, behavior-15)
nsubj(want-17, we-16)
acl:relcl(behavior-15, want-17)
mark(generics-19, for-18)
advcl(want-17, generics-19)
det(enum-22, The-21)
nsubj(union-29, enum-22)
case(union-25, of-23)
det(union-25, a-24)
nmod:of(enum-22, union-25)
cop(union-29, is-26)
neg(union-29, not-27)
det(union-29, a-28)
dep(generics-19, union-29)
advmod(unifying-32, When-31)
advcl(behavior-15, unifying-32)
advmod(MyEnum-35, here-33)
case(MyEnum-35, with-34)
nmod:with(string-47, MyEnum-35)
nsubj(string-47, it-37)
cop(string-47, 's-38)
neg(string-47, not-39)
det(string-47, the-40)
amod(string-47, same-41)
advmod(unifying-43, as-42)
amod(string-47, unifying-43)
case(number-45, with-44)
nmod:with(unifying-43, number-45)
dep(unifying-32, string-47)
case(case-52, In-49)
det(case-52, the-50)
amod(case-52, former-51)
nmod:in(mapped-56, case-52)
nsubjpass(mapped-56, T-54)
auxpass(mapped-56, is-55)
parataxis(behavior-15, mapped-56)
case(MyEnum-58, to-57)
nmod:to(mapped-56, MyEnum-58)
case(latter-62, in-60)
det(latter-62, the-61)
nmod:in(mapped-56, latter-62)
nsubjpass(mapped-66, it-63)
aux(mapped-66, would-64)
auxpass(mapped-66, be-65)
parataxis(behavior-15, mapped-66)
case(number-68, to-67)
nmod:to(mapped-66, number-68)
cc(mapped-66, and-69)
expl(warning-74, there-70)
aux(warning-74, would-71)
cop(warning-74, be-72)
neg(warning-74, no-73)
parataxis(behavior-15, warning-74)
conj:and(mapped-66, warning-74)
advmod(join-80, typeCheck-76)
nsubj(join-80, LINE_JOINER-78)
parataxis(behavior-15, join-80)
dobj(join-80, -LRB--81)
parataxis(join-80, **-84)
dobj(**-84, @enum-85)
compound(string-89, number-87)
dep(@enum-85, string-89)
dep(@enum-85, *-91)
compound(=-98, var-96)
compound(=-98, MyEnum-97)
xcomp(support-7, =-98)
dep(=-98, A-100)
dep(A-100, 1-102)
dep(A-100, B-104)
dep(B-104, asdf-107)
root(ROOT-0, /-114)
dobj(/-114, **-115)
amod(T-121, *-119)
compound(T-121, @template-120)
nsubj(@param-126, T-121)
nsubj(@param-126, *-125)
parataxis(/-114, @param-126)
nsubj(|-129, T-128)
parataxis(@param-126, |-129)
dep(x-132, string-130)
xcomp(|-129, x-132)
dep(function-177, *-136)
ccomp(function-177, @return-137)
dobj(@return-137, T-139)
nsubj(/-145, *-144)
parataxis(function-149, /-145)
acl:relcl(T-139, function-149)
dep(-LCB--154, f-150)
nsubj(-LCB--154, x-152)
dep(return-158, -LCB--154)
ccomp(function-149, return-158)
parataxis(return-158, **-160)
compound(T-163, @type-161)
dobj(**-160, T-163)
dep(**-160, *-165)
dobj(return-158, x-168)
dep(T-139, -RCB--173)
xcomp(|-129, function-177)
dobj(function-177, g-178)
dep(*-184, **-181)
compound(*-184, !-182)
compound(*-184, MyEnum-183)
dep(x-186, *-184)
dep(g-178, x-186)
dep(g-178, ''-189)
dobj(''-189, f-192)
dep(f-192, x-194)
dep(f-192, 3-197)
amod(f-192, ''-199)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): instead, we want to evaluate the TTL variables when the non-TTL variables are
unknown, and use that for the declaredType. Will try in a follow-up CL.
Specificity: 0.992854
Content Structure:
root(ROOT-0, dimvar-2)
advmod(want-8, instead-5)
nsubj(want-8, we-7)
nsubj:xsubj(evaluate-10, we-7)
nsubj:xsubj(use-22, we-7)
dep(dimvar-2, want-8)
mark(evaluate-10, to-9)
xcomp(want-8, evaluate-10)
det(variables-13, the-11)
compound(variables-13, TTL-12)
dobj(evaluate-10, variables-13)
advmod(unknown-19, when-14)
det(variables-17, the-15)
amod(variables-17, non-TTL-16)
nsubj(unknown-19, variables-17)
cop(unknown-19, are-18)
advcl(evaluate-10, unknown-19)
cc(evaluate-10, and-21)
xcomp(want-8, use-22)
conj:and(evaluate-10, use-22)
mark(try-29, that-23)
mark(try-29, for-24)
det(Will-28, the-25)
compound(Will-28, declaredType-26)
nsubj(try-29, Will-28)
advcl(use-22, try-29)
case(CL-33, in-30)
det(CL-33, a-31)
compound(CL-33, follow-up-32)
nmod:in(try-29, CL-33)
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): invalidating here when isStructuralInterfacePrototype is true is
kind of arbitrary. We should only do it when the @record is implicitly implemented.
Specificity: 0.969798
Content Structure:
dep(do-19, dimvar-2)
parataxis(do-19, invalidating-5)
advmod(invalidating-5, here-6)
advmod(true-10, when-7)
nsubj(true-10, isStructuralInterfacePrototype-8)
cop(true-10, is-9)
advcl(invalidating-5, true-10)
cop(arbitrary-14, is-11)
advmod(arbitrary-14, kind-12)
mwe(kind-12, of-13)
ccomp(true-10, arbitrary-14)
nsubj(do-19, We-16)
aux(do-19, should-17)
advmod(do-19, only-18)
root(ROOT-0, do-19)
dobj(do-19, it-20)
advmod(implemented-26, when-21)
det(@record-23, the-22)
nsubjpass(implemented-26, @record-23)
auxpass(implemented-26, is-24)
advmod(implemented-26, implicitly-25)
advcl(do-19, implemented-26)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): it'd be nice to catch this warning
Specificity: 0.745086
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, it-5)
aux(nice-8, 'd-6)
cop(nice-8, be-7)
acl:relcl(it-5, nice-8)
mark(catch-10, to-9)
xcomp(nice-8, catch-10)
det(warning-12, this-11)
dobj(catch-10, warning-12)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): it's bad style to refer to DiagnosticGroups after DefaultPassConfig.
When we have a nicer way to know whether we're in compatibility mode, use that
here instead (and in the constructor of NewTypeInference).
Specificity: 0.998669
Content Structure:
root(ROOT-0, dimvar-2)
nmod:poss(style-8, it-5)
case(it-5, 's-6)
amod(style-8, bad-7)
dep(dimvar-2, style-8)
mark(refer-10, to-9)
acl(style-8, refer-10)
case(DiagnosticGroups-12, to-11)
nmod:to(refer-10, DiagnosticGroups-12)
case(DefaultPassConfig-14, after-13)
nmod:after(refer-10, DefaultPassConfig-14)
advmod(have-18, When-16)
nsubj(have-18, we-17)
acl:relcl(DefaultPassConfig-14, have-18)
det(way-21, a-19)
amod(way-21, nicer-20)
dobj(have-18, way-21)
mark(know-23, to-22)
acl(way-21, know-23)
mark(mode-29, whether-24)
nsubj(mode-29, we-25)
cop(mode-29, 're-26)
case(mode-29, in-27)
compound(mode-29, compatibility-28)
ccomp(know-23, mode-29)
dep(know-23, use-31)
dobj(use-31, that-32)
advmod(use-31, here-33)
advmod(use-31, instead-34)
dep(refer-10, and-36)
case(constructor-39, in-37)
det(constructor-39, the-38)
nmod:in(and-36, constructor-39)
case(NewTypeInference-41, of-40)
nmod:of(constructor-39, NewTypeInference-41)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): look if the meet is needed
Specificity: 0.720156
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, look-5)
mark(meet-8, if-6)
nsubj(meet-8, the-7)
advcl(look-5, meet-8)
auxpass(needed-10, is-9)
ccomp(meet-8, needed-10)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): look into declaring IObject as @record in the default
externs, and the special handling here can be removed.
Specificity: 0.94448
Content Structure:
dep(look-5, dimvar-2)
root(ROOT-0, look-5)
mark(declaring-7, into-6)
advcl(look-5, declaring-7)
dobj(declaring-7, IObject-8)
mark(externs-14, as-9)
csubj(externs-14, @record-10)
case(default-13, in-11)
det(default-13, the-12)
nmod:in(@record-10, default-13)
advcl(declaring-7, externs-14)
cc(externs-14, and-16)
det(handling-19, the-17)
amod(handling-19, special-18)
nsubjpass(removed-23, handling-19)
advmod(removed-23, here-20)
aux(removed-23, can-21)
auxpass(removed-23, be-22)
advcl(declaring-7, removed-23)
conj:and(externs-14, removed-23)
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): merge these two if possible.
Specificity: 0.70465
Content Structure:
dep(merge-5, dimvar-2)
root(ROOT-0, merge-5)
det(two-7, these-6)
dobj(merge-5, two-7)
dep(possible-9, if-8)
amod(two-7, possible-9)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeNative.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): need more @template warnings
- warn for multiple @template annotations
- warn for @template annotation w/out usage
Specificity: 0.882133
Content Structure:
nsubj(warn-10, dimvar-2)
dep(dimvar-2, need-5)
advmod(@template-7, more-6)
amod(warnings-8, @template-7)
dep(need-5, warnings-8)
root(ROOT-0, warn-10)
case(annotations-14, for-11)
amod(annotations-14, multiple-12)
compound(annotations-14, @template-13)
nmod:for(warn-16, annotations-14)
ccomp(warn-10, warn-16)
case(usage-21, for-17)
amod(usage-21, @template-18)
compound(usage-21, annotation-19)
compound(usage-21, w/out-20)
nmod:for(warn-16, usage-21)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): once we fix scoping for catch blocks, uncomment the
precondition below.
Specificity: 0.835501
Content Structure:
root(ROOT-0, dimvar-2)
mark(fix-7, once-5)
nsubj(fix-7, we-6)
advcl(uncomment-13, fix-7)
xcomp(fix-7, scoping-8)
case(blocks-11, for-9)
compound(blocks-11, catch-10)
nmod:for(scoping-8, blocks-11)
dep(dimvar-2, uncomment-13)
det(precondition-15, the-14)
dobj(uncomment-13, precondition-15)
advmod(uncomment-13, below-16)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): the current type inf also doesn't catch this.
Consider warning when the prop is not an "own" prop.
Specificity: 0.957109
Content Structure:
nsubj(Consider-15, dimvar-2)
det(inf-8, the-5)
amod(inf-8, current-6)
compound(inf-8, type-7)
nsubj(catch-12, inf-8)
advmod(catch-12, also-9)
aux(catch-12, does-10)
neg(catch-12, n't-11)
dep(dimvar-2, catch-12)
dobj(catch-12, this-13)
root(ROOT-0, Consider-15)
xcomp(Consider-15, warning-16)
advmod(prop-26, when-17)
det(prop-19, the-18)
nsubj(prop-26, prop-19)
cop(prop-26, is-20)
neg(prop-26, not-21)
det(prop-26, an-22)
amod(prop-26, own-24)
advcl(warning-16, prop-26)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): this could have a better name, but it's used by non-compiler code.
Rename in a follow-up CL.

Specificity: 0.95028
Content Structure:
root(ROOT-0, dimvar-2)
nsubj(have-7, this-5)
aux(have-7, could-6)
dep(dimvar-2, have-7)
det(name-10, a-8)
amod(name-10, better-9)
dobj(have-7, name-10)
cc(have-7, but-12)
nsubjpass(used-15, it-13)
auxpass(used-15, 's-14)
dep(dimvar-2, used-15)
conj:but(have-7, used-15)
case(Rename-20, by-16)
compound(Rename-20, non-compiler-17)
compound(Rename-20, code-18)
nmod:agent(used-15, Rename-20)
case(CL-24, in-21)
det(CL-24, a-22)
compound(CL-24, follow-up-23)
nmod:in(Rename-20, CL-24)
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): this should use getReferenceName() instead of this.primitiveType
Specificity: 0.875924
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, this-5)
aux(use-7, should-6)
acl:relcl(this-5, use-7)
amod(-LRB--9, getReferenceName-8)
dobj(use-7, -LRB--9)
case(this.primitiveType-13, instead-11)
mwe(instead-11, of-12)
nmod:instead_of(dimvar-2, this.primitiveType-13)
File Name: /src/com/google/javascript/rhino/jstype/EnumElementType.java
Time Of Creation: 2017-06-21T13:11:35-07:00
Time Of Deletion: null
Creation Commit Hash: e0367389d0b7849bd448582f543026f29eb576fa
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): this warning is wrong.
But to remove it, we should check that a concrete class C that inherits from an
abstract class A that implements an interface I, implements all methods of I.
Currently, we only check classes that directly implement an interface.
Specificity: 0.999631
Content Structure:
dep(wrong-8, dimvar-2)
det(warning-6, this-5)
nsubj(wrong-8, warning-6)
nsubj(remove-12, warning-6)
cop(wrong-8, is-7)
advcl(check-45, wrong-8)
cc(wrong-8, But-10)
mark(remove-12, to-11)
conj:but(wrong-8, remove-12)
advcl(check-45, remove-12)
dobj(remove-12, it-13)
nsubj(check-17, we-15)
aux(check-17, should-16)
parataxis(check-45, check-17)
mark(implements-36, that-18)
det(C-22, a-19)
amod(C-22, concrete-20)
compound(C-22, class-21)
nsubj(inherits-24, C-22)
nsubj(implements-36, C-22)
ref(C-22, that-23)
acl:relcl(C-22, inherits-24)
case(A-29, from-25)
det(A-29, an-26)
amod(A-29, abstract-27)
compound(A-29, class-28)
nmod:from(inherits-24, A-29)
nsubj(implements-31, A-29)
ref(A-29, that-30)
acl:relcl(A-29, implements-31)
det(interface-33, an-32)
nsubj(I-34, interface-33)
xcomp(implements-31, I-34)
ccomp(check-17, implements-36)
det(methods-38, all-37)
dobj(implements-36, methods-38)
case(I.-40, of-39)
nmod:of(methods-38, I.-40)
advmod(implements-36, Currently-41)
nsubj(check-45, we-43)
advmod(check-45, only-44)
root(ROOT-0, check-45)
dobj(check-45, classes-46)
nsubj(implement-49, classes-46)
ref(classes-46, that-47)
advmod(implement-49, directly-48)
acl:relcl(classes-46, implement-49)
det(interface-51, an-50)
dobj(implement-49, interface-51)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): to fix these, we must collect all THROWs w/out an out-edge
and use the envs from them in the summary calculation. (Rare case.)
Specificity: 0.9902
Content Structure:
root(ROOT-0, dimvar-2)
mark(fix-6, to-5)
acl(dimvar-2, fix-6)
dobj(fix-6, these-7)
nsubj(collect-11, we-9)
aux(collect-11, must-10)
dep(fix-6, collect-11)
det(THROWs-13, all-12)
nsubj(w/out-14, THROWs-13)
nsubj(use-18, THROWs-13)
ccomp(collect-11, w/out-14)
det(out-edge-16, an-15)
dobj(w/out-14, out-edge-16)
cc(w/out-14, and-17)
ccomp(collect-11, use-18)
conj:and(w/out-14, use-18)
det(envs-20, the-19)
dobj(use-18, envs-20)
case(them-22, from-21)
nmod:from(use-18, them-22)
case(calculation-26, in-23)
det(calculation-26, the-24)
compound(calculation-26, summary-25)
advcl(use-18, calculation-26)
dep(calculation-26, Rare-29)
dep(Rare-29, case-30)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): typecheck that code properly and remove this.
Specificity: 0.743216
Content Structure:
dep(typecheck-5, dimvar-2)
root(ROOT-0, typecheck-5)
det(code-7, that-6)
dobj(typecheck-5, code-7)
advmod(typecheck-5, properly-8)
cc(typecheck-5, and-9)
conj:and(typecheck-5, remove-10)
dobj(remove-10, this-11)
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): types of most object literals are considered anonymous objects, and as such,
a property of an object literal prevents all properties with the same name from being
disambiguated. In OTI, this might be hard to change, but in NTI, it is easy to change
isUnknownObject to return false for object literals. I deliberately followed the behavior
of OTI to help with the migration, but can revisit in the future to improve
disambiguation.
Specificity: 0.999999
Content Structure:
nsubj(followed-65, dimvar-2)
nsubj(revisit-78, dimvar-2)
nsubjpass(considered-11, types-5)
case(literals-9, of-6)
amod(literals-9, most-7)
compound(literals-9, object-8)
nmod:of(types-5, literals-9)
auxpass(considered-11, are-10)
dep(dimvar-2, considered-11)
amod(objects-13, anonymous-12)
dobj(considered-11, objects-13)
cc(considered-11, and-15)
case(such-17, as-16)
nmod:as(prevents-25, such-17)
det(property-20, a-19)
nsubj(prevents-25, property-20)
case(literal-24, of-21)
det(literal-24, an-22)
compound(literal-24, object-23)
nmod:of(property-20, literal-24)
dep(dimvar-2, prevents-25)
conj:and(considered-11, prevents-25)
det(properties-27, all-26)
dobj(prevents-25, properties-27)
case(name-31, with-28)
det(name-31, the-29)
amod(name-31, same-30)
nmod:with(properties-27, name-31)
mark(disambiguated-34, from-32)
auxpass(disambiguated-34, being-33)
advcl(prevents-25, disambiguated-34)
case(OTI-37, In-36)
nmod:in(hard-42, OTI-37)
nsubj(hard-42, this-39)
nsubj:xsubj(change-44, this-39)
aux(hard-42, might-40)
cop(hard-42, be-41)
dep(isUnknownObject-55, hard-42)
mark(change-44, to-43)
xcomp(hard-42, change-44)
cc(hard-42, but-46)
case(NTI-48, in-47)
nmod:in(easy-52, NTI-48)
nsubj(easy-52, it-50)
nsubj:xsubj(change-54, it-50)
cop(easy-52, is-51)
conj:but(hard-42, easy-52)
dep(isUnknownObject-55, easy-52)
mark(change-54, to-53)
xcomp(easy-52, change-54)
parataxis(followed-65, isUnknownObject-55)
mark(return-57, to-56)
xcomp(isUnknownObject-55, return-57)
nsubj(isUnknownObject-55, false-58)
nsubj:xsubj(return-57, false-58)
case(literals-61, for-59)
compound(literals-61, object-60)
nmod:for(false-58, literals-61)
nsubj(followed-65, I-63)
advmod(followed-65, deliberately-64)
root(ROOT-0, followed-65)
det(behavior-67, the-66)
dobj(followed-65, behavior-67)
case(OTI-69, of-68)
nmod:of(behavior-67, OTI-69)
mark(help-71, to-70)
acl(behavior-67, help-71)
case(migration-74, with-72)
det(migration-74, the-73)
nmod:with(help-71, migration-74)
cc(followed-65, but-76)
aux(revisit-78, can-77)
conj:but(followed-65, revisit-78)
case(future-81, in-79)
det(future-81, the-80)
nmod:in(revisit-78, future-81)
mark(improve-83, to-82)
acl(future-81, improve-83)
dobj(improve-83, disambiguation-84)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): up to ES5, prop decls use dot.
Should we start allowing [] for @unrestricted classes?
Specificity: 0.952893
Content Structure:
root(ROOT-0, dimvar-2)
advmod(dimvar-2, up-5)
case(ES5-7, to-6)
nmod:to(up-5, ES5-7)
amod(use-11, prop-9)
compound(use-11, decls-10)
appos(dimvar-2, use-11)
advmod(start-16, dot-12)
aux(start-16, Should-14)
nsubj(start-16, we-15)
acl:relcl(use-11, start-16)
xcomp(start-16, allowing-17)
dobj(allowing-17, -LSB--18)
dep(start-16, -RSB--19)
case(classes-22, for-20)
amod(classes-22, @unrestricted-21)
nmod:for(-RSB--19, classes-22)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceWithTypeSyntaxTranspilationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): void can be represented in 2 ways: Token.VOID and a
Token.STRING whose getString() is "void".
Change jsdoc parsing to only have one representation.
Specificity: 0.994895
Content Structure:
dep(represented-8, dimvar-2)
nsubjpass(represented-8, void-5)
aux(represented-8, can-6)
auxpass(represented-8, be-7)
root(ROOT-0, represented-8)
case(ways-11, in-9)
nummod(ways-11, 2-10)
nmod:in(represented-8, ways-11)
dep(ways-11, Token.VOID-13)
cc(Token.VOID-13, and-14)
det(Token.STRING-16, a-15)
dep(ways-11, Token.STRING-16)
conj:and(Token.VOID-13, Token.STRING-16)
nmod:poss(getString-18, Token.STRING-16)
ref(Token.STRING-16, whose-17)
nsubj(Change-26, getString-18)
advmod(void-23, -RRB--20)
cop(void-23, is-21)
parataxis(Change-26, void-23)
acl:relcl(Token.STRING-16, Change-26)
amod(parsing-28, jsdoc-27)
dobj(Change-26, parsing-28)
mark(have-31, to-29)
advmod(have-31, only-30)
acl(parsing-28, have-31)
nummod(representation-33, one-32)
dobj(have-31, representation-33)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): warn for invalid assignment.
Specificity: 0.684521
Content Structure:
dep(warn-5, dimvar-2)
root(ROOT-0, warn-5)
case(assignment-8, for-6)
amod(assignment-8, invalid-7)
nmod:for(warn-5, assignment-8)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTTLTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): warn for invalid return type.
Specificity: 0.704452
Content Structure:
dep(warn-5, dimvar-2)
root(ROOT-0, warn-5)
case(type-9, for-6)
amod(type-9, invalid-7)
compound(type-9, return-8)
nmod:for(warn-5, type-9)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTTLTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): warn here about GlobalTypeInfoCollector.INTERFACE_METHOD_NOT_IMPLEMENTED
Specificity: 0.995698
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, warn-5)
advmod(warn-5, here-6)
case(METHOD_NOT_IMPLEMENTED-10, about-7)
compound(METHOD_NOT_IMPLEMENTED-10, GlobalTypeInfoCollector.INTERFACE-8)
compound(METHOD_NOT_IMPLEMENTED-10, _-9)
nmod:about(warn-5, METHOD_NOT_IMPLEMENTED-10)
File Name: /test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-07-13T15:12:38-07:00
Time Of Deletion: null
Creation Commit Hash: 67606b098c5e8477c156487e995b2d93a2f0edb6
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): warn if multiple jsdocs for a fun
Specificity: 0.738215
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, warn-5)
mark(jsdocs-8, if-6)
nsubj(jsdocs-8, multiple-7)
advcl(warn-5, jsdocs-8)
case(fun-11, for-9)
det(fun-11, a-10)
nmod:for(jsdocs-8, fun-11)
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): warn if multiple jsdocs for a fun
Specificity: 0.738215
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, warn-5)
mark(jsdocs-8, if-6)
nsubj(jsdocs-8, multiple-7)
advcl(warn-5, jsdocs-8)
case(fun-11, for-9)
det(fun-11, a-10)
nmod:for(jsdocs-8, fun-11)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfoCollector.java
Time Of Creation: 2017-06-30T08:37:51-07:00
Time Of Deletion: null
Creation Commit Hash: 9b554597ad533ac38b6c3adf398df95bb380326b
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): we must warn when a THIS fun isn't called as a method
Specificity: 0.891156
Content Structure:
root(ROOT-0, dimvar-2)
dep(dimvar-2, we-5)
aux(warn-7, must-6)
acl:relcl(we-5, warn-7)
advmod(called-14, when-8)
det(fun-11, a-9)
compound(fun-11, THIS-10)
nsubjpass(called-14, fun-11)
auxpass(called-14, is-12)
neg(called-14, n't-13)
advcl(warn-7, called-14)
case(method-17, as-15)
det(method-17, a-16)
nmod:as(called-14, method-17)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): we need to clean up the combination of loose functions with
new: and/or this: types. Eg, this.nominalType doesn't appear at all.
Specificity: 0.979095
Content Structure:
root(ROOT-0, dimvar-2)
nsubj(need-6, we-5)
nsubj:xsubj(clean-8, we-5)
dep(dimvar-2, need-6)
mark(clean-8, to-7)
xcomp(need-6, clean-8)
compound:prt(clean-8, up-9)
det(combination-11, the-10)
dobj(clean-8, combination-11)
case(functions-14, of-12)
amod(functions-14, loose-13)
nmod:of(combination-11, functions-14)
case(new-16, with-15)
nmod:with(clean-8, new-16)
cc(need-6, and/or-18)
det(types-21, this-19)
nsubj(appear-28, types-21)
dep(types-21, Eg-23)
amod(types-21, this.nominalType-25)
aux(appear-28, does-26)
neg(appear-28, n't-27)
dep(dimvar-2, appear-28)
conj:and/or(need-6, appear-28)
case(all-30, at-29)
nmod:at(appear-28, all-30)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(dimvar): we skip the backwards analysis of g (and thus the creation of deferred checks)
when the return type of a function is declared (see NTIScope#hasUndeclaredFormalsOrOuters).
Is it worth having a more accurate test for determining whether a DeclaredFunctionType is
missing information, to catch cases like this one?
It should be uncommon in practice to declare the return and not declare the parameters.
Specificity: 0.999996
Content Structure:
root(ROOT-0, dimvar-2)
nsubj(skip-6, we-5)
dep(dimvar-2, skip-6)
det(analysis-9, the-7)
amod(analysis-9, backwards-8)
nsubj(Is-36, analysis-9)
case(g-11, of-10)
nmod:of(analysis-9, g-11)
cc(creation-16, and-13)
dep(creation-16, thus-14)
det(creation-16, the-15)
dep(g-11, creation-16)
case(checks-19, of-17)
amod(checks-19, deferred-18)
nmod:of(creation-16, checks-19)
advmod(declared-29, when-21)
det(type-24, the-22)
compound(type-24, return-23)
nsubjpass(declared-29, type-24)
case(function-27, of-25)
det(function-27, a-26)
nmod:of(type-24, function-27)
auxpass(declared-29, is-28)
acl:relcl(g-11, declared-29)
parataxis(declared-29, see-31)
amod(#hasUndeclaredFormalsOrOuters-33, NTIScope-32)
dobj(see-31, #hasUndeclaredFormalsOrOuters-33)
ccomp(skip-6, Is-36)
nsubj(having-39, it-37)
dep(having-39, worth-38)
xcomp(Is-36, having-39)
det(test-43, a-40)
advmod(accurate-42, more-41)
amod(test-43, accurate-42)
nsubj(uncommon-63, test-43)
nsubj:xsubj(declare-67, test-43)
nsubj:xsubj(declare-72, test-43)
mark(determining-45, for-44)
acl(test-43, determining-45)
mark(missing-50, whether-46)
det(DeclaredFunctionType-48, a-47)
nsubj(missing-50, DeclaredFunctionType-48)
aux(missing-50, is-49)
ccomp(determining-45, missing-50)
dobj(missing-50, information-51)
mark(catch-54, to-53)
advcl(missing-50, catch-54)
dobj(catch-54, cases-55)
case(one-58, like-56)
det(one-58, this-57)
nmod:like(catch-54, one-58)
nsubj(uncommon-63, It-60)
nsubj:xsubj(declare-67, It-60)
aux(uncommon-63, should-61)
cop(uncommon-63, be-62)
ccomp(having-39, uncommon-63)
case(practice-65, in-64)
nmod:in(uncommon-63, practice-65)
mark(declare-67, to-66)
xcomp(uncommon-63, declare-67)
det(return-69, the-68)
dobj(declare-67, return-69)
cc(declare-67, and-70)
neg(declare-72, not-71)
xcomp(uncommon-63, declare-72)
conj:and(declare-67, declare-72)
det(parameters-74, the-73)
dobj(declare-72, parameters-74)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(goktug): Create a utility to share this logic and start using getQualifiedOriginalName.
Specificity: 0.875867
Content Structure:
dep(Create-5, goktug-2)
root(ROOT-0, Create-5)
det(utility-7, a-6)
dobj(Create-5, utility-7)
mark(share-9, to-8)
acl(utility-7, share-9)
det(logic-11, this-10)
dobj(share-9, logic-11)
cc(share-9, and-12)
acl(utility-7, start-13)
conj:and(share-9, start-13)
xcomp(start-13, using-14)
dobj(using-14, getQualifiedOriginalName-15)
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(heeba): Eventually, Es6CheckModule will be its own compiler pass.
Specificity: 0.841327
Content Structure:
root(ROOT-0, heeba-2)
advmod(pass-13, Eventually-5)
nsubj(pass-13, Es6CheckModule-7)
aux(pass-13, will-8)
cop(pass-13, be-9)
nmod:poss(pass-13, its-10)
amod(pass-13, own-11)
compound(pass-13, compiler-12)
dep(heeba-2, pass-13)
File Name: /src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-06-05T08:30:03-07:00
Time Of Deletion: 2017-06-05T08:30:19-07:00
Creation Commit Hash: c63039b323fbb83c1b088f77f21d827d93b59f61
Deletion Commit Hash: 871ed1380a6e7da59539f4e03c946b1a9b072218
Time To Complete: P0D; PT16S

Type: Incomplete
Content:
(jakubvrana): Add a test for goog.dom.DomHelper.
Specificity: 0.747794
Content Structure:
dep(Add-5, jakubvrana-2)
root(ROOT-0, Add-5)
det(test-7, a-6)
dobj(Add-5, test-7)
case(goog.dom.DomHelper-9, for-8)
nmod:for(test-7, goog.dom.DomHelper-9)
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jakubvrana): Support union, e.g. {!TagName<!HTMLDivElement>|!TagName<!HTMLBRElement>}.
Specificity: 0.96419
Content Structure:
root(ROOT-0, jakubvrana-2)
compound(union-6, Support-5)
dep(jakubvrana-2, union-6)
appos(union-6, e.g.-8)
compound(<!HTMLBRElement>-16, !-10)
compound(<!HTMLBRElement>-16, TagName-11)
compound(<!HTMLBRElement>-16, <!HTMLDivElement>-12)
compound(<!HTMLBRElement>-16, |-13)
compound(<!HTMLBRElement>-16, TagName-15)
dep(e.g.-8, <!HTMLBRElement>-16)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Actually verify the properties of the BehaviorDefinitions.
Specificity: 0.803289
Content Structure:
dep(verify-6, jlklein-2)
advmod(verify-6, Actually-5)
root(ROOT-0, verify-6)
det(properties-8, the-7)
dobj(verify-6, properties-8)
case(BehaviorDefinitions-11, of-9)
det(BehaviorDefinitions-11, the-10)
nmod:of(properties-8, BehaviorDefinitions-11)
File Name: ./test/com/google/javascript/jscomp/PolymerBehaviorExtractorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Add more complex test cases and verify behaviors and descriptors.
Specificity: 0.819761
Content Structure:
root(ROOT-0, jlklein-2)
dep(jlklein-2, Add-5)
advmod(complex-7, more-6)
amod(cases-9, complex-7)
compound(cases-9, test-8)
dobj(Add-5, cases-9)
cc(Add-5, and-10)
dep(jlklein-2, verify-11)
conj:and(Add-5, verify-11)
dobj(verify-11, behaviors-12)
cc(behaviors-12, and-13)
dobj(verify-11, descriptors-14)
conj:and(behaviors-12, descriptors-14)
File Name: ./test/com/google/javascript/jscomp/PolymerClassDefinitionTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Add tests for non-global definitions, interface externs, read-only setters, etc.
Specificity: 0.829307
Content Structure:
root(ROOT-0, jlklein-2)
amod(tests-6, Add-5)
dep(jlklein-2, tests-6)
case(definitions-9, for-7)
amod(definitions-9, non-global-8)
nmod:for(tests-6, definitions-9)
amod(externs-12, interface-11)
appos(definitions-9, externs-12)
amod(setters-15, read-only-14)
appos(definitions-9, setters-15)
dep(definitions-9, etc.-17)
File Name: ./test/com/google/javascript/jscomp/PolymerClassRewriterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Add unit tests for remaining util functions.
Specificity: 0.764308
Content Structure:
root(ROOT-0, jlklein-2)
amod(tests-7, Add-5)
compound(tests-7, unit-6)
dep(jlklein-2, tests-7)
case(functions-11, for-8)
amod(functions-11, remaining-9)
amod(functions-11, util-10)
nmod:for(tests-7, functions-11)
File Name: ./test/com/google/javascript/jscomp/PolymerPassStaticUtilsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Switch back to an error when everyone is upgraded to Polymer 1.0
Specificity: 0.852266
Content Structure:
root(ROOT-0, jlklein-2)
dep(jlklein-2, Switch-5)
compound:prt(Switch-5, back-6)
case(error-9, to-7)
det(error-9, an-8)
nmod:to(Switch-5, error-9)
advmod(upgraded-13, when-10)
nsubjpass(upgraded-13, everyone-11)
auxpass(upgraded-13, is-12)
advcl(Switch-5, upgraded-13)
case(Polymer-15, to-14)
nmod:to(upgraded-13, Polymer-15)
nummod(Polymer-15, 1.0-16)
File Name: ./src/com/google/javascript/jscomp/PolymerPassErrors.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(jlklein): Test more use cases: names to avoid copying, global vs. non-global, etc.
Specificity: 0.87047
Content Structure:
dep(Test-5, jlklein-2)
root(ROOT-0, Test-5)
amod(cases-8, more-6)
compound(cases-8, use-7)
dobj(Test-5, cases-8)
dobj(Test-5, names-10)
mark(avoid-12, to-11)
advcl(Test-5, avoid-12)
dobj(avoid-12, copying-13)
amod(non-global-17, global-15)
compound(non-global-17, vs.-16)
appos(copying-13, non-global-17)
dep(copying-13, etc.-19)
File Name: ./test/com/google/javascript/jscomp/PolymerBehaviorExtractorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(joeltine): Change back to asserting an error when b/28869281
is fixed.
Specificity: 0.810959
Content Structure:
dep(Change-5, joeltine-2)
root(ROOT-0, Change-5)
advmod(Change-5, back-6)
mark(asserting-8, to-7)
advcl(back-6, asserting-8)
det(error-10, an-9)
dobj(asserting-8, error-10)
advmod(fixed-14, when-11)
nsubjpass(fixed-14, b/28869281-12)
auxpass(fixed-14, is-13)
advcl(Change-5, fixed-14)
File Name: ./test/com/google/javascript/jscomp/SimpleReplaceScriptTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(joeltine): Remove this and properly handle hot swap passes. See
b/28869281 for context.
Specificity: 0.869942
Content Structure:
root(ROOT-0, joeltine-2)
dep(joeltine-2, Remove-5)
dobj(Remove-5, this-6)
cc(Remove-5, and-7)
advmod(handle-9, properly-8)
dep(joeltine-2, handle-9)
conj:and(Remove-5, handle-9)
amod(passes-12, hot-10)
compound(passes-12, swap-11)
dobj(handle-9, passes-12)
compound(b/28869281-15, See-14)
dep(Remove-5, b/28869281-15)
case(context-17, for-16)
nmod:for(Remove-5, context-17)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: null
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(joeltine): This would probably better as its own checked exception.
Specificity: 0.801469
Content Structure:
root(ROOT-0, joeltine-2)
nsubj(better-8, This-5)
aux(better-8, would-6)
advmod(better-8, probably-7)
dep(joeltine-2, better-8)
case(exception-13, as-9)
nmod:poss(exception-13, its-10)
amod(exception-13, own-11)
amod(exception-13, checked-12)
nmod:as(better-8, exception-13)
File Name: ./src/com/google/javascript/jscomp/transpile/CachingTranspiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz) Use type information if available to fold
instanceof.
Specificity: 0.775534
Content Structure:
nsubj(Use-4, johnlenz-2)
root(ROOT-0, Use-4)
compound(information-6, type-5)
dobj(Use-4, information-6)
nsubj:xsubj(fold-10, information-6)
dep(available-8, if-7)
amod(information-6, available-8)
mark(fold-10, to-9)
xcomp(Use-4, fold-10)
dobj(fold-10, instanceof-11)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz):  This test confirms that the constructor (a.b) isn't
improperly removed, but this result isn't really what we want as
namespace placeholders for a.b and a.b.c remain.
Specificity: 0.992566
Content Structure:
root(ROOT-0, johnlenz-2)
det(test-6, This-5)
nsubj(confirms-7, test-6)
dep(johnlenz-2, confirms-7)
mark(removed-17, that-8)
det(constructor-10, the-9)
nsubjpass(removed-17, constructor-10)
appos(constructor-10, a.b-12)
auxpass(removed-17, is-14)
neg(removed-17, n't-15)
advmod(removed-17, improperly-16)
ccomp(confirms-7, removed-17)
cc(confirms-7, but-19)
det(result-21, this-20)
nsubj(is-22, result-21)
dep(johnlenz-2, is-22)
conj:but(confirms-7, is-22)
neg(is-22, n't-23)
advmod(is-22, really-24)
dobj(want-27, what-25)
nsubj(want-27, we-26)
ccomp(is-22, want-27)
mark(remain-35, as-28)
amod(placeholders-30, namespace-29)
nsubj(remain-35, placeholders-30)
case(a.b-32, for-31)
nmod:for(placeholders-30, a.b-32)
cc(a.b-32, and-33)
nmod:for(placeholders-30, a.b.c-34)
conj:and(a.b-32, a.b.c-34)
advcl(want-27, remain-35)
File Name: ./test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): "f" is side-effect free but we need
to propagate that "externObjSEThisMethod" is modifying
a local object.
Specificity: 0.948175
Content Structure:
dep(modifying-21, johnlenz-2)
nsubj(modifying-21, f-6)
cop(side-effect-9, is-8)
acl:relcl(f-6, side-effect-9)
advmod(side-effect-9, free-10)
cc(need-13, but-11)
nsubj(need-13, we-12)
nsubj:xsubj(propagate-15, we-12)
ccomp(side-effect-9, need-13)
mark(propagate-15, to-14)
xcomp(need-13, propagate-15)
dep(externObjSEThisMethod-18, that-16)
xcomp(propagate-15, externObjSEThisMethod-18)
aux(modifying-21, is-20)
root(ROOT-0, modifying-21)
det(object-24, a-22)
amod(object-24, local-23)
dobj(modifying-21, object-24)
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): "goog$global" should be part of a coding convention.
Note: GatherRawExports runs after property renaming and
collapse properties, so the two entries here protect goog.global in the
two common cases "collapse properties and renaming on" or both off
but not the case where only property renaming is on.
Specificity: 0.999909
Content Structure:
root(ROOT-0, johnlenz-2)
csubj(part-12, goog-6)
dep(global-8, $-7)
dobj(goog-6, global-8)
aux(part-12, should-10)
cop(part-12, be-11)
dep(johnlenz-2, part-12)
case(coding-15, of-13)
det(coding-15, a-14)
nmod:of(part-12, coding-15)
dep(Note-18, convention-16)
dep(part-12, Note-18)
nsubj(runs-21, GatherRawExports-20)
parataxis(part-12, runs-21)
case(renaming-24, after-22)
compound(renaming-24, property-23)
nmod:after(runs-21, renaming-24)
cc(renaming-24, and-25)
compound(properties-27, collapse-26)
nmod:after(runs-21, properties-27)
conj:and(renaming-24, properties-27)
dep(part-12, so-29)
det(entries-32, the-30)
nummod(entries-32, two-31)
nsubj(protect-34, entries-32)
nsubj(renaming-45, entries-32)
advmod(protect-34, here-33)
parataxis(part-12, protect-34)
dobj(protect-34, goog.global-35)
case(cases-40, in-36)
det(cases-40, the-37)
nummod(cases-40, two-38)
amod(cases-40, common-39)
nmod:in(protect-34, cases-40)
compound(properties-43, collapse-42)
dep(cases-40, properties-43)
cc(protect-34, and-44)
parataxis(part-12, renaming-45)
conj:and(protect-34, renaming-45)
compound:prt(renaming-45, on-46)
cc(renaming-45, or-48)
cc:preconj(off-50, both-49)
advmod(case-54, off-50)
cc(off-50, but-51)
conj:but(off-50, not-52)
advmod(case-54, not-52)
det(case-54, the-53)
conj:and(protect-34, case-54)
conj:or(renaming-45, case-54)
advmod(on-60, where-55)
amod(renaming-58, only-56)
compound(renaming-58, property-57)
nsubj(on-60, renaming-58)
cop(on-60, is-59)
advcl(case-54, on-60)
File Name: ./src/com/google/javascript/jscomp/GatherRawExports.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): "i = a" should be removed here.
Specificity: 0.732928
Content Structure:
root(ROOT-0, johnlenz-2)
nsubjpass(removed-12, i-6)
compound(a-8, =-7)
advmod(removed-12, a-8)
aux(removed-12, should-10)
auxpass(removed-12, be-11)
dep(johnlenz-2, removed-12)
advmod(removed-12, here-13)
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): "i = a" should be removed here.
}

public void testUnusedAssign9() {
test("function b(a) { a = 1; arguments=1; }; b(6)",
}

public void testUnusedPropAssign1() {
@@ -400,7 +400,7 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testUnusedPropAssign3b() {
test("var x = {}; x[alert()] = alert(); x[alert() + alert()] = alert()",
}

public void testUnusedPropAssign4() {
@@ -409,7 +409,7 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testUnusedPropAssign5() {
test("var x = {foo: bar()}; x['foo'] = 5;",
}

public void testUnusedPropAssign6() {
@@ -426,38 +426,33 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testUnusedPropAssign7c() {
test("var x = {}; x[alert(x.foo)] = x.bar;",
}

public void testUsedPropAssign1() {
test("function f(x) { x.bar = 3; } f({});",
}

public void testUsedPropAssign2() {
test("try { throw z; } catch (e) { e.bar = 3; }",
}

public void testUsedPropAssign3() {
This pass does not do flow analysis.
test("var x = {}; x.foo = 3; x = bar();",
}

public void testUsedPropAssign4() {
test("var y = foo(); var x = {}; x.foo = 3; y[x.foo] = 5;",
}

public void testUsedPropAssign5() {
test("var y = foo(); var x = 3; y[x] = 5;",
}

public void testUsedPropAssign6() {
test("var x = newNodeInDom(doc); x.innerHTML = 'new text';",
}

public void testUsedPropAssign7() {
@@ -479,12 +474,12 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testDependencies1b() {
test("var a = 3; var b = alert(function() { alert(a); });",
}

public void testDependencies1c() {
test("var a = 3; var _b = function() { alert(a); };",
}

public void testDependencies2() {
@@ -493,7 +488,7 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testDependencies2b() {
test("var a = 3; var b = 3; b = alert(function() { alert(a); });",
}

public void testDependencies2c() {
@@ -510,25 +505,25 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testLocalVarReferencesGlobalVar2() {
test("var a=3;function f(b, c){b=a; alert(c);} f();",
test("var a=3;function f(b, c){b=a; alert(c);} f();",
}

public void testNestedAssign1() {
test("var b = null; var a = (b = 3); alert(a);",
}

public void testNestedAssign2() {
test("var a = 1; var b = 2; var c = (b = a); alert(c);",
}

public void testNestedAssign3() {
test("var b = 0; var z; z = z = b = 1; alert(b);",
}

public void testCallSiteInteraction() {
@@ -537,58 +532,58 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {
test("var b=function(c){};b.call(null, x)",
test("var b=function(c){};b.apply(null, x)",

test("var b=function(c){return};b(1)",
test("var b=function(c){return};b(1,2)",
test("var b=function(c){return};b(1,2);b(3,4)",

Here there is a unknown reference to the function so we can't
change the signature.
test("var b=function(c,d){return d};b(1,2);b(3,4);b.length",

test("var b=function(c){return};b(1,2);b(3,new x())",

test("var b=function(c){return};b(1,2);b(new x(),4)",

test("var b=function(c,d){return d};b(1,2);b(new x(),4)",
test("var b=function(c,d,e){return d};b(1,2,3);b(new x(),4,new x())",

Recursive calls are OK.
test("var b=function(c,d){b(1,2);return d};b(3,4);b(5,6)",


remove all function arguments
test("var b=function(c,d){return};b(1,2)",

remove no function arguments

remove some function arguments
test("var b=function(e,f,c,d){return c+d};b(1,2)",
test("var b=function(c,d,e,f){return c+d};b(1,2)",
test("var b=function(e,c,f,d,g){return c+d};b(1,2)",

multiple definitions of "b", the parameters can be removed but
the call sites are left unmodified for now.
test("var b=function(c,d){};var b=function(e,f){};b(1,2)",
}

public void testCallSiteInteraction_constructors() {
@@ -596,13 +591,13 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {
The third level tests that the functions which have already been looked
at get re-visited if they are changed by a call site removal.
test("var Ctor1=function(a,b){return a};" +
"var Ctor2=function(a,b){Ctor1.call(this,a,b)};" +
"goog$inherits(Ctor2, Ctor1);" +
"new Ctor2(1,2)",
"var Ctor2=function(a,b){Ctor1.call(this,a,b)};" +
"goog$inherits(Ctor2, Ctor1);" +
"new Ctor2(1,2)",
"var Ctor1=function(a){return a};" +
"var Ctor2=function(a){Ctor1.call(this,a)};" +
"goog$inherits(Ctor2, Ctor1);" +
"var Ctor2=function(a){Ctor1.call(this,a)};" +
"goog$inherits(Ctor2, Ctor1);" +
}

public void testFunctionArgRemovalCausingInconsistency() {
@@ -611,19 +606,19 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {
contains a call site in its subtree (will cause the call site's parent
pointer to be null).
test("var a=function(x,y){};" +
"var b=function(z){};" +
"a(new b, b)",
"var b=function(z){};" +
"a(new b, b)",
"var a=function(){};" +
"var b=function(){};" +
"var b=function(){};" +
}

public void testRemoveUnusedVarsPossibleNpeCase() {
test("var a = [];" +
"var register = function(callback) {a[0] = callback};" +
"register(function(transformer) {});" +
"register(function(transformer) {});",
"var register = function(callback) {a[0] = callback};" +
"register(function(transformer) {});" +
"register(function(transformer) {});",
}

@@ -632,17 +627,17 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

Only the function definition can be modified, none of the call sites.
test("function JSCompiler_renameProperty(a) {};" +
"JSCompiler_renameProperty('a');",
"function JSCompiler_renameProperty() {};" +
"JSCompiler_renameProperty('a');",
"function JSCompiler_renameProperty() {};" +
}

public void testDoNotOptimizeJSCompiler_ObjectPropertyString() {
test("function JSCompiler_ObjectPropertyString(a, b) {};" +
"JSCompiler_ObjectPropertyString(window,'b');",
"function JSCompiler_ObjectPropertyString() {};" +
"JSCompiler_ObjectPropertyString(window,'b');",
"function JSCompiler_ObjectPropertyString() {};" +
}

public void testDoNotOptimizeSetters() {
@@ -651,8 +646,8 @@ public final class RemoveUnusedVarsTest extends CompilerTestCase {

public void testRemoveSingletonClass1() {
test("function goog$addSingletonGetter(a){}" +
"/**@constructor*/function a(){}" +
Specificity: 1.0
Content Structure:
dep(+-1899, -LRB--1)
dep(+-1899, johnlenz-2)
dep(+-1899, -RRB--3)
dep(+-1899, :-4)
dep(+-1899, ``-5)
dep(+-1899, i-6)
dep(+-1899, =-7)
dep(+-1899, a-8)
dep(+-1899, ''-9)
dep(+-1899, should-10)
dep(+-1899, be-11)
dep(+-1899, removed-12)
dep(+-1899, here-13)
dep(+-1899, .-14)
dep(+-1899, -RCB--15)
dep(+-1899, public-16)
dep(+-1899, void-17)
dep(+-1899, testUnusedAssign9-18)
dep(+-1899, -LRB--19)
dep(+-1899, -RRB--20)
dep(+-1899, -LCB--21)
dep(+-1899, test-22)
dep(+-1899, -LRB--23)
dep(+-1899, ``-24)
dep(+-1899, function-25)
dep(+-1899, b-26)
dep(+-1899, -LRB--27)
dep(+-1899, a-28)
dep(+-1899, -RRB--29)
dep(+-1899, -LCB--30)
dep(+-1899, a-31)
dep(+-1899, =-32)
dep(+-1899, 1-33)
dep(+-1899, ;-34)
dep(+-1899, arguments-35)
dep(+-1899, =-36)
dep(+-1899, 1-37)
dep(+-1899, ;-38)
dep(+-1899, -RCB--39)
dep(+-1899, ;-40)
dep(+-1899, b-41)
dep(+-1899, -LRB--42)
dep(+-1899, 6-43)
dep(+-1899, -RRB--44)
dep(+-1899, ''-45)
dep(+-1899, ,-46)
dep(+-1899, -RCB--47)
dep(+-1899, public-48)
dep(+-1899, void-49)
dep(+-1899, testUnusedPropAssign1-50)
dep(+-1899, -LRB--51)
dep(+-1899, -RRB--52)
dep(+-1899, -LCB--53)
dep(+-1899, @@-54)
dep(+-1899, -400,7-55)
dep(+-1899, +400,7-56)
dep(+-1899, @@-57)
dep(+-1899, public-58)
dep(+-1899, final-59)
dep(+-1899, class-60)
dep(+-1899, RemoveUnusedVarsTest-61)
dep(+-1899, extends-62)
dep(+-1899, CompilerTestCase-63)
dep(+-1899, -LCB--64)
dep(+-1899, public-65)
dep(+-1899, void-66)
dep(+-1899, testUnusedPropAssign3b-67)
dep(+-1899, -LRB--68)
dep(+-1899, -RRB--69)
dep(+-1899, -LCB--70)
dep(+-1899, test-71)
dep(+-1899, -LRB--72)
dep(+-1899, ``-73)
dep(+-1899, var-74)
dep(+-1899, x-75)
dep(+-1899, =-76)
dep(+-1899, -LCB--77)
dep(+-1899, -RCB--78)
dep(+-1899, ;-79)
dep(+-1899, x-80)
dep(+-1899, -LSB--81)
dep(+-1899, alert-82)
dep(+-1899, -LRB--83)
dep(+-1899, -RRB--84)
dep(+-1899, -RSB--85)
dep(+-1899, =-86)
dep(+-1899, alert-87)
dep(+-1899, -LRB--88)
dep(+-1899, -RRB--89)
dep(+-1899, ;-90)
dep(+-1899, x-91)
dep(+-1899, -LSB--92)
dep(+-1899, alert-93)
dep(+-1899, -LRB--94)
dep(+-1899, -RRB--95)
dep(+-1899, +-96)
dep(+-1899, alert-97)
dep(+-1899, -LRB--98)
dep(+-1899, -RRB--99)
dep(+-1899, -RSB--100)
dep(+-1899, =-101)
dep(+-1899, alert-102)
dep(+-1899, -LRB--103)
dep(+-1899, -RRB--104)
dep(+-1899, ''-105)
dep(+-1899, ,-106)
dep(+-1899, -RCB--107)
dep(+-1899, public-108)
dep(+-1899, void-109)
dep(+-1899, testUnusedPropAssign4-110)
dep(+-1899, -LRB--111)
dep(+-1899, -RRB--112)
dep(+-1899, -LCB--113)
dep(+-1899, @@-114)
dep(+-1899, -409,7-115)
dep(+-1899, +409,7-116)
dep(+-1899, @@-117)
dep(+-1899, public-118)
dep(+-1899, final-119)
dep(+-1899, class-120)
dep(+-1899, RemoveUnusedVarsTest-121)
dep(+-1899, extends-122)
dep(+-1899, CompilerTestCase-123)
dep(+-1899, -LCB--124)
dep(+-1899, public-125)
dep(+-1899, void-126)
dep(+-1899, testUnusedPropAssign5-127)
dep(+-1899, -LRB--128)
dep(+-1899, -RRB--129)
dep(+-1899, -LCB--130)
dep(+-1899, test-131)
dep(+-1899, -LRB--132)
dep(+-1899, ``-133)
dep(+-1899, var-134)
dep(+-1899, x-135)
dep(+-1899, =-136)
dep(+-1899, -LCB--137)
dep(+-1899, foo-138)
dep(+-1899, :-139)
dep(+-1899, bar-140)
dep(+-1899, -LRB--141)
dep(+-1899, -RRB--142)
dep(+-1899, -RCB--143)
dep(+-1899, ;-144)
dep(+-1899, x-145)
dep(+-1899, -LSB--146)
dep(+-1899, `-147)
dep(+-1899, foo-148)
dep(+-1899, '-149)
dep(+-1899, -RSB--150)
dep(+-1899, =-151)
dep(+-1899, 5-152)
dep(+-1899, ;-153)
dep(+-1899, ''-154)
dep(+-1899, ,-155)
dep(+-1899, -RCB--156)
dep(+-1899, public-157)
dep(+-1899, void-158)
dep(+-1899, testUnusedPropAssign6-159)
dep(+-1899, -LRB--160)
dep(+-1899, -RRB--161)
dep(+-1899, -LCB--162)
dep(+-1899, @@-163)
dep(+-1899, -426,38-164)
dep(+-1899, +426,33-165)
dep(+-1899, @@-166)
dep(+-1899, public-167)
dep(+-1899, final-168)
dep(+-1899, class-169)
dep(+-1899, RemoveUnusedVarsTest-170)
dep(+-1899, extends-171)
dep(+-1899, CompilerTestCase-172)
dep(+-1899, -LCB--173)
dep(+-1899, public-174)
dep(+-1899, void-175)
dep(+-1899, testUnusedPropAssign7c-176)
dep(+-1899, -LRB--177)
dep(+-1899, -RRB--178)
dep(+-1899, -LCB--179)
dep(+-1899, test-180)
dep(+-1899, -LRB--181)
dep(+-1899, ``-182)
dep(+-1899, var-183)
dep(+-1899, x-184)
dep(+-1899, =-185)
dep(+-1899, -LCB--186)
dep(+-1899, -RCB--187)
dep(+-1899, ;-188)
dep(+-1899, x-189)
dep(+-1899, -LSB--190)
dep(+-1899, alert-191)
dep(+-1899, -LRB--192)
dep(+-1899, x.foo-193)
dep(+-1899, -RRB--194)
dep(+-1899, -RSB--195)
dep(+-1899, =-196)
dep(+-1899, x.bar-197)
dep(+-1899, ;-198)
dep(+-1899, ''-199)
dep(+-1899, ,-200)
dep(+-1899, -RCB--201)
dep(+-1899, public-202)
dep(+-1899, void-203)
dep(+-1899, testUsedPropAssign1-204)
dep(+-1899, -LRB--205)
dep(+-1899, -RRB--206)
dep(+-1899, -LCB--207)
dep(+-1899, test-208)
dep(+-1899, -LRB--209)
dep(+-1899, ``-210)
dep(+-1899, function-211)
dep(+-1899, f-212)
dep(+-1899, -LRB--213)
dep(+-1899, x-214)
dep(+-1899, -RRB--215)
dep(+-1899, -LCB--216)
dep(+-1899, x.bar-217)
dep(+-1899, =-218)
dep(+-1899, 3-219)
dep(+-1899, ;-220)
dep(+-1899, -RCB--221)
dep(+-1899, f-222)
dep(+-1899, -LRB--223)
dep(+-1899, -LCB--224)
dep(+-1899, -RCB--225)
dep(+-1899, -RRB--226)
dep(+-1899, ;-227)
dep(+-1899, ''-228)
dep(+-1899, ,-229)
dep(+-1899, -RCB--230)
dep(+-1899, public-231)
dep(+-1899, void-232)
dep(+-1899, testUsedPropAssign2-233)
dep(+-1899, -LRB--234)
dep(+-1899, -RRB--235)
dep(+-1899, -LCB--236)
dep(+-1899, test-237)
dep(+-1899, -LRB--238)
dep(+-1899, ``-239)
dep(+-1899, try-240)
dep(+-1899, -LCB--241)
dep(+-1899, throw-242)
dep(+-1899, z-243)
dep(+-1899, ;-244)
dep(+-1899, -RCB--245)
dep(+-1899, catch-246)
dep(+-1899, -LRB--247)
dep(+-1899, e-248)
dep(+-1899, -RRB--249)
dep(+-1899, -LCB--250)
dep(+-1899, e.bar-251)
dep(+-1899, =-252)
dep(+-1899, 3-253)
dep(+-1899, ;-254)
dep(+-1899, -RCB--255)
dep(+-1899, ''-256)
dep(+-1899, ,-257)
dep(+-1899, -RCB--258)
dep(+-1899, public-259)
dep(+-1899, void-260)
dep(+-1899, testUsedPropAssign3-261)
dep(+-1899, -LRB--262)
dep(+-1899, -RRB--263)
dep(+-1899, -LCB--264)
dep(+-1899, This-265)
dep(+-1899, pass-266)
dep(+-1899, does-267)
dep(+-1899, not-268)
dep(+-1899, do-269)
dep(+-1899, flow-270)
dep(+-1899, analysis-271)
dep(+-1899, .-272)
dep(+-1899, test-273)
dep(+-1899, -LRB--274)
dep(+-1899, ``-275)
dep(+-1899, var-276)
dep(+-1899, x-277)
dep(+-1899, =-278)
dep(+-1899, -LCB--279)
dep(+-1899, -RCB--280)
dep(+-1899, ;-281)
dep(+-1899, x.foo-282)
dep(+-1899, =-283)
dep(+-1899, 3-284)
dep(+-1899, ;-285)
dep(+-1899, x-286)
dep(+-1899, =-287)
dep(+-1899, bar-288)
dep(+-1899, -LRB--289)
dep(+-1899, -RRB--290)
dep(+-1899, ;-291)
dep(+-1899, ''-292)
dep(+-1899, ,-293)
dep(+-1899, -RCB--294)
dep(+-1899, public-295)
dep(+-1899, void-296)
dep(+-1899, testUsedPropAssign4-297)
dep(+-1899, -LRB--298)
dep(+-1899, -RRB--299)
dep(+-1899, -LCB--300)
dep(+-1899, test-301)
dep(+-1899, -LRB--302)
dep(+-1899, ``-303)
dep(+-1899, var-304)
dep(+-1899, y-305)
dep(+-1899, =-306)
dep(+-1899, foo-307)
dep(+-1899, -LRB--308)
dep(+-1899, -RRB--309)
dep(+-1899, ;-310)
dep(+-1899, var-311)
dep(+-1899, x-312)
dep(+-1899, =-313)
dep(+-1899, -LCB--314)
dep(+-1899, -RCB--315)
dep(+-1899, ;-316)
dep(+-1899, x.foo-317)
dep(+-1899, =-318)
dep(+-1899, 3-319)
dep(+-1899, ;-320)
dep(+-1899, y-321)
dep(+-1899, -LSB--322)
dep(+-1899, x.foo-323)
dep(+-1899, -RSB--324)
dep(+-1899, =-325)
dep(+-1899, 5-326)
dep(+-1899, ;-327)
dep(+-1899, ''-328)
dep(+-1899, ,-329)
dep(+-1899, -RCB--330)
dep(+-1899, public-331)
dep(+-1899, void-332)
dep(+-1899, testUsedPropAssign5-333)
dep(+-1899, -LRB--334)
dep(+-1899, -RRB--335)
dep(+-1899, -LCB--336)
dep(+-1899, test-337)
dep(+-1899, -LRB--338)
dep(+-1899, ``-339)
dep(+-1899, var-340)
dep(+-1899, y-341)
dep(+-1899, =-342)
dep(+-1899, foo-343)
dep(+-1899, -LRB--344)
dep(+-1899, -RRB--345)
dep(+-1899, ;-346)
dep(+-1899, var-347)
dep(+-1899, x-348)
dep(+-1899, =-349)
dep(+-1899, 3-350)
dep(+-1899, ;-351)
dep(+-1899, y-352)
dep(+-1899, -LSB--353)
dep(+-1899, x-354)
dep(+-1899, -RSB--355)
dep(+-1899, =-356)
dep(+-1899, 5-357)
dep(+-1899, ;-358)
dep(+-1899, ''-359)
dep(+-1899, ,-360)
dep(+-1899, -RCB--361)
dep(+-1899, public-362)
dep(+-1899, void-363)
dep(+-1899, testUsedPropAssign6-364)
dep(+-1899, -LRB--365)
dep(+-1899, -RRB--366)
dep(+-1899, -LCB--367)
dep(+-1899, test-368)
dep(+-1899, -LRB--369)
dep(+-1899, ``-370)
dep(+-1899, var-371)
dep(+-1899, x-372)
dep(+-1899, =-373)
dep(+-1899, newNodeInDom-374)
dep(+-1899, -LRB--375)
dep(+-1899, doc-376)
dep(+-1899, -RRB--377)
dep(+-1899, ;-378)
dep(+-1899, x.innerHTML-379)
dep(+-1899, =-380)
dep(+-1899, `-381)
dep(+-1899, new-382)
dep(+-1899, text-383)
dep(+-1899, '-384)
dep(+-1899, ;-385)
dep(+-1899, ''-386)
dep(+-1899, ,-387)
dep(+-1899, -RCB--388)
dep(+-1899, public-389)
dep(+-1899, void-390)
dep(+-1899, testUsedPropAssign7-391)
dep(+-1899, -LRB--392)
dep(+-1899, -RRB--393)
dep(+-1899, -LCB--394)
dep(+-1899, @@-395)
dep(+-1899, -479,12-396)
dep(+-1899, +474,12-397)
dep(+-1899, @@-398)
dep(+-1899, public-399)
dep(+-1899, final-400)
dep(+-1899, class-401)
dep(+-1899, RemoveUnusedVarsTest-402)
dep(+-1899, extends-403)
dep(+-1899, CompilerTestCase-404)
dep(+-1899, -LCB--405)
dep(+-1899, public-406)
dep(+-1899, void-407)
dep(+-1899, testDependencies1b-408)
dep(+-1899, -LRB--409)
dep(+-1899, -RRB--410)
dep(+-1899, -LCB--411)
dep(+-1899, test-412)
dep(+-1899, -LRB--413)
dep(+-1899, ``-414)
dep(+-1899, var-415)
dep(+-1899, a-416)
dep(+-1899, =-417)
dep(+-1899, 3-418)
dep(+-1899, ;-419)
dep(+-1899, var-420)
dep(+-1899, b-421)
dep(+-1899, =-422)
dep(+-1899, alert-423)
dep(+-1899, -LRB--424)
dep(+-1899, function-425)
dep(+-1899, -LRB--426)
dep(+-1899, -RRB--427)
dep(+-1899, -LCB--428)
dep(+-1899, alert-429)
dep(+-1899, -LRB--430)
dep(+-1899, a-431)
dep(+-1899, -RRB--432)
dep(+-1899, ;-433)
dep(+-1899, -RCB--434)
dep(+-1899, -RRB--435)
dep(+-1899, ;-436)
dep(+-1899, ''-437)
dep(+-1899, ,-438)
dep(+-1899, -RCB--439)
dep(+-1899, public-440)
dep(+-1899, void-441)
dep(+-1899, testDependencies1c-442)
dep(+-1899, -LRB--443)
dep(+-1899, -RRB--444)
dep(+-1899, -LCB--445)
dep(+-1899, test-446)
dep(+-1899, -LRB--447)
dep(+-1899, ``-448)
dep(+-1899, var-449)
dep(+-1899, a-450)
dep(+-1899, =-451)
dep(+-1899, 3-452)
dep(+-1899, ;-453)
dep(+-1899, var-454)
dep(+-1899, _-455)
dep(+-1899, b-456)
dep(+-1899, =-457)
dep(+-1899, function-458)
dep(+-1899, -LRB--459)
dep(+-1899, -RRB--460)
dep(+-1899, -LCB--461)
dep(+-1899, alert-462)
dep(+-1899, -LRB--463)
dep(+-1899, a-464)
dep(+-1899, -RRB--465)
dep(+-1899, ;-466)
dep(+-1899, -RCB--467)
dep(+-1899, ;-468)
dep(+-1899, ''-469)
dep(+-1899, ,-470)
dep(+-1899, -RCB--471)
dep(+-1899, public-472)
dep(+-1899, void-473)
dep(+-1899, testDependencies2-474)
dep(+-1899, -LRB--475)
dep(+-1899, -RRB--476)
dep(+-1899, -LCB--477)
dep(+-1899, @@-478)
dep(+-1899, -493,7-479)
dep(+-1899, +488,7-480)
dep(+-1899, @@-481)
dep(+-1899, public-482)
dep(+-1899, final-483)
dep(+-1899, class-484)
dep(+-1899, RemoveUnusedVarsTest-485)
dep(+-1899, extends-486)
dep(+-1899, CompilerTestCase-487)
dep(+-1899, -LCB--488)
dep(+-1899, public-489)
dep(+-1899, void-490)
dep(+-1899, testDependencies2b-491)
dep(+-1899, -LRB--492)
dep(+-1899, -RRB--493)
dep(+-1899, -LCB--494)
dep(+-1899, test-495)
dep(+-1899, -LRB--496)
dep(+-1899, ``-497)
dep(+-1899, var-498)
dep(+-1899, a-499)
dep(+-1899, =-500)
dep(+-1899, 3-501)
dep(+-1899, ;-502)
dep(+-1899, var-503)
dep(+-1899, b-504)
dep(+-1899, =-505)
dep(+-1899, 3-506)
dep(+-1899, ;-507)
dep(+-1899, b-508)
dep(+-1899, =-509)
dep(+-1899, alert-510)
dep(+-1899, -LRB--511)
dep(+-1899, function-512)
dep(+-1899, -LRB--513)
dep(+-1899, -RRB--514)
dep(+-1899, -LCB--515)
dep(+-1899, alert-516)
dep(+-1899, -LRB--517)
dep(+-1899, a-518)
dep(+-1899, -RRB--519)
dep(+-1899, ;-520)
dep(+-1899, -RCB--521)
dep(+-1899, -RRB--522)
dep(+-1899, ;-523)
dep(+-1899, ''-524)
dep(+-1899, ,-525)
dep(+-1899, -RCB--526)
dep(+-1899, public-527)
dep(+-1899, void-528)
dep(+-1899, testDependencies2c-529)
dep(+-1899, -LRB--530)
dep(+-1899, -RRB--531)
dep(+-1899, -LCB--532)
dep(+-1899, @@-533)
dep(+-1899, -510,25-534)
dep(+-1899, +505,25-535)
dep(+-1899, @@-536)
dep(+-1899, public-537)
dep(+-1899, final-538)
dep(+-1899, class-539)
dep(+-1899, RemoveUnusedVarsTest-540)
dep(+-1899, extends-541)
dep(+-1899, CompilerTestCase-542)
dep(+-1899, -LCB--543)
dep(+-1899, public-544)
dep(+-1899, void-545)
dep(+-1899, testLocalVarReferencesGlobalVar2-546)
dep(+-1899, -LRB--547)
dep(+-1899, -RRB--548)
dep(+-1899, -LCB--549)
dep(+-1899, test-550)
dep(+-1899, -LRB--551)
dep(+-1899, ``-552)
dep(+-1899, var-553)
dep(+-1899, a-554)
dep(+-1899, =-555)
dep(+-1899, 3-556)
dep(+-1899, ;-557)
dep(+-1899, function-558)
dep(+-1899, f-559)
dep(+-1899, -LRB--560)
dep(+-1899, b-561)
dep(+-1899, ,-562)
dep(+-1899, c-563)
dep(+-1899, -RRB--564)
dep(+-1899, -LCB--565)
dep(+-1899, b-566)
dep(+-1899, =-567)
dep(+-1899, a-568)
dep(+-1899, ;-569)
dep(+-1899, alert-570)
dep(+-1899, -LRB--571)
dep(+-1899, c-572)
dep(+-1899, -RRB--573)
dep(+-1899, ;-574)
dep(+-1899, -RCB--575)
dep(+-1899, f-576)
dep(+-1899, -LRB--577)
dep(+-1899, -RRB--578)
dep(+-1899, ;-579)
dep(+-1899, ''-580)
dep(+-1899, ,-581)
dep(+-1899, test-582)
dep(+-1899, -LRB--583)
dep(+-1899, ``-584)
dep(+-1899, var-585)
dep(+-1899, a-586)
dep(+-1899, =-587)
dep(+-1899, 3-588)
dep(+-1899, ;-589)
dep(+-1899, function-590)
dep(+-1899, f-591)
dep(+-1899, -LRB--592)
dep(+-1899, b-593)
dep(+-1899, ,-594)
dep(+-1899, c-595)
dep(+-1899, -RRB--596)
dep(+-1899, -LCB--597)
dep(+-1899, b-598)
dep(+-1899, =-599)
dep(+-1899, a-600)
dep(+-1899, ;-601)
dep(+-1899, alert-602)
dep(+-1899, -LRB--603)
dep(+-1899, c-604)
dep(+-1899, -RRB--605)
dep(+-1899, ;-606)
dep(+-1899, -RCB--607)
dep(+-1899, f-608)
dep(+-1899, -LRB--609)
dep(+-1899, -RRB--610)
dep(+-1899, ;-611)
dep(+-1899, ''-612)
dep(+-1899, ,-613)
dep(+-1899, -RCB--614)
dep(+-1899, public-615)
dep(+-1899, void-616)
dep(+-1899, testNestedAssign1-617)
dep(+-1899, -LRB--618)
dep(+-1899, -RRB--619)
dep(+-1899, -LCB--620)
dep(+-1899, test-621)
dep(+-1899, -LRB--622)
dep(+-1899, ``-623)
dep(+-1899, var-624)
dep(+-1899, b-625)
dep(+-1899, =-626)
dep(+-1899, null-627)
dep(+-1899, ;-628)
dep(+-1899, var-629)
dep(+-1899, a-630)
dep(+-1899, =-631)
dep(+-1899, -LRB--632)
dep(+-1899, b-633)
dep(+-1899, =-634)
dep(+-1899, 3-635)
dep(+-1899, -RRB--636)
dep(+-1899, ;-637)
dep(+-1899, alert-638)
dep(+-1899, -LRB--639)
dep(+-1899, a-640)
dep(+-1899, -RRB--641)
dep(+-1899, ;-642)
dep(+-1899, ''-643)
dep(+-1899, ,-644)
dep(+-1899, -RCB--645)
dep(+-1899, public-646)
dep(+-1899, void-647)
dep(+-1899, testNestedAssign2-648)
dep(+-1899, -LRB--649)
dep(+-1899, -RRB--650)
dep(+-1899, -LCB--651)
dep(+-1899, test-652)
dep(+-1899, -LRB--653)
dep(+-1899, ``-654)
dep(+-1899, var-655)
dep(+-1899, a-656)
dep(+-1899, =-657)
dep(+-1899, 1-658)
dep(+-1899, ;-659)
dep(+-1899, var-660)
dep(+-1899, b-661)
dep(+-1899, =-662)
dep(+-1899, 2-663)
dep(+-1899, ;-664)
dep(+-1899, var-665)
dep(+-1899, c-666)
dep(+-1899, =-667)
dep(+-1899, -LRB--668)
dep(+-1899, b-669)
dep(+-1899, =-670)
dep(+-1899, a-671)
dep(+-1899, -RRB--672)
dep(+-1899, ;-673)
dep(+-1899, alert-674)
dep(+-1899, -LRB--675)
dep(+-1899, c-676)
dep(+-1899, -RRB--677)
dep(+-1899, ;-678)
dep(+-1899, ''-679)
dep(+-1899, ,-680)
dep(+-1899, -RCB--681)
dep(+-1899, public-682)
dep(+-1899, void-683)
dep(+-1899, testNestedAssign3-684)
dep(+-1899, -LRB--685)
dep(+-1899, -RRB--686)
dep(+-1899, -LCB--687)
dep(+-1899, test-688)
dep(+-1899, -LRB--689)
dep(+-1899, ``-690)
dep(+-1899, var-691)
dep(+-1899, b-692)
dep(+-1899, =-693)
dep(+-1899, 0-694)
dep(+-1899, ;-695)
dep(+-1899, var-696)
dep(+-1899, z-697)
dep(+-1899, ;-698)
dep(+-1899, z-699)
dep(+-1899, =-700)
dep(+-1899, z-701)
dep(+-1899, =-702)
dep(+-1899, b-703)
dep(+-1899, =-704)
dep(+-1899, 1-705)
dep(+-1899, ;-706)
dep(+-1899, alert-707)
dep(+-1899, -LRB--708)
dep(+-1899, b-709)
dep(+-1899, -RRB--710)
dep(+-1899, ;-711)
dep(+-1899, ''-712)
dep(+-1899, ,-713)
dep(+-1899, -RCB--714)
dep(+-1899, public-715)
dep(+-1899, void-716)
dep(+-1899, testCallSiteInteraction-717)
dep(+-1899, -LRB--718)
dep(+-1899, -RRB--719)
dep(+-1899, -LCB--720)
dep(+-1899, @@-721)
dep(+-1899, -537,58-722)
dep(+-1899, +532,58-723)
dep(+-1899, @@-724)
dep(+-1899, public-725)
dep(+-1899, final-726)
dep(+-1899, class-727)
dep(+-1899, RemoveUnusedVarsTest-728)
dep(+-1899, extends-729)
dep(+-1899, CompilerTestCase-730)
dep(+-1899, -LCB--731)
dep(+-1899, test-732)
dep(+-1899, -LRB--733)
dep(+-1899, ``-734)
dep(+-1899, var-735)
dep(+-1899, b-736)
dep(+-1899, =-737)
dep(+-1899, function-738)
dep(+-1899, -LRB--739)
dep(+-1899, c-740)
dep(+-1899, -RRB--741)
dep(+-1899, -LCB--742)
dep(+-1899, -RCB--743)
dep(+-1899, ;-744)
dep(+-1899, b.call-745)
dep(+-1899, -LRB--746)
dep(+-1899, null-747)
dep(+-1899, ,-748)
dep(+-1899, x-749)
dep(+-1899, -RRB--750)
dep(+-1899, ''-751)
dep(+-1899, ,-752)
dep(+-1899, test-753)
dep(+-1899, -LRB--754)
dep(+-1899, ``-755)
dep(+-1899, var-756)
dep(+-1899, b-757)
dep(+-1899, =-758)
dep(+-1899, function-759)
dep(+-1899, -LRB--760)
dep(+-1899, c-761)
dep(+-1899, -RRB--762)
dep(+-1899, -LCB--763)
dep(+-1899, -RCB--764)
dep(+-1899, ;-765)
dep(+-1899, b.apply-766)
dep(+-1899, -LRB--767)
dep(+-1899, null-768)
dep(+-1899, ,-769)
dep(+-1899, x-770)
dep(+-1899, -RRB--771)
dep(+-1899, ''-772)
dep(+-1899, ,-773)
dep(+-1899, test-774)
dep(+-1899, -LRB--775)
dep(+-1899, ``-776)
dep(+-1899, var-777)
dep(+-1899, b-778)
dep(+-1899, =-779)
dep(+-1899, function-780)
dep(+-1899, -LRB--781)
dep(+-1899, c-782)
dep(+-1899, -RRB--783)
dep(+-1899, -LCB--784)
dep(+-1899, return-785)
dep(+-1899, -RCB--786)
dep(+-1899, ;-787)
dep(+-1899, b-788)
dep(+-1899, -LRB--789)
dep(+-1899, 1-790)
dep(+-1899, -RRB--791)
dep(+-1899, ''-792)
dep(+-1899, ,-793)
dep(+-1899, test-794)
dep(+-1899, -LRB--795)
dep(+-1899, ``-796)
dep(+-1899, var-797)
dep(+-1899, b-798)
dep(+-1899, =-799)
dep(+-1899, function-800)
dep(+-1899, -LRB--801)
dep(+-1899, c-802)
dep(+-1899, -RRB--803)
dep(+-1899, -LCB--804)
dep(+-1899, return-805)
dep(+-1899, -RCB--806)
dep(+-1899, ;-807)
dep(+-1899, b-808)
dep(+-1899, -LRB--809)
dep(+-1899, 1,2-810)
dep(+-1899, -RRB--811)
dep(+-1899, ''-812)
dep(+-1899, ,-813)
dep(+-1899, test-814)
dep(+-1899, -LRB--815)
dep(+-1899, ``-816)
dep(+-1899, var-817)
dep(+-1899, b-818)
dep(+-1899, =-819)
dep(+-1899, function-820)
dep(+-1899, -LRB--821)
dep(+-1899, c-822)
dep(+-1899, -RRB--823)
dep(+-1899, -LCB--824)
dep(+-1899, return-825)
dep(+-1899, -RCB--826)
dep(+-1899, ;-827)
dep(+-1899, b-828)
dep(+-1899, -LRB--829)
dep(+-1899, 1,2-830)
dep(+-1899, -RRB--831)
dep(+-1899, ;-832)
dep(+-1899, b-833)
dep(+-1899, -LRB--834)
dep(+-1899, 3,4-835)
dep(+-1899, -RRB--836)
dep(+-1899, ''-837)
dep(+-1899, ,-838)
dep(+-1899, Here-839)
dep(+-1899, there-840)
dep(+-1899, is-841)
dep(+-1899, a-842)
dep(+-1899, unknown-843)
dep(+-1899, reference-844)
dep(+-1899, to-845)
dep(+-1899, the-846)
dep(+-1899, function-847)
dep(+-1899, so-848)
dep(+-1899, we-849)
dep(+-1899, ca-850)
dep(+-1899, n't-851)
dep(+-1899, change-852)
dep(+-1899, the-853)
dep(+-1899, signature-854)
dep(+-1899, .-855)
dep(+-1899, test-856)
dep(+-1899, -LRB--857)
dep(+-1899, ``-858)
dep(+-1899, var-859)
dep(+-1899, b-860)
dep(+-1899, =-861)
dep(+-1899, function-862)
dep(+-1899, -LRB--863)
dep(+-1899, c-864)
dep(+-1899, ,-865)
dep(+-1899, d-866)
dep(+-1899, -RRB--867)
dep(+-1899, -LCB--868)
dep(+-1899, return-869)
dep(+-1899, d-870)
dep(+-1899, -RCB--871)
dep(+-1899, ;-872)
dep(+-1899, b-873)
dep(+-1899, -LRB--874)
dep(+-1899, 1,2-875)
dep(+-1899, -RRB--876)
dep(+-1899, ;-877)
dep(+-1899, b-878)
dep(+-1899, -LRB--879)
dep(+-1899, 3,4-880)
dep(+-1899, -RRB--881)
dep(+-1899, ;-882)
dep(+-1899, b.length-883)
dep(+-1899, ''-884)
dep(+-1899, ,-885)
dep(+-1899, test-886)
dep(+-1899, -LRB--887)
dep(+-1899, ``-888)
dep(+-1899, var-889)
dep(+-1899, b-890)
dep(+-1899, =-891)
dep(+-1899, function-892)
dep(+-1899, -LRB--893)
dep(+-1899, c-894)
dep(+-1899, -RRB--895)
dep(+-1899, -LCB--896)
dep(+-1899, return-897)
dep(+-1899, -RCB--898)
dep(+-1899, ;-899)
dep(+-1899, b-900)
dep(+-1899, -LRB--901)
dep(+-1899, 1,2-902)
dep(+-1899, -RRB--903)
dep(+-1899, ;-904)
dep(+-1899, b-905)
dep(+-1899, -LRB--906)
dep(+-1899, 3-907)
dep(+-1899, ,-908)
dep(+-1899, new-909)
dep(+-1899, x-910)
dep(+-1899, -LRB--911)
dep(+-1899, -RRB--912)
dep(+-1899, -RRB--913)
dep(+-1899, ''-914)
dep(+-1899, ,-915)
dep(+-1899, test-916)
dep(+-1899, -LRB--917)
dep(+-1899, ``-918)
dep(+-1899, var-919)
dep(+-1899, b-920)
dep(+-1899, =-921)
dep(+-1899, function-922)
dep(+-1899, -LRB--923)
dep(+-1899, c-924)
dep(+-1899, -RRB--925)
dep(+-1899, -LCB--926)
dep(+-1899, return-927)
dep(+-1899, -RCB--928)
dep(+-1899, ;-929)
dep(+-1899, b-930)
dep(+-1899, -LRB--931)
dep(+-1899, 1,2-932)
dep(+-1899, -RRB--933)
dep(+-1899, ;-934)
dep(+-1899, b-935)
dep(+-1899, -LRB--936)
dep(+-1899, new-937)
dep(+-1899, x-938)
dep(+-1899, -LRB--939)
dep(+-1899, -RRB--940)
dep(+-1899, ,4-941)
dep(+-1899, -RRB--942)
dep(+-1899, ''-943)
dep(+-1899, ,-944)
dep(+-1899, test-945)
dep(+-1899, -LRB--946)
dep(+-1899, ``-947)
dep(+-1899, var-948)
dep(+-1899, b-949)
dep(+-1899, =-950)
dep(+-1899, function-951)
dep(+-1899, -LRB--952)
dep(+-1899, c-953)
dep(+-1899, ,-954)
dep(+-1899, d-955)
dep(+-1899, -RRB--956)
dep(+-1899, -LCB--957)
dep(+-1899, return-958)
dep(+-1899, d-959)
dep(+-1899, -RCB--960)
dep(+-1899, ;-961)
dep(+-1899, b-962)
dep(+-1899, -LRB--963)
dep(+-1899, 1,2-964)
dep(+-1899, -RRB--965)
dep(+-1899, ;-966)
dep(+-1899, b-967)
dep(+-1899, -LRB--968)
dep(+-1899, new-969)
dep(+-1899, x-970)
dep(+-1899, -LRB--971)
dep(+-1899, -RRB--972)
dep(+-1899, ,4-973)
dep(+-1899, -RRB--974)
dep(+-1899, ''-975)
dep(+-1899, ,-976)
dep(+-1899, test-977)
dep(+-1899, -LRB--978)
dep(+-1899, ``-979)
dep(+-1899, var-980)
dep(+-1899, b-981)
dep(+-1899, =-982)
dep(+-1899, function-983)
dep(+-1899, -LRB--984)
dep(+-1899, c-985)
dep(+-1899, ,-986)
dep(+-1899, d-987)
dep(+-1899, ,-988)
dep(+-1899, e-989)
dep(+-1899, -RRB--990)
dep(+-1899, -LCB--991)
dep(+-1899, return-992)
dep(+-1899, d-993)
dep(+-1899, -RCB--994)
dep(+-1899, ;-995)
dep(+-1899, b-996)
dep(+-1899, -LRB--997)
dep(+-1899, 1,2,3-998)
dep(+-1899, -RRB--999)
dep(+-1899, ;-1000)
dep(+-1899, b-1001)
dep(+-1899, -LRB--1002)
dep(+-1899, new-1003)
dep(+-1899, x-1004)
dep(+-1899, -LRB--1005)
dep(+-1899, -RRB--1006)
dep(+-1899, ,4-1007)
dep(+-1899, ,-1008)
dep(+-1899, new-1009)
dep(+-1899, x-1010)
dep(+-1899, -LRB--1011)
dep(+-1899, -RRB--1012)
dep(+-1899, -RRB--1013)
dep(+-1899, ''-1014)
dep(+-1899, ,-1015)
dep(+-1899, Recursive-1016)
dep(+-1899, calls-1017)
dep(+-1899, are-1018)
dep(+-1899, OK-1019)
dep(+-1899, .-1020)
dep(+-1899, test-1021)
dep(+-1899, -LRB--1022)
dep(+-1899, ``-1023)
dep(+-1899, var-1024)
dep(+-1899, b-1025)
dep(+-1899, =-1026)
dep(+-1899, function-1027)
dep(+-1899, -LRB--1028)
dep(+-1899, c-1029)
dep(+-1899, ,-1030)
dep(+-1899, d-1031)
dep(+-1899, -RRB--1032)
dep(+-1899, -LCB--1033)
dep(+-1899, b-1034)
dep(+-1899, -LRB--1035)
dep(+-1899, 1,2-1036)
dep(+-1899, -RRB--1037)
dep(+-1899, ;-1038)
dep(+-1899, return-1039)
dep(+-1899, d-1040)
dep(+-1899, -RCB--1041)
dep(+-1899, ;-1042)
dep(+-1899, b-1043)
dep(+-1899, -LRB--1044)
dep(+-1899, 3,4-1045)
dep(+-1899, -RRB--1046)
dep(+-1899, ;-1047)
dep(+-1899, b-1048)
dep(+-1899, -LRB--1049)
dep(+-1899, 5,6-1050)
dep(+-1899, -RRB--1051)
dep(+-1899, ''-1052)
dep(+-1899, ,-1053)
dep(+-1899, remove-1054)
dep(+-1899, all-1055)
dep(+-1899, function-1056)
dep(+-1899, arguments-1057)
dep(+-1899, test-1058)
dep(+-1899, -LRB--1059)
dep(+-1899, ``-1060)
dep(+-1899, var-1061)
dep(+-1899, b-1062)
dep(+-1899, =-1063)
dep(+-1899, function-1064)
dep(+-1899, -LRB--1065)
dep(+-1899, c-1066)
dep(+-1899, ,-1067)
dep(+-1899, d-1068)
dep(+-1899, -RRB--1069)
dep(+-1899, -LCB--1070)
dep(+-1899, return-1071)
dep(+-1899, -RCB--1072)
dep(+-1899, ;-1073)
dep(+-1899, b-1074)
dep(+-1899, -LRB--1075)
dep(+-1899, 1,2-1076)
dep(+-1899, -RRB--1077)
dep(+-1899, ''-1078)
dep(+-1899, ,-1079)
dep(+-1899, remove-1080)
dep(+-1899, no-1081)
dep(+-1899, function-1082)
dep(+-1899, arguments-1083)
dep(+-1899, remove-1084)
dep(+-1899, some-1085)
dep(+-1899, function-1086)
dep(+-1899, arguments-1087)
dep(+-1899, test-1088)
dep(+-1899, -LRB--1089)
dep(+-1899, ``-1090)
dep(+-1899, var-1091)
dep(+-1899, b-1092)
dep(+-1899, =-1093)
dep(+-1899, function-1094)
dep(+-1899, -LRB--1095)
dep(+-1899, e-1096)
dep(+-1899, ,-1097)
dep(+-1899, f-1098)
dep(+-1899, ,-1099)
dep(+-1899, c-1100)
dep(+-1899, ,-1101)
dep(+-1899, d-1102)
dep(+-1899, -RRB--1103)
dep(+-1899, -LCB--1104)
dep(+-1899, return-1105)
dep(+-1899, c-1106)
dep(+-1899, +-1107)
dep(+-1899, d-1108)
dep(+-1899, -RCB--1109)
dep(+-1899, ;-1110)
dep(+-1899, b-1111)
dep(+-1899, -LRB--1112)
dep(+-1899, 1,2-1113)
dep(+-1899, -RRB--1114)
dep(+-1899, ''-1115)
dep(+-1899, ,-1116)
dep(+-1899, test-1117)
dep(+-1899, -LRB--1118)
dep(+-1899, ``-1119)
dep(+-1899, var-1120)
dep(+-1899, b-1121)
dep(+-1899, =-1122)
dep(+-1899, function-1123)
dep(+-1899, -LRB--1124)
dep(+-1899, c-1125)
dep(+-1899, ,-1126)
dep(+-1899, d-1127)
dep(+-1899, ,-1128)
dep(+-1899, e-1129)
dep(+-1899, ,-1130)
dep(+-1899, f-1131)
dep(+-1899, -RRB--1132)
dep(+-1899, -LCB--1133)
dep(+-1899, return-1134)
dep(+-1899, c-1135)
dep(+-1899, +-1136)
dep(+-1899, d-1137)
dep(+-1899, -RCB--1138)
dep(+-1899, ;-1139)
dep(+-1899, b-1140)
dep(+-1899, -LRB--1141)
dep(+-1899, 1,2-1142)
dep(+-1899, -RRB--1143)
dep(+-1899, ''-1144)
dep(+-1899, ,-1145)
dep(+-1899, test-1146)
dep(+-1899, -LRB--1147)
dep(+-1899, ``-1148)
dep(+-1899, var-1149)
dep(+-1899, b-1150)
dep(+-1899, =-1151)
dep(+-1899, function-1152)
dep(+-1899, -LRB--1153)
dep(+-1899, e-1154)
dep(+-1899, ,-1155)
dep(+-1899, c-1156)
dep(+-1899, ,-1157)
dep(+-1899, f-1158)
dep(+-1899, ,-1159)
dep(+-1899, d-1160)
dep(+-1899, ,-1161)
dep(+-1899, g-1162)
dep(+-1899, -RRB--1163)
dep(+-1899, -LCB--1164)
dep(+-1899, return-1165)
dep(+-1899, c-1166)
dep(+-1899, +-1167)
dep(+-1899, d-1168)
dep(+-1899, -RCB--1169)
dep(+-1899, ;-1170)
dep(+-1899, b-1171)
dep(+-1899, -LRB--1172)
dep(+-1899, 1,2-1173)
dep(+-1899, -RRB--1174)
dep(+-1899, ''-1175)
dep(+-1899, ,-1176)
dep(+-1899, multiple-1177)
dep(+-1899, definitions-1178)
dep(+-1899, of-1179)
dep(+-1899, ``-1180)
dep(+-1899, b-1181)
dep(+-1899, ''-1182)
dep(+-1899, ,-1183)
dep(+-1899, the-1184)
dep(+-1899, parameters-1185)
dep(+-1899, can-1186)
dep(+-1899, be-1187)
dep(+-1899, removed-1188)
dep(+-1899, but-1189)
dep(+-1899, the-1190)
dep(+-1899, call-1191)
dep(+-1899, sites-1192)
dep(+-1899, are-1193)
dep(+-1899, left-1194)
dep(+-1899, unmodified-1195)
dep(+-1899, for-1196)
dep(+-1899, now-1197)
dep(+-1899, .-1198)
dep(+-1899, test-1199)
dep(+-1899, -LRB--1200)
dep(+-1899, ``-1201)
dep(+-1899, var-1202)
dep(+-1899, b-1203)
dep(+-1899, =-1204)
dep(+-1899, function-1205)
dep(+-1899, -LRB--1206)
dep(+-1899, c-1207)
dep(+-1899, ,-1208)
dep(+-1899, d-1209)
dep(+-1899, -RRB--1210)
dep(+-1899, -LCB--1211)
dep(+-1899, -RCB--1212)
dep(+-1899, ;-1213)
dep(+-1899, var-1214)
dep(+-1899, b-1215)
dep(+-1899, =-1216)
dep(+-1899, function-1217)
dep(+-1899, -LRB--1218)
dep(+-1899, e-1219)
dep(+-1899, ,-1220)
dep(+-1899, f-1221)
dep(+-1899, -RRB--1222)
dep(+-1899, -LCB--1223)
dep(+-1899, -RCB--1224)
dep(+-1899, ;-1225)
dep(+-1899, b-1226)
dep(+-1899, -LRB--1227)
dep(+-1899, 1,2-1228)
dep(+-1899, -RRB--1229)
dep(+-1899, ''-1230)
dep(+-1899, ,-1231)
dep(+-1899, -RCB--1232)
dep(+-1899, public-1233)
dep(+-1899, void-1234)
dep(+-1899, testCallSiteInteraction_constructors-1235)
dep(+-1899, -LRB--1236)
dep(+-1899, -RRB--1237)
dep(+-1899, -LCB--1238)
dep(+-1899, @@-1239)
dep(+-1899, -596,13-1240)
dep(+-1899, +591,13-1241)
dep(+-1899, @@-1242)
dep(+-1899, public-1243)
dep(+-1899, final-1244)
dep(+-1899, class-1245)
dep(+-1899, RemoveUnusedVarsTest-1246)
dep(+-1899, extends-1247)
dep(+-1899, CompilerTestCase-1248)
dep(+-1899, -LCB--1249)
dep(+-1899, The-1250)
dep(+-1899, third-1251)
dep(+-1899, level-1252)
dep(+-1899, tests-1253)
dep(+-1899, that-1254)
dep(+-1899, the-1255)
dep(+-1899, functions-1256)
dep(+-1899, which-1257)
dep(+-1899, have-1258)
dep(+-1899, already-1259)
dep(+-1899, been-1260)
dep(+-1899, looked-1261)
dep(+-1899, at-1262)
dep(+-1899, get-1263)
dep(+-1899, re-visited-1264)
dep(+-1899, if-1265)
dep(+-1899, they-1266)
dep(+-1899, are-1267)
dep(+-1899, changed-1268)
dep(+-1899, by-1269)
dep(+-1899, a-1270)
dep(+-1899, call-1271)
dep(+-1899, site-1272)
dep(+-1899, removal-1273)
dep(+-1899, .-1274)
dep(+-1899, test-1275)
dep(+-1899, -LRB--1276)
dep(+-1899, ``-1277)
dep(+-1899, var-1278)
dep(+-1899, Ctor1-1279)
dep(+-1899, =-1280)
dep(+-1899, function-1281)
dep(+-1899, -LRB--1282)
dep(+-1899, a-1283)
dep(+-1899, ,-1284)
dep(+-1899, b-1285)
dep(+-1899, -RRB--1286)
dep(+-1899, -LCB--1287)
dep(+-1899, return-1288)
dep(+-1899, a-1289)
dep(+-1899, -RCB--1290)
dep(+-1899, ;-1291)
dep(+-1899, ''-1292)
dep(+-1899, +-1293)
dep(+-1899, ``-1294)
dep(+-1899, var-1295)
dep(+-1899, Ctor2-1296)
dep(+-1899, =-1297)
dep(+-1899, function-1298)
dep(+-1899, -LRB--1299)
dep(+-1899, a-1300)
dep(+-1899, ,-1301)
dep(+-1899, b-1302)
dep(+-1899, -RRB--1303)
dep(+-1899, -LCB--1304)
dep(+-1899, Ctor1.call-1305)
dep(+-1899, -LRB--1306)
dep(+-1899, this-1307)
dep(+-1899, ,-1308)
dep(+-1899, a-1309)
dep(+-1899, ,-1310)
dep(+-1899, b-1311)
dep(+-1899, -RRB--1312)
dep(+-1899, -RCB--1313)
dep(+-1899, ;-1314)
dep(+-1899, ''-1315)
dep(+-1899, +-1316)
dep(+-1899, ``-1317)
dep(+-1899, goog-1318)
dep(+-1899, $-1319)
dep(+-1899, inherits-1320)
dep(+-1899, -LRB--1321)
dep(+-1899, Ctor2-1322)
dep(+-1899, ,-1323)
dep(+-1899, Ctor1-1324)
dep(+-1899, -RRB--1325)
dep(+-1899, ;-1326)
dep(+-1899, ''-1327)
dep(+-1899, +-1328)
dep(+-1899, ``-1329)
dep(+-1899, new-1330)
dep(+-1899, Ctor2-1331)
dep(+-1899, -LRB--1332)
dep(+-1899, 1,2-1333)
dep(+-1899, -RRB--1334)
dep(+-1899, ''-1335)
dep(+-1899, ,-1336)
dep(+-1899, ``-1337)
dep(+-1899, var-1338)
dep(+-1899, Ctor2-1339)
dep(+-1899, =-1340)
dep(+-1899, function-1341)
dep(+-1899, -LRB--1342)
dep(+-1899, a-1343)
dep(+-1899, ,-1344)
dep(+-1899, b-1345)
dep(+-1899, -RRB--1346)
dep(+-1899, -LCB--1347)
dep(+-1899, Ctor1.call-1348)
dep(+-1899, -LRB--1349)
dep(+-1899, this-1350)
dep(+-1899, ,-1351)
dep(+-1899, a-1352)
dep(+-1899, ,-1353)
dep(+-1899, b-1354)
dep(+-1899, -RRB--1355)
dep(+-1899, -RCB--1356)
dep(+-1899, ;-1357)
dep(+-1899, ''-1358)
dep(+-1899, +-1359)
dep(+-1899, ``-1360)
dep(+-1899, goog-1361)
dep(+-1899, $-1362)
dep(+-1899, inherits-1363)
dep(+-1899, -LRB--1364)
dep(+-1899, Ctor2-1365)
dep(+-1899, ,-1366)
dep(+-1899, Ctor1-1367)
dep(+-1899, -RRB--1368)
dep(+-1899, ;-1369)
dep(+-1899, ''-1370)
dep(+-1899, +-1371)
dep(+-1899, ``-1372)
dep(+-1899, new-1373)
dep(+-1899, Ctor2-1374)
dep(+-1899, -LRB--1375)
dep(+-1899, 1,2-1376)
dep(+-1899, -RRB--1377)
dep(+-1899, ''-1378)
dep(+-1899, ,-1379)
dep(+-1899, ``-1380)
dep(+-1899, var-1381)
dep(+-1899, Ctor1-1382)
dep(+-1899, =-1383)
dep(+-1899, function-1384)
dep(+-1899, -LRB--1385)
dep(+-1899, a-1386)
dep(+-1899, -RRB--1387)
dep(+-1899, -LCB--1388)
dep(+-1899, return-1389)
dep(+-1899, a-1390)
dep(+-1899, -RCB--1391)
dep(+-1899, ;-1392)
dep(+-1899, ''-1393)
dep(+-1899, +-1394)
dep(+-1899, ``-1395)
dep(+-1899, var-1396)
dep(+-1899, Ctor2-1397)
dep(+-1899, =-1398)
dep(+-1899, function-1399)
dep(+-1899, -LRB--1400)
dep(+-1899, a-1401)
dep(+-1899, -RRB--1402)
dep(+-1899, -LCB--1403)
dep(+-1899, Ctor1.call-1404)
dep(+-1899, -LRB--1405)
dep(+-1899, this-1406)
dep(+-1899, ,-1407)
dep(+-1899, a-1408)
dep(+-1899, -RRB--1409)
dep(+-1899, -RCB--1410)
dep(+-1899, ;-1411)
dep(+-1899, ''-1412)
dep(+-1899, +-1413)
dep(+-1899, ``-1414)
dep(+-1899, goog-1415)
dep(+-1899, $-1416)
dep(+-1899, inherits-1417)
dep(+-1899, -LRB--1418)
dep(+-1899, Ctor2-1419)
dep(+-1899, ,-1420)
dep(+-1899, Ctor1-1421)
dep(+-1899, -RRB--1422)
dep(+-1899, ;-1423)
dep(+-1899, ''-1424)
dep(+-1899, +-1425)
dep(+-1899, ``-1426)
dep(+-1899, var-1427)
dep(+-1899, Ctor2-1428)
dep(+-1899, =-1429)
dep(+-1899, function-1430)
dep(+-1899, -LRB--1431)
dep(+-1899, a-1432)
dep(+-1899, -RRB--1433)
dep(+-1899, -LCB--1434)
dep(+-1899, Ctor1.call-1435)
dep(+-1899, -LRB--1436)
dep(+-1899, this-1437)
dep(+-1899, ,-1438)
dep(+-1899, a-1439)
dep(+-1899, -RRB--1440)
dep(+-1899, -RCB--1441)
dep(+-1899, ;-1442)
dep(+-1899, ''-1443)
dep(+-1899, +-1444)
dep(+-1899, ``-1445)
dep(+-1899, goog-1446)
dep(+-1899, $-1447)
dep(+-1899, inherits-1448)
dep(+-1899, -LRB--1449)
dep(+-1899, Ctor2-1450)
dep(+-1899, ,-1451)
dep(+-1899, Ctor1-1452)
dep(+-1899, -RRB--1453)
dep(+-1899, ;-1454)
dep(+-1899, ''-1455)
dep(+-1899, +-1456)
dep(+-1899, -RCB--1457)
dep(+-1899, public-1458)
dep(+-1899, void-1459)
dep(+-1899, testFunctionArgRemovalCausingInconsistency-1460)
dep(+-1899, -LRB--1461)
dep(+-1899, -RRB--1462)
dep(+-1899, -LCB--1463)
dep(+-1899, @@-1464)
dep(+-1899, -611,19-1465)
dep(+-1899, +606,19-1466)
dep(+-1899, @@-1467)
dep(+-1899, public-1468)
dep(+-1899, final-1469)
dep(+-1899, class-1470)
dep(+-1899, RemoveUnusedVarsTest-1471)
dep(+-1899, extends-1472)
dep(+-1899, CompilerTestCase-1473)
dep(+-1899, -LCB--1474)
dep(+-1899, contains-1475)
dep(+-1899, a-1476)
dep(+-1899, call-1477)
dep(+-1899, site-1478)
dep(+-1899, in-1479)
dep(+-1899, its-1480)
dep(+-1899, subtree-1481)
dep(+-1899, -LRB--1482)
dep(+-1899, will-1483)
dep(+-1899, cause-1484)
dep(+-1899, the-1485)
dep(+-1899, call-1486)
dep(+-1899, site-1487)
dep(+-1899, 's-1488)
dep(+-1899, parent-1489)
dep(+-1899, pointer-1490)
dep(+-1899, to-1491)
dep(+-1899, be-1492)
dep(+-1899, null-1493)
dep(+-1899, -RRB--1494)
dep(+-1899, .-1495)
dep(+-1899, test-1496)
dep(+-1899, -LRB--1497)
dep(+-1899, ``-1498)
dep(+-1899, var-1499)
dep(+-1899, a-1500)
dep(+-1899, =-1501)
dep(+-1899, function-1502)
dep(+-1899, -LRB--1503)
dep(+-1899, x-1504)
dep(+-1899, ,-1505)
dep(+-1899, y-1506)
dep(+-1899, -RRB--1507)
dep(+-1899, -LCB--1508)
dep(+-1899, -RCB--1509)
dep(+-1899, ;-1510)
dep(+-1899, ''-1511)
dep(+-1899, +-1512)
dep(+-1899, ``-1513)
dep(+-1899, var-1514)
dep(+-1899, b-1515)
dep(+-1899, =-1516)
dep(+-1899, function-1517)
dep(+-1899, -LRB--1518)
dep(+-1899, z-1519)
dep(+-1899, -RRB--1520)
dep(+-1899, -LCB--1521)
dep(+-1899, -RCB--1522)
dep(+-1899, ;-1523)
dep(+-1899, ''-1524)
dep(+-1899, +-1525)
dep(+-1899, ``-1526)
dep(+-1899, a-1527)
dep(+-1899, -LRB--1528)
dep(+-1899, new-1529)
dep(+-1899, b-1530)
dep(+-1899, ,-1531)
dep(+-1899, b-1532)
dep(+-1899, -RRB--1533)
dep(+-1899, ''-1534)
dep(+-1899, ,-1535)
dep(+-1899, ``-1536)
dep(+-1899, var-1537)
dep(+-1899, b-1538)
dep(+-1899, =-1539)
dep(+-1899, function-1540)
dep(+-1899, -LRB--1541)
dep(+-1899, z-1542)
dep(+-1899, -RRB--1543)
dep(+-1899, -LCB--1544)
dep(+-1899, -RCB--1545)
dep(+-1899, ;-1546)
dep(+-1899, ''-1547)
dep(+-1899, +-1548)
dep(+-1899, ``-1549)
dep(+-1899, a-1550)
dep(+-1899, -LRB--1551)
dep(+-1899, new-1552)
dep(+-1899, b-1553)
dep(+-1899, ,-1554)
dep(+-1899, b-1555)
dep(+-1899, -RRB--1556)
dep(+-1899, ''-1557)
dep(+-1899, ,-1558)
dep(+-1899, ``-1559)
dep(+-1899, var-1560)
dep(+-1899, a-1561)
dep(+-1899, =-1562)
dep(+-1899, function-1563)
dep(+-1899, -LRB--1564)
dep(+-1899, -RRB--1565)
dep(+-1899, -LCB--1566)
dep(+-1899, -RCB--1567)
dep(+-1899, ;-1568)
dep(+-1899, ''-1569)
dep(+-1899, +-1570)
dep(+-1899, ``-1571)
dep(+-1899, var-1572)
dep(+-1899, b-1573)
dep(+-1899, =-1574)
dep(+-1899, function-1575)
dep(+-1899, -LRB--1576)
dep(+-1899, -RRB--1577)
dep(+-1899, -LCB--1578)
dep(+-1899, -RCB--1579)
dep(+-1899, ;-1580)
dep(+-1899, ''-1581)
dep(+-1899, +-1582)
dep(+-1899, ``-1583)
dep(+-1899, var-1584)
dep(+-1899, b-1585)
dep(+-1899, =-1586)
dep(+-1899, function-1587)
dep(+-1899, -LRB--1588)
dep(+-1899, -RRB--1589)
dep(+-1899, -LCB--1590)
dep(+-1899, -RCB--1591)
dep(+-1899, ;-1592)
dep(+-1899, ''-1593)
dep(+-1899, +-1594)
dep(+-1899, -RCB--1595)
dep(+-1899, public-1596)
dep(+-1899, void-1597)
dep(+-1899, testRemoveUnusedVarsPossibleNpeCase-1598)
dep(+-1899, -LRB--1599)
dep(+-1899, -RRB--1600)
dep(+-1899, -LCB--1601)
dep(+-1899, test-1602)
dep(+-1899, -LRB--1603)
dep(+-1899, ``-1604)
dep(+-1899, var-1605)
dep(+-1899, a-1606)
dep(+-1899, =-1607)
dep(+-1899, -LSB--1608)
dep(+-1899, -RSB--1609)
dep(+-1899, ;-1610)
dep(+-1899, ''-1611)
dep(+-1899, +-1612)
dep(+-1899, ``-1613)
dep(+-1899, var-1614)
dep(+-1899, register-1615)
dep(+-1899, =-1616)
dep(+-1899, function-1617)
dep(+-1899, -LRB--1618)
dep(+-1899, callback-1619)
dep(+-1899, -RRB--1620)
dep(+-1899, -LCB--1621)
dep(+-1899, a-1622)
dep(+-1899, -LSB--1623)
dep(+-1899, 0-1624)
dep(+-1899, -RSB--1625)
dep(+-1899, =-1626)
dep(+-1899, callback-1627)
dep(+-1899, -RCB--1628)
dep(+-1899, ;-1629)
dep(+-1899, ''-1630)
dep(+-1899, +-1631)
dep(+-1899, ``-1632)
dep(+-1899, register-1633)
dep(+-1899, -LRB--1634)
dep(+-1899, function-1635)
dep(+-1899, -LRB--1636)
dep(+-1899, transformer-1637)
dep(+-1899, -RRB--1638)
dep(+-1899, -LCB--1639)
dep(+-1899, -RCB--1640)
dep(+-1899, -RRB--1641)
dep(+-1899, ;-1642)
dep(+-1899, ''-1643)
dep(+-1899, +-1644)
dep(+-1899, ``-1645)
dep(+-1899, register-1646)
dep(+-1899, -LRB--1647)
dep(+-1899, function-1648)
dep(+-1899, -LRB--1649)
dep(+-1899, transformer-1650)
dep(+-1899, -RRB--1651)
dep(+-1899, -LCB--1652)
dep(+-1899, -RCB--1653)
dep(+-1899, -RRB--1654)
dep(+-1899, ;-1655)
dep(+-1899, ''-1656)
dep(+-1899, ,-1657)
dep(+-1899, ``-1658)
dep(+-1899, var-1659)
dep(+-1899, register-1660)
dep(+-1899, =-1661)
dep(+-1899, function-1662)
dep(+-1899, -LRB--1663)
dep(+-1899, callback-1664)
dep(+-1899, -RRB--1665)
dep(+-1899, -LCB--1666)
dep(+-1899, a-1667)
dep(+-1899, -LSB--1668)
dep(+-1899, 0-1669)
dep(+-1899, -RSB--1670)
dep(+-1899, =-1671)
dep(+-1899, callback-1672)
dep(+-1899, -RCB--1673)
dep(+-1899, ;-1674)
dep(+-1899, ''-1675)
dep(+-1899, +-1676)
dep(+-1899, ``-1677)
dep(+-1899, register-1678)
dep(+-1899, -LRB--1679)
dep(+-1899, function-1680)
dep(+-1899, -LRB--1681)
dep(+-1899, transformer-1682)
dep(+-1899, -RRB--1683)
dep(+-1899, -LCB--1684)
dep(+-1899, -RCB--1685)
dep(+-1899, -RRB--1686)
dep(+-1899, ;-1687)
dep(+-1899, ''-1688)
dep(+-1899, +-1689)
dep(+-1899, ``-1690)
dep(+-1899, register-1691)
dep(+-1899, -LRB--1692)
dep(+-1899, function-1693)
dep(+-1899, -LRB--1694)
dep(+-1899, transformer-1695)
dep(+-1899, -RRB--1696)
dep(+-1899, -LCB--1697)
dep(+-1899, -RCB--1698)
dep(+-1899, -RRB--1699)
dep(+-1899, ;-1700)
dep(+-1899, ''-1701)
dep(+-1899, ,-1702)
dep(+-1899, -RCB--1703)
dep(+-1899, @@-1704)
dep(+-1899, -632,17-1705)
dep(+-1899, +627,17-1706)
dep(+-1899, @@-1707)
dep(+-1899, public-1708)
dep(+-1899, final-1709)
dep(+-1899, class-1710)
dep(+-1899, RemoveUnusedVarsTest-1711)
dep(+-1899, extends-1712)
dep(+-1899, CompilerTestCase-1713)
dep(+-1899, -LCB--1714)
dep(+-1899, Only-1715)
dep(+-1899, the-1716)
dep(+-1899, function-1717)
dep(+-1899, definition-1718)
dep(+-1899, can-1719)
dep(+-1899, be-1720)
dep(+-1899, modified-1721)
dep(+-1899, ,-1722)
dep(+-1899, none-1723)
dep(+-1899, of-1724)
dep(+-1899, the-1725)
dep(+-1899, call-1726)
dep(+-1899, sites-1727)
dep(+-1899, .-1728)
dep(+-1899, test-1729)
dep(+-1899, -LRB--1730)
dep(+-1899, ``-1731)
dep(+-1899, function-1732)
dep(+-1899, JSCompiler_renameProperty-1733)
dep(+-1899, -LRB--1734)
dep(+-1899, a-1735)
dep(+-1899, -RRB--1736)
dep(+-1899, -LCB--1737)
dep(+-1899, -RCB--1738)
dep(+-1899, ;-1739)
dep(+-1899, ''-1740)
dep(+-1899, +-1741)
dep(+-1899, ``-1742)
dep(+-1899, JSCompiler_renameProperty-1743)
dep(+-1899, -LRB--1744)
dep(+-1899, `-1745)
dep(+-1899, a-1746)
dep(+-1899, '-1747)
dep(+-1899, -RRB--1748)
dep(+-1899, ;-1749)
dep(+-1899, ''-1750)
dep(+-1899, ,-1751)
dep(+-1899, ``-1752)
dep(+-1899, function-1753)
dep(+-1899, JSCompiler_renameProperty-1754)
dep(+-1899, -LRB--1755)
dep(+-1899, -RRB--1756)
dep(+-1899, -LCB--1757)
dep(+-1899, -RCB--1758)
dep(+-1899, ;-1759)
dep(+-1899, ''-1760)
dep(+-1899, +-1761)
dep(+-1899, ``-1762)
dep(+-1899, JSCompiler_renameProperty-1763)
dep(+-1899, -LRB--1764)
dep(+-1899, `-1765)
dep(+-1899, a-1766)
dep(+-1899, '-1767)
dep(+-1899, -RRB--1768)
dep(+-1899, ;-1769)
dep(+-1899, ''-1770)
dep(+-1899, ,-1771)
dep(+-1899, ``-1772)
dep(+-1899, function-1773)
dep(+-1899, JSCompiler_renameProperty-1774)
dep(+-1899, -LRB--1775)
dep(+-1899, -RRB--1776)
dep(+-1899, -LCB--1777)
dep(+-1899, -RCB--1778)
dep(+-1899, ;-1779)
dep(+-1899, ''-1780)
dep(+-1899, +-1781)
dep(+-1899, -RCB--1782)
dep(+-1899, public-1783)
dep(+-1899, void-1784)
dep(+-1899, testDoNotOptimizeJSCompiler_ObjectPropertyString-1785)
dep(+-1899, -LRB--1786)
dep(+-1899, -RRB--1787)
dep(+-1899, -LCB--1788)
dep(+-1899, test-1789)
dep(+-1899, -LRB--1790)
dep(+-1899, ``-1791)
dep(+-1899, function-1792)
dep(+-1899, JSCompiler_ObjectPropertyString-1793)
dep(+-1899, -LRB--1794)
dep(+-1899, a-1795)
dep(+-1899, ,-1796)
dep(+-1899, b-1797)
dep(+-1899, -RRB--1798)
dep(+-1899, -LCB--1799)
dep(+-1899, -RCB--1800)
dep(+-1899, ;-1801)
dep(+-1899, ''-1802)
dep(+-1899, +-1803)
dep(+-1899, ``-1804)
dep(+-1899, JSCompiler_ObjectPropertyString-1805)
dep(+-1899, -LRB--1806)
dep(+-1899, window-1807)
dep(+-1899, ,-1808)
dep(+-1899, `-1809)
dep(+-1899, b-1810)
dep(+-1899, '-1811)
dep(+-1899, -RRB--1812)
dep(+-1899, ;-1813)
dep(+-1899, ''-1814)
dep(+-1899, ,-1815)
dep(+-1899, ``-1816)
dep(+-1899, function-1817)
dep(+-1899, JSCompiler_ObjectPropertyString-1818)
dep(+-1899, -LRB--1819)
dep(+-1899, -RRB--1820)
dep(+-1899, -LCB--1821)
dep(+-1899, -RCB--1822)
dep(+-1899, ;-1823)
dep(+-1899, ''-1824)
dep(+-1899, +-1825)
dep(+-1899, ``-1826)
dep(+-1899, JSCompiler_ObjectPropertyString-1827)
dep(+-1899, -LRB--1828)
dep(+-1899, window-1829)
dep(+-1899, ,-1830)
dep(+-1899, `-1831)
dep(+-1899, b-1832)
dep(+-1899, '-1833)
dep(+-1899, -RRB--1834)
dep(+-1899, ;-1835)
dep(+-1899, ''-1836)
dep(+-1899, ,-1837)
dep(+-1899, ``-1838)
dep(+-1899, function-1839)
dep(+-1899, JSCompiler_ObjectPropertyString-1840)
dep(+-1899, -LRB--1841)
dep(+-1899, -RRB--1842)
dep(+-1899, -LCB--1843)
dep(+-1899, -RCB--1844)
dep(+-1899, ;-1845)
dep(+-1899, ''-1846)
dep(+-1899, +-1847)
dep(+-1899, -RCB--1848)
dep(+-1899, public-1849)
dep(+-1899, void-1850)
dep(+-1899, testDoNotOptimizeSetters-1851)
dep(+-1899, -LRB--1852)
dep(+-1899, -RRB--1853)
dep(+-1899, -LCB--1854)
dep(+-1899, @@-1855)
dep(+-1899, -651,8-1856)
dep(+-1899, +646,8-1857)
dep(+-1899, @@-1858)
dep(+-1899, public-1859)
dep(+-1899, final-1860)
dep(+-1899, class-1861)
dep(+-1899, RemoveUnusedVarsTest-1862)
dep(+-1899, extends-1863)
dep(+-1899, CompilerTestCase-1864)
dep(+-1899, -LCB--1865)
dep(+-1899, public-1866)
dep(+-1899, void-1867)
dep(+-1899, testRemoveSingletonClass1-1868)
dep(+-1899, -LRB--1869)
dep(+-1899, -RRB--1870)
dep(+-1899, -LCB--1871)
dep(+-1899, test-1872)
dep(+-1899, -LRB--1873)
dep(+-1899, ``-1874)
dep(+-1899, function-1875)
dep(+-1899, goog-1876)
dep(+-1899, $-1877)
dep(+-1899, addSingletonGetter-1878)
dep(+-1899, -LRB--1879)
dep(+-1899, a-1880)
dep(+-1899, -RRB--1881)
dep(+-1899, -LCB--1882)
dep(+-1899, -RCB--1883)
dep(+-1899, ''-1884)
dep(+-1899, +-1885)
dep(+-1899, ''-1886)
dep(+-1899, /-1887)
dep(+-1899, **-1888)
dep(+-1899, @constructor-1889)
dep(+-1899, *-1890)
dep(+-1899, /-1891)
dep(+-1899, function-1892)
dep(+-1899, a-1893)
dep(+-1899, -LRB--1894)
dep(+-1899, -RRB--1895)
dep(+-1899, -LCB--1896)
dep(+-1899, -RCB--1897)
dep(+-1899, ''-1898)
root(ROOT-0, +-1899)
File Name: /test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java
Time Of Creation: 2017-06-08T09:49:23-07:00
Time Of Deletion: null
Creation Commit Hash: a4d64b06da47ee84dfd48fae809bfd96bfb061de
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(johnlenz): "i = a" should be removed here.
Specificity: 0.732928
Content Structure:
root(ROOT-0, johnlenz-2)
nsubjpass(removed-12, i-6)
compound(a-8, =-7)
advmod(removed-12, a-8)
aux(removed-12, should-10)
auxpass(removed-12, be-11)
dep(johnlenz-2, removed-12)
advmod(removed-12, here-13)
File Name: /test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java
Time Of Creation: 2017-06-08T09:49:23-07:00
Time Of Deletion: 2017-06-08T09:49:23-07:00
Creation Commit Hash: a4d64b06da47ee84dfd48fae809bfd96bfb061de
Deletion Commit Hash: a4d64b06da47ee84dfd48fae809bfd96bfb061de
Time To Complete: P0D; PT0S

Type: Incomplete
Content:
(johnlenz): A syntax for stubs using object literals?
Specificity: 0.764647
Content Structure:
root(ROOT-0, johnlenz-2)
det(syntax-6, A-5)
dep(johnlenz-2, syntax-6)
case(stubs-8, for-7)
nmod:for(syntax-6, stubs-8)
acl(stubs-8, using-9)
compound(literals-11, object-10)
dobj(using-9, literals-11)
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add a check for useless of template types.
Unless there are at least two references to a Template type in
a definition it isn't useful.
Specificity: 0.986307
Content Structure:
dep(Add-5, johnlenz-2)
root(ROOT-0, Add-5)
det(check-7, a-6)
dobj(Add-5, check-7)
case(useless-9, for-8)
advcl(Add-5, useless-9)
case(types-12, of-10)
amod(types-12, template-11)
nmod:of(useless-9, types-12)
mark(are-16, Unless-14)
expl(are-16, there-15)
advcl(Add-5, are-16)
case(least-18, at-17)
nmod:npmod(two-19, least-18)
nummod(references-20, two-19)
nsubj(are-16, references-20)
case(type-24, to-21)
det(type-24, a-22)
compound(type-24, Template-23)
nmod:to(are-16, type-24)
case(definition-27, in-25)
det(definition-27, a-26)
nmod:in(are-16, definition-27)
nsubj(useful-31, it-28)
cop(useful-31, is-29)
neg(useful-31, n't-30)
acl:relcl(definition-27, useful-31)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add some mechanism for determining that functions
are unaffected by side effects.
Specificity: 0.854741
Content Structure:
dep(Add-5, johnlenz-2)
root(ROOT-0, Add-5)
det(mechanism-7, some-6)
dobj(Add-5, mechanism-7)
mark(determining-9, for-8)
advcl(Add-5, determining-9)
mark(unaffected-13, that-10)
nsubj(unaffected-13, functions-11)
cop(unaffected-13, are-12)
ccomp(determining-9, unaffected-13)
case(effects-16, by-14)
compound(effects-16, side-15)
nmod:by(unaffected-13, effects-16)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add support for 'apply'
Specificity: 0.714955
Content Structure:
root(ROOT-0, johnlenz-2)
amod(support-6, Add-5)
dep(johnlenz-2, support-6)
case(apply-9, for-7)
nmod:for(support-6, apply-9)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add support for .call and .apply
Specificity: 0.753359
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Add-5)
csubj(call-9, support-6)
nmod(support-6, for-7)
ccomp(Add-5, call-9)
dobj(call-9, and-10)
acl:relcl(and-10, apply-12)
File Name: ./test/com/google/javascript/jscomp/OptimizeReturnsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add support for quoted properties
Specificity: 0.727005
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Add-5)
dobj(Add-5, support-6)
case(properties-9, for-7)
amod(properties-9, quoted-8)
nmod:for(support-6, properties-9)
File Name: /test/com/google/javascript/jscomp/DefinitionUseSiteFinderTest.java
Time Of Creation: 2017-06-22T16:48:22-07:00
Time Of Deletion: null
Creation Commit Hash: 7c5377c3c9947212345f084049c096ef920a6ebd
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add tests to the IntegrationTest.
Specificity: 0.778642
Content Structure:
root(ROOT-0, johnlenz-2)
amod(tests-6, Add-5)
dep(johnlenz-2, tests-6)
case(IntegrationTest-9, to-7)
det(IntegrationTest-9, the-8)
nmod:to(tests-6, IntegrationTest-9)
File Name: ./test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Add unit tests for:
inject
getFunctionCallParameterMap
Specificity: 0.831759
Content Structure:
root(ROOT-0, johnlenz-2)
amod(tests-7, Add-5)
compound(tests-7, unit-6)
dep(johnlenz-2, tests-7)
acl(tests-7, for-8)
amod(getFunctionCallParameterMap-11, inject-10)
dep(johnlenz-2, getFunctionCallParameterMap-11)
File Name: ./test/com/google/javascript/jscomp/FunctionArgumentInjectorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Allow 'this' references to be replaced with a
global 'this' object.
Specificity: 0.88209
Content Structure:
dep(Allow-5, johnlenz-2)
root(ROOT-0, Allow-5)
nsubj(object-19, this-7)
acl(this-7, references-9)
mark(replaced-12, to-10)
auxpass(replaced-12, be-11)
xcomp(references-9, replaced-12)
case(global-15, with-13)
det(global-15, a-14)
nmod:with(replaced-12, global-15)
dep(global-15, this-17)
ccomp(Allow-5, object-19)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Allow inlining into any scope without local names or
inner functions.
Specificity: 0.837974
Content Structure:
dep(Allow-5, johnlenz-2)
root(ROOT-0, Allow-5)
xcomp(Allow-5, inlining-6)
case(scope-9, into-7)
det(scope-9, any-8)
nmod:into(inlining-6, scope-9)
case(names-12, without-10)
amod(names-12, local-11)
nmod:without(inlining-6, names-12)
cc(names-12, or-13)
amod(functions-15, inner-14)
nmod:without(inlining-6, functions-15)
conj:or(names-12, functions-15)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Allow rewrite all definitions are valid.
Specificity: 0.745565
Content Structure:
dep(rewrite-6, johnlenz-2)
aux(rewrite-6, Allow-5)
root(ROOT-0, rewrite-6)
det(definitions-8, all-7)
nsubj(valid-10, definitions-8)
cop(valid-10, are-9)
ccomp(rewrite-6, valid-10)
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): As the @this type for Array.prototype.push includes
"{length:number}" (and this includes "Array<number>") we don't
get a type warning here. Consider special-casing array methods.
Specificity: 0.997053
Content Structure:
dep(get-31, johnlenz-2)
case(type-8, As-5)
det(type-8, the-6)
amod(type-8, @this-7)
parataxis(get-31, type-8)
mark(Array.prototype.push-10, for-9)
acl(type-8, Array.prototype.push-10)
ccomp(Array.prototype.push-10, includes-11)
dep(Array.prototype.push-10, length-14)
dep(length-14, number-16)
cc(includes-22, and-20)
nsubj(includes-22, this-21)
parataxis(get-31, includes-22)
compound(<number>-25, Array-24)
xcomp(includes-22, <number>-25)
nsubj(get-31, we-28)
aux(get-31, do-29)
neg(get-31, n't-30)
root(ROOT-0, get-31)
det(warning-34, a-32)
compound(warning-34, type-33)
dep(get-31, warning-34)
dep(warning-34, here-35)
dep(get-31, Consider-37)
amod(methods-40, special-casing-38)
compound(methods-40, array-39)
dobj(Consider-37, methods-40)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Can inline into a function containing eval, if
no names are introduced.
Specificity: 0.866008
Content Structure:
dep(inline-6, johnlenz-2)
aux(inline-6, Can-5)
root(ROOT-0, inline-6)
case(function-9, into-7)
det(function-9, a-8)
nmod:into(inline-6, function-9)
acl(function-9, containing-10)
xcomp(containing-10, eval-11)
mark(introduced-17, if-13)
neg(names-15, no-14)
nsubjpass(introduced-17, names-15)
auxpass(introduced-17, are-16)
advcl(inline-6, introduced-17)
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Can inline, not temps needed.
Specificity: 0.733617
Content Structure:
dep(inline-6, johnlenz-2)
aux(inline-6, Can-5)
root(ROOT-0, inline-6)
dep(inline-6, not-8)
advmod(needed-10, temps-9)
dep(not-8, needed-10)
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Change these normalization checks Preconditions and
Exceptions into Errors so that it is easier to find the root cause
when there are cascading issues.
Specificity: 0.979998
Content Structure:
dep(Change-5, johnlenz-2)
root(ROOT-0, Change-5)
det(normalization-7, these-6)
nsubj(checks-8, normalization-7)
ccomp(Change-5, checks-8)
dobj(checks-8, Preconditions-9)
cc(Preconditions-9, and-10)
dobj(checks-8, Exceptions-11)
conj:and(Preconditions-9, Exceptions-11)
case(Errors-13, into-12)
nmod:into(Preconditions-9, Errors-13)
mark(easier-18, so-14)
mwe(so-14, that-15)
nsubj(easier-18, it-16)
nsubj:xsubj(find-20, it-16)
cop(easier-18, is-17)
advcl(checks-8, easier-18)
mark(find-20, to-19)
xcomp(easier-18, find-20)
det(cause-23, the-21)
compound(cause-23, root-22)
dobj(find-20, cause-23)
advmod(cascading-27, when-24)
expl(cascading-27, there-25)
aux(cascading-27, are-26)
advcl(easier-18, cascading-27)
dobj(cascading-27, issues-28)
File Name: ./src/com/google/javascript/jscomp/SanityCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Closure that only contain global reference can be
moved.
Specificity: 0.801469
Content Structure:
dep(moved-13, johnlenz-2)
nsubj(contain-8, Closure-5)
nsubjpass(moved-13, Closure-5)
ref(Closure-5, that-6)
advmod(contain-8, only-7)
acl:relcl(Closure-5, contain-8)
amod(reference-10, global-9)
dobj(contain-8, reference-10)
aux(moved-13, can-11)
auxpass(moved-13, be-12)
root(ROOT-0, moved-13)
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Consider adding a post optimization pass to
convert OR into HOOK to save parentheses when the operator
precedents would require them.
Specificity: 0.974062
Content Structure:
dep(pass-10, johnlenz-2)
nsubj(pass-10, Consider-5)
nsubj:xsubj(convert-12, Consider-5)
acl(Consider-5, adding-6)
det(optimization-9, a-7)
compound(optimization-9, post-8)
dobj(adding-6, optimization-9)
root(ROOT-0, pass-10)
mark(convert-12, to-11)
xcomp(pass-10, convert-12)
dobj(convert-12, OR-13)
case(HOOK-15, into-14)
nmod:into(convert-12, HOOK-15)
mark(save-17, to-16)
advcl(convert-12, save-17)
dobj(save-17, parentheses-18)
advmod(require-24, when-19)
det(precedents-22, the-20)
compound(precedents-22, operator-21)
nsubj(require-24, precedents-22)
aux(require-24, would-23)
advcl(save-17, require-24)
dobj(require-24, them-25)
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Consider folding the following to:
Specificity: 0.727975
Content Structure:
root(ROOT-0, johnlenz-2)
amod(folding-6, Consider-5)
dep(johnlenz-2, folding-6)
det(following-8, the-7)
dep(folding-6, following-8)
acl(johnlenz-2, to-9)
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Consider moving this to a separate peephole pass.
Specificity: 0.782899
Content Structure:
dep(Consider-5, johnlenz-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, moving-6)
dobj(moving-6, this-7)
case(pass-12, to-8)
det(pass-12, a-9)
amod(pass-12, separate-10)
compound(pass-12, peephole-11)
nmod:to(moving-6, pass-12)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Consider storing the callSite classification in the
reference object and passing it in here.
Specificity: 0.895764
Content Structure:
dep(Consider-5, johnlenz-2)
root(ROOT-0, Consider-5)
ccomp(Consider-5, storing-6)
det(classification-9, the-7)
amod(classification-9, callSite-8)
dobj(storing-6, classification-9)
case(object-13, in-10)
det(object-13, the-11)
compound(object-13, reference-12)
nmod:in(classification-9, object-13)
cc(storing-6, and-14)
ccomp(Consider-5, passing-15)
conj:and(storing-6, passing-15)
dobj(passing-15, it-16)
case(here-18, in-17)
nmod:in(passing-15, here-18)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Consider using scope for this.
Specificity: 0.728787
Content Structure:
dep(Consider-5, johnlenz-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, using-6)
dobj(using-6, scope-7)
case(this-9, for-8)
nmod:for(using-6, this-9)
File Name: ./src/com/google/javascript/jscomp/FunctionArgumentInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Counting the number of returns is relatively expensive
this information should be determined during the traversal and
cached.
Specificity: 0.935309
Content Structure:
root(ROOT-0, johnlenz-2)
csubj(expensive-12, Counting-5)
det(number-7, the-6)
dobj(Counting-5, number-7)
case(returns-9, of-8)
nmod:of(number-7, returns-9)
cop(expensive-12, is-10)
advmod(expensive-12, relatively-11)
dep(johnlenz-2, expensive-12)
det(information-14, this-13)
nsubjpass(determined-17, information-14)
nsubjpass(cached-22, information-14)
aux(determined-17, should-15)
auxpass(determined-17, be-16)
ccomp(expensive-12, determined-17)
case(traversal-20, during-18)
det(traversal-20, the-19)
nmod:during(determined-17, traversal-20)
cc(determined-17, and-21)
ccomp(expensive-12, cached-22)
conj:and(determined-17, cached-22)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Determine if it is necessary to support ".call" or
".apply".
Specificity: 0.867003
Content Structure:
dep(apply-19, johnlenz-2)
nsubj(apply-19, Determine-5)
mark(necessary-9, if-6)
nsubjpass(necessary-9, it-7)
nsubj:xsubj(to-10, it-7)
auxpass(necessary-9, is-8)
dep(Determine-5, necessary-9)
xcomp(necessary-9, to-10)
xcomp(to-10, support-11)
dep(support-11, call-14)
advmod(necessary-9, or-16)
root(ROOT-0, apply-19)
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Determining if the called function contains VARs
or if the caller contains inner functions accounts for 20% of the
run-time cost of this pass.
Specificity: 0.981786
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Determining-5)
mark(contains-10, if-6)
det(function-9, the-7)
amod(function-9, called-8)
nsubj(contains-10, function-9)
advcl(Determining-5, contains-10)
dobj(contains-10, VARs-11)
cc(contains-10, or-12)
mark(contains-16, if-13)
det(caller-15, the-14)
nsubj(contains-16, caller-15)
advcl(Determining-5, contains-16)
conj:or(contains-10, contains-16)
amod(accounts-19, inner-17)
compound(accounts-19, functions-18)
dobj(contains-16, accounts-19)
case(%-22, for-20)
nummod(%-22, 20-21)
nmod:for(accounts-19, %-22)
case(cost-26, of-23)
det(cost-26, the-24)
amod(cost-26, run-time-25)
nmod:of(%-22, cost-26)
case(pass-29, of-27)
det(pass-29, this-28)
nmod:of(cost-26, pass-29)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Do we need to do anything about the Javadoc?
Specificity: 0.820115
Content Structure:
root(ROOT-0, johnlenz-2)
aux(need-7, Do-5)
nsubj(need-7, we-6)
nsubj:xsubj(do-9, we-6)
dep(johnlenz-2, need-7)
mark(do-9, to-8)
xcomp(need-7, do-9)
dobj(do-9, anything-10)
case(Javadoc-13, about-11)
det(Javadoc-13, the-12)
nmod:about(do-9, Javadoc-13)
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Do we need to handle this differently for "third_party"
mode? Remove the previous function definitions?
Specificity: 0.92207
Content Structure:
root(ROOT-0, johnlenz-2)
aux(need-7, Do-5)
nsubj(need-7, we-6)
nsubj:xsubj(handle-9, we-6)
dep(johnlenz-2, need-7)
mark(handle-9, to-8)
xcomp(need-7, handle-9)
nsubj(Remove-18, this-10)
advmod(mode-16, differently-11)
case(mode-16, for-12)
amod(mode-16, third_party-14)
acl:relcl(this-10, mode-16)
ccomp(handle-9, Remove-18)
det(definitions-22, the-19)
amod(definitions-22, previous-20)
compound(definitions-22, function-21)
dobj(Remove-18, definitions-22)
File Name: ./test/com/google/javascript/jscomp/NormalizeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Don't work on detached nodes.
Specificity: 0.733617
Content Structure:
dep(work-7, johnlenz-2)
aux(work-7, Do-5)
neg(work-7, n't-6)
root(ROOT-0, work-7)
case(nodes-10, on-8)
amod(nodes-10, detached-9)
nmod:on(work-7, nodes-10)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclaration.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Enable Normalize during these tests.
Specificity: 0.752864
Content Structure:
root(ROOT-0, johnlenz-2)
compound(Normalize-6, Enable-5)
dep(johnlenz-2, Normalize-6)
case(tests-9, during-7)
det(tests-9, these-8)
nmod:during(Normalize-6, tests-9)
File Name: ./test/com/google/javascript/jscomp/RenameVarsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Fix this.
Specificity: 0.681631
Content Structure:
dep(Fix-5, johnlenz-2)
root(ROOT-0, Fix-5)
dobj(Fix-5, this-6)
File Name: /test/com/google/javascript/jscomp/DefinitionUseSiteFinderTest.java
Time Of Creation: 2017-06-22T16:48:22-07:00
Time Of Deletion: null
Creation Commit Hash: 7c5377c3c9947212345f084049c096ef920a6ebd
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): For some reason, we have mappings beyond the max line.
So far they're just null mappings and we can ignore them.
(If they're non-null, we assert-fail.)
Specificity: 0.996005
Content Structure:
root(ROOT-0, johnlenz-2)
case(reason-7, For-5)
det(reason-7, some-6)
nmod:for(have-10, reason-7)
nsubj(have-10, we-9)
acl:relcl(johnlenz-2, have-10)
dobj(have-10, mappings-11)
case(line-15, beyond-12)
det(line-15, the-13)
compound(line-15, max-14)
nmod:beyond(have-10, line-15)
case(far-18, So-17)
advmod(mappings-23, far-18)
nsubj(mappings-23, they-19)
cop(mappings-23, 're-20)
advmod(mappings-23, just-21)
amod(mappings-23, null-22)
acl:relcl(johnlenz-2, mappings-23)
cc(mappings-23, and-24)
nsubj(ignore-27, we-25)
aux(ignore-27, can-26)
acl:relcl(johnlenz-2, ignore-27)
conj:and(mappings-23, ignore-27)
dobj(ignore-27, them-28)
mark(non-null-34, If-31)
nsubj(non-null-34, they-32)
cop(non-null-34, 're-33)
dep(ignore-27, non-null-34)
nsubj(assert-fail-37, we-36)
xcomp(non-null-34, assert-fail-37)
File Name: ./src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Handle NaN with unknown value. BIT ops convert NaN
to zero so this is a little awkward here.
Specificity: 0.966914
Content Structure:
dep(convert-13, johnlenz-2)
parataxis(convert-13, Handle-5)
dobj(Handle-5, NaN-6)
case(value-9, with-7)
amod(value-9, unknown-8)
nmod:with(NaN-6, value-9)
compound(ops-12, BIT-11)
nsubj(convert-13, ops-12)
root(ROOT-0, convert-13)
dobj(convert-13, NaN-14)
nsubj:xsubj(zero-16, NaN-14)
mark(zero-16, to-15)
xcomp(convert-13, zero-16)
mark(awkward-22, so-17)
nsubj(awkward-22, this-18)
cop(awkward-22, is-19)
det(awkward-22, a-20)
amod(awkward-22, little-21)
advcl(zero-16, awkward-22)
advmod(awkward-22, here-23)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): I'm not 100% certain this is necessary, or if
the type is being inspected incorrectly.
Specificity: 0.927438
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(certain-10, I-5)
cop(certain-10, 'm-6)
neg(certain-10, not-7)
nummod(%-9, 100-8)
nmod:npmod(certain-10, %-9)
dep(johnlenz-2, certain-10)
nsubj(necessary-13, this-11)
cop(necessary-13, is-12)
advcl(certain-10, necessary-13)
cc(necessary-13, or-15)
mark(inspected-21, if-16)
det(type-18, the-17)
nsubjpass(inspected-21, type-18)
aux(inspected-21, is-19)
auxpass(inspected-21, being-20)
advcl(certain-10, inspected-21)
conj:or(necessary-13, inspected-21)
advmod(inspected-21, incorrectly-22)
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): I'm not sure what the original intent of "type prefix" stripping was.
Verify that we can always assume a complete namespace and simplify this logic.
Specificity: 0.98816
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(sure-8, I-5)
cop(sure-8, 'm-6)
neg(sure-8, not-7)
dep(johnlenz-2, sure-8)
dobj(was-19, what-9)
det(intent-12, the-10)
amod(intent-12, original-11)
nsubj(was-19, intent-12)
case(stripping-18, of-13)
compound(prefix-16, type-15)
compound(stripping-18, prefix-16)
nmod:of(intent-12, stripping-18)
ccomp(sure-8, was-19)
advmod(assume-26, Verify-21)
mark(assume-26, that-22)
nsubj(assume-26, we-23)
nsubj(simplify-31, we-23)
aux(assume-26, can-24)
advmod(assume-26, always-25)
dep(sure-8, assume-26)
det(namespace-29, a-27)
amod(namespace-29, complete-28)
dobj(assume-26, namespace-29)
cc(assume-26, and-30)
dep(sure-8, simplify-31)
conj:and(assume-26, simplify-31)
det(logic-33, this-32)
dobj(simplify-31, logic-33)
File Name: ./src/com/google/javascript/jscomp/StripCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): In ES5 strict mode a function can have a null or
undefined "this" value, but all the existing "@this" annotations
don't declare restricted types.
Specificity: 0.988944
Content Structure:
nsubj(have-12, johnlenz-2)
case(mode-8, In-5)
compound(mode-8, ES5-6)
amod(mode-8, strict-7)
nmod:in(have-12, mode-8)
det(function-10, a-9)
nsubj(have-12, function-10)
aux(have-12, can-11)
dep(declare-32, have-12)
det(value-20, a-13)
amod(value-20, null-14)
cc(null-14, or-15)
conj:or(null-14, undefined-16)
amod(value-20, undefined-16)
compound(value-20, this-18)
dobj(have-12, value-20)
cc(value-20, but-22)
det:predet(@this-27, all-23)
det(@this-27, the-24)
amod(@this-27, existing-25)
dobj(have-12, @this-27)
conj:but(value-20, @this-27)
nsubj(declare-32, annotations-29)
aux(declare-32, do-30)
neg(declare-32, n't-31)
root(ROOT-0, declare-32)
amod(types-34, restricted-33)
dobj(declare-32, types-34)
File Name: ./src/com/google/javascript/jscomp/FunctionTypeBuilder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): In Internet Explorer, non-JavaScript objects such
as DOM objects can not be decomposed.
Specificity: 0.932033
Content Structure:
dep(decomposed-18, johnlenz-2)
case(Explorer-7, In-5)
compound(Explorer-7, Internet-6)
nmod:in(decomposed-18, Explorer-7)
amod(objects-10, non-JavaScript-9)
nsubjpass(decomposed-18, objects-10)
case(objects-14, such-11)
mwe(such-11, as-12)
compound(objects-14, DOM-13)
nmod:such_as(objects-10, objects-14)
aux(decomposed-18, can-15)
neg(decomposed-18, not-16)
auxpass(decomposed-18, be-17)
root(ROOT-0, decomposed-18)
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Issue 310, should the values also be externed?
Specificity: 0.792264
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(310-6, Issue-5)
dep(johnlenz-2, 310-6)
aux(externed-13, should-8)
det(values-10, the-9)
nsubjpass(externed-13, values-10)
advmod(externed-13, also-11)
auxpass(externed-13, be-12)
dep(310-6, externed-13)
File Name: ./test/com/google/javascript/jscomp/GenerateExportsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): It doesn't really matter which
parent scope in the "change scope" invalidates this scope,
but if we were previously invalidated no parent
has this instance in its list, so add it to the new parent.
Specificity: 0.99829
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(matter-9, It-5)
nsubj(add-39, It-5)
aux(matter-9, does-6)
neg(matter-9, n't-7)
advmod(matter-9, really-8)
dep(johnlenz-2, matter-9)
dobj(invalidates-19, which-10)
compound(scope-12, parent-11)
nsubj(invalidates-19, scope-12)
case(scope-17, in-13)
det(scope-17, the-14)
compound(scope-17, change-16)
nmod:in(scope-12, scope-17)
ccomp(matter-9, invalidates-19)
det(scope-21, this-20)
dobj(invalidates-19, scope-21)
cc(matter-9, but-23)
mark(invalidated-28, if-24)
nsubj(invalidated-28, we-25)
cop(invalidated-28, were-26)
advmod(invalidated-28, previously-27)
advcl(add-39, invalidated-28)
neg(parent-30, no-29)
nsubj(has-31, parent-30)
ccomp(invalidated-28, has-31)
det(instance-33, this-32)
dobj(has-31, instance-33)
case(list-36, in-34)
nmod:poss(list-36, its-35)
nmod:in(instance-33, list-36)
advmod(add-39, so-38)
dep(johnlenz-2, add-39)
conj:but(matter-9, add-39)
dobj(add-39, it-40)
case(parent-44, to-41)
det(parent-44, the-42)
amod(parent-44, new-43)
nmod:to(add-39, parent-44)
File Name: /src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-07T08:44:17-07:00
Time Of Deletion: null
Creation Commit Hash: e6f3992269282757b47af7606397ff01a8a29993
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): It should be a parse error to have an @extends
or similiar annotations in a file overview block.
Specificity: 0.933469
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(error-10, It-5)
aux(error-10, should-6)
cop(error-10, be-7)
det(error-10, a-8)
amod(error-10, parse-9)
dep(johnlenz-2, error-10)
mark(have-12, to-11)
acl(error-10, have-12)
det(@extends-14, an-13)
dobj(have-12, @extends-14)
cc(@extends-14, or-15)
amod(annotations-17, similiar-16)
dobj(have-12, annotations-17)
conj:or(@extends-14, annotations-17)
case(block-22, in-18)
det(block-22, a-19)
compound(block-22, file-20)
compound(block-22, overview-21)
nmod:in(annotations-17, block-22)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): It would be nice if there were some way to preserve
typedefs but currently they are resolved into the basic types in the
type registry.
Specificity: 0.979613
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(nice-8, It-5)
aux(nice-8, would-6)
cop(nice-8, be-7)
dep(johnlenz-2, nice-8)
mark(were-11, if-9)
expl(were-11, there-10)
advcl(nice-8, were-11)
det(way-13, some-12)
nsubj(were-11, way-13)
mark(preserve-15, to-14)
acl(way-13, preserve-15)
dobj(preserve-15, typedefs-16)
cc(were-11, but-17)
advmod(resolved-21, currently-18)
nsubjpass(resolved-21, they-19)
auxpass(resolved-21, are-20)
advcl(nice-8, resolved-21)
conj:but(were-11, resolved-21)
case(types-25, into-22)
det(types-25, the-23)
amod(types-25, basic-24)
nmod:into(resolved-21, types-25)
case(registry-29, in-26)
det(registry-29, the-27)
compound(registry-29, type-28)
nmod:in(types-25, registry-29)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Make parsing precondition checks JSErrors reports.
Specificity: 0.811405
Content Structure:
dep(Make-5, johnlenz-2)
root(ROOT-0, Make-5)
amod(checks-8, parsing-6)
compound(checks-8, precondition-7)
nsubj(JSErrors-9, checks-8)
ccomp(Make-5, JSErrors-9)
dobj(JSErrors-9, reports-10)
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Mark NAME nodes constant for parameters that are not
modified.
Specificity: 0.876574
Content Structure:
root(ROOT-0, johnlenz-2)
compound(NAME-6, Mark-5)
nsubj(nodes-7, NAME-6)
dep(johnlenz-2, nodes-7)
xcomp(nodes-7, constant-8)
case(parameters-10, for-9)
nmod:for(constant-8, parameters-10)
nsubjpass(modified-14, parameters-10)
ref(parameters-10, that-11)
auxpass(modified-14, are-12)
neg(modified-14, not-13)
acl:relcl(parameters-10, modified-14)
File Name: ./src/com/google/javascript/jscomp/FunctionToBlockMutator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Maybe "smarten" FunctionState by adding this logic
to it?
Specificity: 0.833283
Content Structure:
root(ROOT-0, johnlenz-2)
compound(FunctionState-9, Maybe-5)
compound(FunctionState-9, smarten-7)
dep(johnlenz-2, FunctionState-9)
mark(adding-11, by-10)
acl(FunctionState-9, adding-11)
det(logic-13, this-12)
dobj(adding-11, logic-13)
case(it-15, to-14)
nmod:to(adding-11, it-15)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Maybe remove redundant BREAK and CONTINUE. Overlaps
with MinimizeExitPoints.
Specificity: 0.970488
Content Structure:
dep(remove-6, johnlenz-2)
advmod(remove-6, Maybe-5)
root(ROOT-0, remove-6)
compound(BREAK-8, redundant-7)
dobj(remove-6, BREAK-8)
cc(BREAK-8, and-9)
compound(Overlaps-12, CONTINUE-10)
dobj(remove-6, Overlaps-12)
conj:and(BREAK-8, Overlaps-12)
case(MinimizeExitPoints-14, with-13)
nmod:with(BREAK-8, MinimizeExitPoints-14)
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Minimize any block that ends in a optimizable statements:
break, continue, return
Specificity: 0.875807
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Minimize-5)
det(block-7, any-6)
dep(Minimize-5, block-7)
nsubj(ends-9, that-8)
dep(johnlenz-2, ends-9)
case(statements-13, in-10)
det(statements-13, a-11)
amod(statements-13, optimizable-12)
nmod:in(ends-9, statements-13)
ccomp(ends-9, break-15)
dep(break-15, continue-17)
dep(break-15, return-19)
File Name: ./src/com/google/javascript/jscomp/MinimizeExitPoints.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Minimum requirement checks are about 5% of the
run-time cost of this pass.
Specificity: 0.876448
Content Structure:
root(ROOT-0, johnlenz-2)
compound(checks-7, Minimum-5)
compound(checks-7, requirement-6)
nsubj(%-11, checks-7)
cop(%-11, are-8)
advmod(5-10, about-9)
nummod(%-11, 5-10)
dep(johnlenz-2, %-11)
case(cost-15, of-12)
det(cost-15, the-13)
amod(cost-15, run-time-14)
nmod:of(%-11, cost-15)
case(pass-18, of-16)
det(pass-18, this-17)
nmod:of(cost-15, pass-18)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Move "safety" code to a shared class.
Specificity: 0.760975
Content Structure:
dep(Move-5, johnlenz-2)
root(ROOT-0, Move-5)
amod(code-9, safety-7)
dobj(Move-5, code-9)
case(class-13, to-10)
det(class-13, a-11)
amod(class-13, shared-12)
nmod:to(Move-5, class-13)
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Move this to NodeTypeNormalizer once the unit tests are
fixed.
Specificity: 0.863605
Content Structure:
dep(Move-5, johnlenz-2)
root(ROOT-0, Move-5)
dobj(Move-5, this-6)
nsubj:xsubj(NodeTypeNormalizer-8, this-6)
mark(NodeTypeNormalizer-8, to-7)
xcomp(Move-5, NodeTypeNormalizer-8)
mark(fixed-14, once-9)
det(tests-12, the-10)
compound(tests-12, unit-11)
nsubjpass(fixed-14, tests-12)
auxpass(fixed-14, are-13)
advcl(NodeTypeNormalizer-8, fixed-14)
File Name: ./src/com/google/javascript/jscomp/Normalize.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Move this to NodeUtil if other uses for this crop up.
Specificity: 0.865996
Content Structure:
dep(Move-5, johnlenz-2)
root(ROOT-0, Move-5)
dobj(Move-5, this-6)
case(NodeUtil-8, to-7)
nmod:to(Move-5, NodeUtil-8)
mark(uses-11, if-9)
nsubj(uses-11, other-10)
advcl(Move-5, uses-11)
case(up-15, for-12)
det(crop-14, this-13)
nmod:npmod(up-15, crop-14)
advcl(uses-11, up-15)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Not yet. Propagate local object information.
Specificity: 0.772361
Content Structure:
root(ROOT-0, johnlenz-2)
nummod(Propagate-8, Not-5)
advmod(Propagate-8, yet-6)
dep(johnlenz-2, Propagate-8)
amod(information-11, local-9)
compound(information-11, object-10)
dep(Propagate-8, information-11)
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Object.create(), Object.createProperty
Specificity: 0.827145
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Object.create-5)
dep(Object.create-5, -RRB--7)
dep(-RRB--7, Object.createProperty-9)
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Provide some mechanism for determining this.
Specificity: 0.744823
Content Structure:
dep(Provide-5, johnlenz-2)
root(ROOT-0, Provide-5)
det(mechanism-7, some-6)
dobj(Provide-5, mechanism-7)
mark(determining-9, for-8)
advcl(Provide-5, determining-9)
dobj(determining-9, this-10)
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Re-enable these tests (they are a bit tricky).
Specificity: 0.864246
Content Structure:
dep(Re-enable-5, johnlenz-2)
root(ROOT-0, Re-enable-5)
det(tests-7, these-6)
dobj(Re-enable-5, tests-7)
nsubj(tricky-13, they-9)
cop(tricky-13, are-10)
det(bit-12, a-11)
nmod:npmod(tricky-13, bit-12)
dep(tests-7, tricky-13)
File Name: ./test/com/google/javascript/jscomp/ClosureCheckModuleTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Remove this cast and try/catch.
This is here to workaround GWT http://b/30943295
Specificity: 0.8668
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Remove-5)
det(cast-7, this-6)
dobj(Remove-5, cast-7)
cc(cast-7, and-8)
dobj(Remove-5, try/catch-9)
conj:and(cast-7, try/catch-9)
nsubj(http://b/30943295-17, This-11)
cop(http://b/30943295-17, is-12)
advmod(http://b/30943295-17, here-13)
case(http://b/30943295-17, to-14)
amod(http://b/30943295-17, workaround-15)
compound(http://b/30943295-17, GWT-16)
acl:relcl(cast-7, http://b/30943295-17)
File Name: ./src/com/google/javascript/jscomp/PerformanceTracker.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Remove this once JSTypeExpression are immutable
Specificity: 0.83771
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Remove-5)
dobj(Remove-5, this-6)
mark(immutable-10, once-7)
nsubj(immutable-10, JSTypeExpression-8)
cop(immutable-10, are-9)
advcl(Remove-5, immutable-10)
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Remove this once the normalization checks report
errors instead of exceptions.
Specificity: 0.836967
Content Structure:
dep(Remove-5, johnlenz-2)
root(ROOT-0, Remove-5)
dobj(Remove-5, this-6)
mark(checks-10, once-7)
det(normalization-9, the-8)
nsubj(checks-10, normalization-9)
advcl(Remove-5, checks-10)
compound(errors-12, report-11)
dobj(checks-10, errors-12)
case(exceptions-15, instead-13)
mwe(instead-13, of-14)
nmod:instead_of(errors-12, exceptions-15)
File Name: ./src/com/google/javascript/jscomp/PhaseOptimizer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Should we add constant removing to the unit test?
Specificity: 0.802445
Content Structure:
root(ROOT-0, johnlenz-2)
aux(add-7, Should-5)
nsubj(add-7, we-6)
dep(johnlenz-2, add-7)
xcomp(add-7, constant-8)
xcomp(add-7, removing-9)
case(test-13, to-10)
det(test-13, the-11)
compound(test-13, unit-12)
nmod:to(removing-9, test-13)
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Should we allow internal references to be inlined?
An exported name can be replaced externally, any inlined instance
would not reflect this change.
To allow inlining we need to be able to distinguish between exports
that are used in a read-only fashion and those that can be replaced
by external definitions.
Specificity: 0.999887
Content Structure:
dep(replaced-19, johnlenz-2)
parataxis(replaced-19, Should-5)
nsubj(allow-7, we-6)
ccomp(Should-5, allow-7)
amod(references-9, internal-8)
dobj(allow-7, references-9)
nsubjpass:xsubj(inlined-12, references-9)
mark(inlined-12, to-10)
auxpass(inlined-12, be-11)
xcomp(allow-7, inlined-12)
det(name-16, An-14)
amod(name-16, exported-15)
nsubjpass(replaced-19, name-16)
aux(replaced-19, can-17)
auxpass(replaced-19, be-18)
root(ROOT-0, replaced-19)
advmod(reflect-27, externally-20)
det(instance-24, any-22)
amod(instance-24, inlined-23)
nsubj(reflect-27, instance-24)
aux(reflect-27, would-25)
neg(reflect-27, not-26)
ccomp(replaced-19, reflect-27)
det(change-29, this-28)
nsubj(need-35, change-29)
nsubj:xsubj(able-38, change-29)
mark(allow-32, To-31)
acl(change-29, allow-32)
xcomp(allow-32, inlining-33)
dobj(inlining-33, we-34)
ccomp(reflect-27, need-35)
mark(able-38, to-36)
cop(able-38, be-37)
xcomp(need-35, able-38)
mark(distinguish-40, to-39)
xcomp(able-38, distinguish-40)
case(exports-42, between-41)
nmod:between(distinguish-40, exports-42)
nsubjpass(used-45, exports-42)
ref(exports-42, that-43)
auxpass(used-45, are-44)
acl:relcl(exports-42, used-45)
case(fashion-49, in-46)
det(fashion-49, a-47)
amod(fashion-49, read-only-48)
nmod:in(used-45, fashion-49)
cc(fashion-49, and-50)
nmod:in(used-45, those-51)
conj:and(fashion-49, those-51)
nsubjpass(replaced-55, those-51)
ref(those-51, that-52)
aux(replaced-55, can-53)
auxpass(replaced-55, be-54)
acl:relcl(those-51, replaced-55)
case(definitions-58, by-56)
amod(definitions-58, external-57)
nmod:agent(replaced-55, definitions-58)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Should we be checking for constants on the
left-hand-side of the assignments and handling them as EXPRESSION?
Specificity: 0.963823
Content Structure:
root(ROOT-0, johnlenz-2)
aux(checking-8, Should-5)
nsubj(checking-8, we-6)
nsubj(handling-18, we-6)
aux(checking-8, be-7)
dep(johnlenz-2, checking-8)
case(constants-10, for-9)
nmod:for(checking-8, constants-10)
case(left-hand-side-13, on-11)
det(left-hand-side-13, the-12)
nmod:on(constants-10, left-hand-side-13)
case(assignments-16, of-14)
det(assignments-16, the-15)
nmod:of(left-hand-side-13, assignments-16)
cc(checking-8, and-17)
dep(johnlenz-2, handling-18)
conj:and(checking-8, handling-18)
dobj(handling-18, them-19)
case(EXPRESSION-21, as-20)
nmod:as(handling-18, EXPRESSION-21)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Should we just remove it from fns here?
Specificity: 0.784439
Content Structure:
root(ROOT-0, johnlenz-2)
aux(remove-8, Should-5)
nsubj(remove-8, we-6)
advmod(remove-8, just-7)
dep(johnlenz-2, remove-8)
dobj(remove-8, it-9)
case(fns-11, from-10)
nmod:from(remove-8, fns-11)
advmod(remove-8, here-12)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Simpler not to special case this,
and let it be optimized later.
Specificity: 0.86663
Content Structure:
dep(Simpler-5, johnlenz-2)
root(ROOT-0, Simpler-5)
neg(Simpler-5, not-6)
case(case-9, to-7)
amod(case-9, special-8)
nmod:to(not-6, case-9)
dobj(Simpler-5, this-10)
cc(Simpler-5, and-12)
conj:and(Simpler-5, let-13)
nsubjpass(optimized-16, it-14)
auxpass(optimized-16, be-15)
ccomp(let-13, optimized-16)
advmod(optimized-16, later-17)
File Name: ./src/com/google/javascript/jscomp/FunctionToBlockMutator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support .call signature changes.
Specificity: 0.71315
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Support-5)
amod(changes-9, call-7)
compound(changes-9, signature-8)
dep(Support-5, changes-9)
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support multiple definitions.
Specificity: 0.693333
Content Structure:
root(ROOT-0, johnlenz-2)
amod(definitions-7, Support-5)
amod(definitions-7, multiple-6)
dep(johnlenz-2, definitions-7)
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support multiple valid definitions.
Specificity: 0.709642
Content Structure:
root(ROOT-0, johnlenz-2)
amod(definitions-8, Support-5)
amod(definitions-8, multiple-6)
amod(definitions-8, valid-7)
dep(johnlenz-2, definitions-8)
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support multiple.
Specificity: 0.679414
Content Structure:
root(ROOT-0, johnlenz-2)
compound(multiple-6, Support-5)
dep(johnlenz-2, multiple-6)
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support name "groups" so that unrelated strings can
reuse strings.  For example, event-id can reuse the names used for logger
classes.
Specificity: 0.974886
Content Structure:
dep(Support-5, johnlenz-2)
root(ROOT-0, Support-5)
compound(groups-8, name-6)
dobj(Support-5, groups-8)
mark(reuse-15, so-10)
mwe(so-10, that-11)
amod(strings-13, unrelated-12)
nsubj(reuse-15, strings-13)
aux(reuse-15, can-14)
advcl(Support-5, reuse-15)
dobj(reuse-15, strings-16)
case(example-19, For-18)
nmod:for(reuse-23, example-19)
nsubj(reuse-23, event-id-21)
aux(reuse-23, can-22)
acl:relcl(strings-16, reuse-23)
det(names-25, the-24)
dobj(reuse-23, names-25)
acl(names-25, used-26)
case(classes-29, for-27)
compound(classes-29, logger-28)
nmod:for(used-26, classes-29)
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support object-literal property definitions.
Specificity: 0.691321
Content Structure:
root(ROOT-0, johnlenz-2)
amod(definitions-8, Support-5)
amod(definitions-8, object-literal-6)
compound(definitions-8, property-7)
dep(johnlenz-2, definitions-8)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support replace this with a value.
Specificity: 0.746678
Content Structure:
dep(replace-6, johnlenz-2)
aux(replace-6, Support-5)
root(ROOT-0, replace-6)
dobj(replace-6, this-7)
case(value-10, with-8)
det(value-10, a-9)
nmod:with(this-7, value-10)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Support this case.
Specificity: 0.69604
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Support-5)
det(case-7, this-6)
dep(Support-5, case-7)
File Name: ./test/com/google/javascript/jscomp/InlineSimpleMethodsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): The code generator wraps free calls with (0,...) to
prevent leaking "this", but the parser doesn't unfold it, making a
AST comparison fail.  For now do a string comparison to validate the
correct code is in fact generated.
The FREE call wrapping should be moved out of the code generator
and into a denormalizing pass.
Specificity: 0.999989
Content Structure:
nsubjpass(moved-60, johnlenz-2)
nsubjpass(moved-60', johnlenz-2)
det(code-6, The-5)
nmod:npmod(generator-7, code-6)
dep(johnlenz-2, generator-7)
case(calls-10, wraps-8)
amod(calls-10, free-9)
nmod:wraps(generator-7, calls-10)
acl(calls-10, with-11)
dep(calls-10, 0-13)
mark(prevent-18, to-17)
acl(johnlenz-2, prevent-18)
xcomp(prevent-18, leaking-19)
dobj(leaking-19, this-21)
cc(unfold-29, but-24)
det(parser-26, the-25)
nsubj(unfold-29, parser-26)
aux(unfold-29, does-27)
neg(unfold-29, n't-28)
parataxis(leaking-19, unfold-29)
dobj(unfold-29, it-30)
advcl(unfold-29, making-32)
det(comparison-35, a-33)
compound(comparison-35, AST-34)
nsubj(fail-36, comparison-35)
ccomp(making-32, fail-36)
dep(unfold-29, For-38)
advmod(do-40, now-39)
parataxis(unfold-29, do-40)
det(comparison-43, a-41)
compound(comparison-43, string-42)
dep(do-40, comparison-43)
mark(validate-45, to-44)
dep(comparison-43, validate-45)
det(code-48, the-46)
amod(code-48, correct-47)
nsubj(fact-51, code-48)
cop(fact-51, is-49)
case(fact-51, in-50)
ccomp(validate-45, fact-51)
acl(fact-51, generated-52)
det(call-56, The-54)
amod(call-56, FREE-55)
dep(do-40, call-56)
acl(call-56, wrapping-57)
aux(moved-60, should-58)
auxpass(moved-60, be-59)
root(ROOT-0, moved-60)
conj:and(moved-60, moved-60')
compound:prt(moved-60, out-61)
case(generator-65, of-62)
det(generator-65, the-63)
compound(generator-65, code-64)
nmod:of(moved-60, generator-65)
cc(moved-60, and-66)
case(pass-70, into-67)
det(pass-70, a-68)
amod(pass-70, denormalizing-69)
nmod:into(moved-60', pass-70)
File Name: ./test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): The do-while can be turned into a label with
named breaks and the label optimized away (maybe).
Specificity: 0.956536
Content Structure:
root(ROOT-0, johnlenz-2)
det(do-while-6, The-5)
nsubjpass(turned-9, do-while-6)
aux(turned-9, can-7)
auxpass(turned-9, be-8)
dep(johnlenz-2, turned-9)
case(label-12, into-10)
det(label-12, a-11)
nmod:into(turned-9, label-12)
case(breaks-15, with-13)
amod(breaks-15, named-14)
nmod:with(turned-9, breaks-15)
cc(breaks-15, and-16)
det(label-18, the-17)
nmod:with(turned-9, label-18)
conj:and(breaks-15, label-18)
acl(label-18, optimized-19)
advmod(optimized-19, away-20)
dep(optimized-19, maybe-22)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): The extractMultilineTextualBlock method
and friends look directly at the stream, regardless of
last token read, so we don't want to read the first
"STRING" out of the stream.
Specificity: 0.996106
Content Structure:
root(ROOT-0, johnlenz-2)
det(method-7, The-5)
compound(method-7, extractMultilineTextualBlock-6)
nsubj(look-10, method-7)
cc(method-7, and-8)
conj:and(method-7, friends-9)
nsubj(look-10, friends-9)
dep(johnlenz-2, look-10)
advmod(look-10, directly-11)
case(stream-14, at-12)
det(stream-14, the-13)
nmod:at(look-10, stream-14)
case(read-20, regardless-16)
mwe(regardless-16, of-17)
amod(read-20, last-18)
amod(read-20, token-19)
nmod:regardless_of(look-10, read-20)
dep(look-10, so-22)
nsubj(want-26, we-23)
nsubj:xsubj(read-28, we-23)
aux(want-26, do-24)
neg(want-26, n't-25)
parataxis(look-10, want-26)
mark(read-28, to-27)
xcomp(want-26, read-28)
det(STRING-32, the-29)
amod(STRING-32, first-30)
dobj(read-28, STRING-32)
compound:prt(read-28, out-34)
case(stream-37, of-35)
det(stream-37, the-36)
nmod:of(read-28, stream-37)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): There are two definitions of "foo" here, ignore the
one that can't be called.
Specificity: 0.917328
Content Structure:
root(ROOT-0, johnlenz-2)
expl(are-6, There-5)
dep(johnlenz-2, are-6)
nummod(definitions-8, two-7)
nsubj(are-6, definitions-8)
case(foo-11, of-9)
nmod:of(definitions-8, foo-11)
advmod(are-6, here-13)
dep(are-6, ignore-15)
det(one-17, the-16)
dobj(ignore-15, one-17)
nsubjpass(called-22, one-17)
ref(one-17, that-18)
aux(called-22, ca-19)
neg(called-22, n't-20)
auxpass(called-22, be-21)
acl:relcl(one-17, called-22)
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This function takes too many parameter, without
context.  Modify the API to take a structure describing the function.
Specificity: 0.961903
Content Structure:
root(ROOT-0, johnlenz-2)
det(function-6, This-5)
nsubj(takes-7, function-6)
dep(johnlenz-2, takes-7)
advmod(parameter-10, too-8)
amod(parameter-10, many-9)
dobj(takes-7, parameter-10)
case(Modify-15, without-12)
compound(Modify-15, context-13)
nmod:without(takes-7, Modify-15)
det(API-17, the-16)
dobj(takes-7, API-17)
mark(take-19, to-18)
acl(API-17, take-19)
det(structure-21, a-20)
dobj(take-19, structure-21)
acl(structure-21, describing-22)
det(function-24, the-23)
dobj(describing-22, function-24)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This is not currently used by the function inliner,
as moving the call out of the expression before the actual function call
causes additional variables to be introduced.  As the variable
inliner is improved, this might be a viable option.
Specificity: 0.999144
Content Structure:
nsubjpass(improved-40, johnlenz-2)
nsubjpass(used-9, This-5)
auxpass(used-9, is-6)
neg(used-9, not-7)
advmod(used-9, currently-8)
dep(johnlenz-2, used-9)
case(inliner-13, by-10)
det(inliner-13, the-11)
compound(inliner-13, function-12)
nmod:agent(used-9, inliner-13)
mark(moving-16, as-15)
advcl(used-9, moving-16)
det(call-18, the-17)
dobj(moving-16, call-18)
case(expression-22, out-19)
mwe(out-19, of-20)
det(expression-22, the-21)
nmod:out_of(call-18, expression-22)
mark(causes-28, before-23)
det(call-27, the-24)
amod(call-27, actual-25)
compound(call-27, function-26)
nsubj(causes-28, call-27)
advcl(moving-16, causes-28)
amod(variables-30, additional-29)
dobj(causes-28, variables-30)
nsubjpass:xsubj(introduced-33, variables-30)
mark(introduced-33, to-31)
auxpass(introduced-33, be-32)
xcomp(causes-28, introduced-33)
case(inliner-38, As-35)
det(inliner-38, the-36)
amod(inliner-38, variable-37)
nmod:as(improved-40, inliner-38)
auxpass(improved-40, is-39)
ccomp(option-47, improved-40)
nsubj(option-47, this-42)
aux(option-47, might-43)
cop(option-47, be-44)
det(option-47, a-45)
amod(option-47, viable-46)
root(ROOT-0, option-47)
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This is overkill as named breaks may refer to outer
loops or labels, and any break my refer to an inner loop.
More generally, this check may be more expensive than we like.
Specificity: 0.996979
Content Structure:
nsubj(More-29, johnlenz-2)
nsubj(overkill-7, This-5)
cop(overkill-7, is-6)
dep(johnlenz-2, overkill-7)
mark(refer-12, as-8)
amod(breaks-10, named-9)
nsubj(refer-12, breaks-10)
aux(refer-12, may-11)
advcl(overkill-7, refer-12)
case(loops-15, to-13)
amod(loops-15, outer-14)
nmod:to(refer-12, loops-15)
cc(loops-15, or-16)
nmod:to(refer-12, labels-17)
conj:or(loops-15, labels-17)
cc(overkill-7, and-19)
nsubj(break-21, any-20)
dep(johnlenz-2, break-21)
conj:and(overkill-7, break-21)
nmod:poss(refer-23, my-22)
dobj(break-21, refer-23)
case(loop-27, to-24)
det(loop-27, an-25)
amod(loop-27, inner-26)
nmod:to(break-21, loop-27)
ccomp(expensive-37, More-29)
advmod(More-29, generally-30)
det(check-33, this-32)
nsubj(expensive-37, check-33)
aux(expensive-37, may-34)
cop(expensive-37, be-35)
advmod(expensive-37, more-36)
root(ROOT-0, expensive-37)
mark(like-40, than-38)
nsubj(like-40, we-39)
ccomp(expensive-37, like-40)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This leaks scope object for scopes removed from the AST.
Soon we will track removed function nodes use that to remove scopes.
Specificity: 0.977351
Content Structure:
dep(removed-20, johnlenz-2)
det(object-8, This-5)
compound(object-8, leaks-6)
compound(object-8, scope-7)
nsubj(removed-20, object-8)
case(scopes-10, for-9)
nmod:for(object-8, scopes-10)
acl(scopes-10, removed-11)
case(AST-14, from-12)
det(AST-14, the-13)
nmod:from(removed-11, AST-14)
advmod(track-19, Soon-16)
nsubj(track-19, we-17)
aux(track-19, will-18)
advcl(removed-11, track-19)
root(ROOT-0, removed-20)
compound(nodes-22, function-21)
nsubj(use-23, nodes-22)
ccomp(removed-20, use-23)
mark(remove-26, that-24)
mark(remove-26, to-25)
ccomp(use-23, remove-26)
dobj(remove-26, scopes-27)
File Name: /src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-07T08:44:17-07:00
Time Of Deletion: null
Creation Commit Hash: e6f3992269282757b47af7606397ff01a8a29993
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This might be overly conservative but doing otherwise is more complicated
so let see if we can get away with this.
Specificity: 0.960276
Content Structure:
dep(see-18, johnlenz-2)
nsubj(see-18, This-5)
aux(conservative-9, might-6)
cop(conservative-9, be-7)
advmod(conservative-9, overly-8)
acl:relcl(This-5, conservative-9)
cc(complicated-15, but-10)
csubj(complicated-15, doing-11)
advmod(doing-11, otherwise-12)
cop(complicated-15, is-13)
advmod(complicated-15, more-14)
ccomp(conservative-9, complicated-15)
advmod(complicated-15, so-16)
dep(so-16, let-17)
root(ROOT-0, see-18)
mark(get-22, if-19)
nsubj(get-22, we-20)
aux(get-22, can-21)
advcl(see-18, get-22)
compound:prt(get-22, away-23)
case(this-25, with-24)
nmod:with(get-22, this-25)
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): This would be better handled by control-flow sensitive
constant propagation. As the other case that I want to handle is:
i=0; for(;i<0;i++){}
as right now nothing facilitates removing a loop like that.
This is here simply to remove the cruft left behind goog.userAgent and
similar cases.
Specificity: 0.999984
Content Structure:
nsubj(is-56, johnlenz-2)
nsubj:xsubj(remove-60, johnlenz-2)
nsubjpass(handled-9, This-5)
aux(handled-9, would-6)
auxpass(handled-9, be-7)
advmod(handled-9, better-8)
dep(johnlenz-2, handled-9)
case(propagation-14, by-10)
amod(propagation-14, control-flow-11)
amod(propagation-14, sensitive-12)
amod(propagation-14, constant-13)
nmod:agent(handled-9, propagation-14)
mark(facilitates-48, As-16)
det(case-19, the-17)
amod(case-19, other-18)
nsubj(facilitates-48, case-19)
mark(want-22, that-20)
nsubj(want-22, I-21)
nsubj:xsubj(handle-24, I-21)
dep(case-19, want-22)
mark(handle-24, to-23)
xcomp(want-22, handle-24)
cop(facilitates-48, is-25)
compound(0-29, i-27)
compound(0-29, =-28)
nsubj(facilitates-48, 0-29)
case(-LCB--42, for-31)
compound(i-34, ;-33)
dep(-LCB--42, i-34)
dep(i-34, 0-36)
dep(0-36, i-38)
dep(i-34, +-40)
nmod:for(0-29, -LCB--42)
advmod(right-45, as-44)
advmod(facilitates-48, right-45)
advmod(nothing-47, now-46)
advcl(right-45, nothing-47)
parataxis(is-56, facilitates-48)
xcomp(facilitates-48, removing-49)
det(loop-51, a-50)
dobj(removing-49, loop-51)
case(that-53, like-52)
nmod:like(removing-49, that-53)
nsubj(is-56, This-55)
nsubj:xsubj(remove-60, This-55)
root(ROOT-0, is-56)
advmod(is-56, here-57)
advmod(is-56, simply-58)
mark(remove-60, to-59)
xcomp(is-56, remove-60)
det(cruft-62, the-61)
dobj(remove-60, cruft-62)
acl(cruft-62, left-63)
case(cases-68, behind-64)
amod(cases-68, goog.userAgent-65)
cc(goog.userAgent-65, and-66)
conj:and(goog.userAgent-65, similar-67)
amod(cases-68, similar-67)
nmod:behind(left-63, cases-68)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Try to merge this with the ScopeCreator.
Specificity: 0.806037
Content Structure:
dep(Try-5, johnlenz-2)
root(ROOT-0, Try-5)
mark(merge-7, to-6)
xcomp(Try-5, merge-7)
dobj(merge-7, this-8)
case(ScopeCreator-11, with-9)
det(ScopeCreator-11, the-10)
nmod:with(this-8, ScopeCreator-11)
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Update this and "gatherRawExports" to latest()
}
@@ -2959,7 +2995,7 @@ public final class DefaultPassConfig extends PassConfig {

@Override
protected FeatureSet featureSet() {
}

Specificity: 0.996411
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Update-5)
dep(Update-5, this-6)
cc(Update-5, and-7)
dep(johnlenz-2, gatherRawExports-9)
conj:and(Update-5, gatherRawExports-9)
case(latest-12, to-11)
nmod:to(gatherRawExports-9, latest-12)
appos(latest-12, -RRB--14)
dep(-2959,7-17, @@-16)
dep(johnlenz-2, -2959,7-17)
dep(-2959,7-17, +2995,7-18)
amod(PassConfig-25, public-20)
amod(PassConfig-25, final-21)
compound(PassConfig-25, class-22)
compound(PassConfig-25, DefaultPassConfig-23)
compound(PassConfig-25, extends-24)
dep(+2995,7-18, PassConfig-25)
amod(featureSet-30, @Override-27)
amod(featureSet-30, protected-28)
compound(featureSet-30, FeatureSet-29)
dep(PassConfig-25, featureSet-30)
compound(-LCB--33, -RRB--32)
appos(PassConfig-25, -LCB--33)
File Name: /src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-30T08:36:50-07:00
Time Of Deletion: null
Creation Commit Hash: 0c02a11cc88639a68b277a3f7466f27b5e9fb31a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Update this and normalize to latest()
Specificity: 0.846944
Content Structure:
compound(-RRB--3, johnlenz-2)
root(ROOT-0, -RRB--3)
dep(-RRB--3, Update-5)
amod(Update-5, this-6)
cc(this-6, and-7)
amod(Update-5, normalize-8)
conj:and(this-6, normalize-8)
case(-LRB--11, to-9)
amod(-LRB--11, latest-10)
nmod:to(Update-5, -LRB--11)
File Name: /src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-30T08:36:50-07:00
Time Of Deletion: null
Creation Commit Hash: 0c02a11cc88639a68b277a3f7466f27b5e9fb31a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Update this if we start supporting inlining
other functions that reference this.
The only functions that reference this that are currently inlined
are those that are called via ".call" with an explicit "this".
callCost += 5 + 5;  // ".call" + "this,"
Specificity: 0.999899
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, Update-5)
dep(Update-5, this-6)
mark(start-9, if-7)
nsubj(start-9, we-8)
acl:relcl(this-6, start-9)
xcomp(start-9, supporting-10)
advcl(supporting-10, inlining-11)
amod(functions-13, other-12)
dobj(inlining-11, functions-13)
mark(reference-15, that-14)
dep(functions-13, reference-15)
dep(reference-15, this-16)
det(functions-20, The-18)
amod(functions-20, only-19)
dep(Update-5, functions-20)
nsubj(reference-22, functions-20)
ref(functions-20, that-21)
acl:relcl(functions-20, reference-22)
dobj(reference-22, this-23)
nsubjpass(inlined-27, this-23)
ref(this-23, that-24)
auxpass(inlined-27, are-25)
advmod(inlined-27, currently-26)
acl:relcl(this-23, inlined-27)
cop(those-29, are-28)
ccomp(inlined-27, those-29)
nsubjpass(called-32, those-29)
ref(those-29, that-30)
auxpass(called-32, are-31)
acl:relcl(those-29, called-32)
nmod(called-32, via-33)
dep(this-23, call-36)
case(explicit-40, with-38)
det(explicit-40, an-39)
nmod:with(call-36, explicit-40)
dep(explicit-40, this-42)
amod(+-46, callCost-45)
dep(this-23, +-46)
dep(5-50, =-47)
nummod(5-50, 5-48)
amod(5-50, +-49)
acl:relcl(+-46, 5-50)
dep(this-23, /-53)
dep(/-53, call-56)
acl(/-53, +-58)
xcomp(+-58, this-60)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): Validate get and set function declarations are valid
as is the functions can have "extraneous" bits.
Specificity: 0.923408
Content Structure:
dep(valid-12, johnlenz-2)
nsubj(valid-12, Validate-5)
dep(Validate-5, get-6)
cc(get-6, and-7)
dep(Validate-5, set-8)
conj:and(get-6, set-8)
compound(declarations-10, function-9)
dobj(get-6, declarations-10)
cop(valid-12, are-11)
root(ROOT-0, valid-12)
mark(functions-16, as-13)
cop(functions-16, is-14)
det(functions-16, the-15)
dep(valid-12, functions-16)
aux(have-18, can-17)
acl:relcl(functions-16, have-18)
amod(bits-22, extraneous-20)
dobj(have-18, bits-22)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): We no longer make this check, but we should.
Specificity: 0.812746
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(make-8, We-5)
neg(longer-7, no-6)
advmod(make-8, longer-7)
dep(johnlenz-2, make-8)
det(check-10, this-9)
dobj(make-8, check-10)
cc(make-8, but-12)
nsubj(should-14, we-13)
dep(johnlenz-2, should-14)
conj:but(make-8, should-14)
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): We really want a constant marking pass.
The value "goo" should be constant, but it isn't known to be so.
Specificity: 0.975247
Content Structure:
nsubj(constant-20, johnlenz-2)
nsubj(want-7, We-5)
advmod(want-7, really-6)
dep(johnlenz-2, want-7)
det(pass-11, a-8)
amod(pass-11, constant-9)
amod(pass-11, marking-10)
dobj(want-7, pass-11)
det(goo-16, The-13)
compound(goo-16, value-14)
nsubj(constant-20, goo-16)
aux(constant-20, should-18)
cop(constant-20, be-19)
root(ROOT-0, constant-20)
cc(constant-20, but-22)
nsubjpass(known-26, it-23)
nsubj:xsubj(be-28, it-23)
auxpass(known-26, is-24)
neg(known-26, n't-25)
conj:but(constant-20, known-26)
mark(be-28, to-27)
xcomp(known-26, be-28)
advmod(be-28, so-29)
File Name: ./test/com/google/javascript/jscomp/ExpressionDecomposerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): We shouldn't spend time checking template whose
types whose definitions aren't included (NoResolvedType). Alternately
we should treat them as "unknown" and perform loose matches.
Specificity: 0.994002
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(spend-8, We-5)
nsubj(matches-35, We-5)
aux(spend-8, should-6)
neg(spend-8, n't-7)
dep(johnlenz-2, spend-8)
compound(template-11, time-9)
amod(template-11, checking-10)
dobj(spend-8, template-11)
nmod:poss(types-13, template-11)
ref(template-11, whose-12)
nsubj(Alternately-23, types-13)
nmod:poss(definitions-15, whose-14)
nsubjpass(included-18, definitions-15)
auxpass(included-18, are-16)
neg(included-18, n't-17)
parataxis(Alternately-23, included-18)
dep(included-18, NoResolvedType-20)
acl:relcl(template-11, Alternately-23)
nsubj(treat-26, we-24)
aux(treat-26, should-25)
ccomp(Alternately-23, treat-26)
dobj(treat-26, them-27)
case(unknown-30, as-28)
advcl(treat-26, unknown-30)
cc(spend-8, and-32)
dep(matches-35, perform-33)
xcomp(matches-35, loose-34)
dep(johnlenz-2, matches-35)
conj:and(spend-8, matches-35)
File Name: ./src/com/google/javascript/jscomp/TemplateAstMatcher.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add a unit test for templated "this" values.
Specificity: 0.766404
Content Structure:
dep(add-5, johnlenz-2)
root(ROOT-0, add-5)
det(test-8, a-6)
compound(test-8, unit-7)
dobj(add-5, test-8)
mark(templated-10, for-9)
advcl(add-5, templated-10)
nsubj(values-14, this-12)
ccomp(templated-10, values-14)
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add support for checking "package" properties when checking an entire
library.
Specificity: 0.831932
Content Structure:
dep(add-5, johnlenz-2)
root(ROOT-0, add-5)
dobj(add-5, support-6)
mark(checking-8, for-7)
advcl(add-5, checking-8)
compound(properties-12, package-10)
dobj(checking-8, properties-12)
advmod(checking-14, when-13)
acl:relcl(properties-12, checking-14)
det(library-17, an-15)
amod(library-17, entire-16)
dobj(checking-14, library-17)
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add support for checking protected properties in final classes
Specificity: 0.77335
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, add-5)
dobj(add-5, support-6)
mark(checking-8, for-7)
advcl(add-5, checking-8)
amod(properties-10, protected-9)
dobj(checking-8, properties-10)
case(classes-13, in-11)
amod(classes-13, final-12)
nmod:in(checking-8, classes-13)
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add support for multiple passes in getProcessor so that we can
check the AST marking after each pass runs.
Verify that changes to the AST are properly marked on the AST.
Specificity: 0.996407
Content Structure:
dep(add-5, johnlenz-2)
root(ROOT-0, add-5)
dobj(add-5, support-6)
case(passes-9, for-7)
amod(passes-9, multiple-8)
nmod:for(add-5, passes-9)
case(getProcessor-11, in-10)
nmod:in(passes-9, getProcessor-11)
mark(check-16, so-12)
mwe(so-12, that-13)
nsubj(check-16, we-14)
aux(check-16, can-15)
advcl(add-5, check-16)
det(AST-18, the-17)
nsubj(marking-19, AST-18)
dep(check-16, marking-19)
mark(runs-23, after-20)
det(pass-22, each-21)
nsubj(runs-23, pass-22)
advcl(marking-19, runs-23)
advmod(marked-33, Verify-25)
mark(marked-33, that-26)
nsubjpass(marked-33, changes-27)
case(AST-30, to-28)
det(AST-30, the-29)
nmod:to(changes-27, AST-30)
auxpass(marked-33, are-31)
advmod(marked-33, properly-32)
dep(check-16, marked-33)
case(AST-36, on-34)
det(AST-36, the-35)
nmod:on(marked-33, AST-36)
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add support private by convention property definitions without JSDoc.
Specificity: 0.83319
Content Structure:
dep(add-5, johnlenz-2)
root(ROOT-0, add-5)
xcomp(add-5, support-6)
xcomp(support-6, private-7)
case(definitions-11, by-8)
compound(definitions-11, convention-9)
compound(definitions-11, property-10)
nmod:by(private-7, definitions-11)
case(JSDoc-13, without-12)
nmod:without(support-6, JSDoc-13)
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): add this to the coding convention
so we can remove goog.reflect.sinkValue as well.
Specificity: 0.858361
Content Structure:
dep(add-5, johnlenz-2)
root(ROOT-0, add-5)
dobj(add-5, this-6)
case(convention-10, to-7)
det(convention-10, the-8)
amod(convention-10, coding-9)
nmod:to(add-5, convention-10)
mark(remove-14, so-11)
nsubj(remove-14, we-12)
aux(remove-14, can-13)
advcl(add-5, remove-14)
dobj(remove-14, goog.reflect.sinkValue-15)
advmod(remove-14, as-16)
mwe(as-16, well-17)
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): additional validation here.
Specificity: 0.6642
Content Structure:
root(ROOT-0, johnlenz-2)
amod(validation-6, additional-5)
dep(johnlenz-2, validation-6)
advmod(validation-6, here-7)
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): allow template types in @type function expressions
Specificity: 0.720972
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, allow-5)
amod(types-7, template-6)
dobj(allow-5, types-7)
case(expressions-11, in-8)
amod(expressions-11, @type-9)
compound(expressions-11, function-10)
nmod:in(allow-5, expressions-11)
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(johnlenz): break global scope into a series of merged script declarations.
Specificity: 0.804049
Content Structure:
dep(break-5, johnlenz-2)
root(ROOT-0, break-5)
amod(scope-7, global-6)
dobj(break-5, scope-7)
case(series-10, into-8)
det(series-10, a-9)
nmod:into(break-5, series-10)
case(declarations-14, of-11)
amod(declarations-14, merged-12)
compound(declarations-14, script-13)
nmod:of(series-10, declarations-14)
File Name: /src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-07T08:44:17-07:00
Time Of Deletion: 2017-06-16T09:41:37-07:00
Creation Commit Hash: e6f3992269282757b47af7606397ff01a8a29993
Deletion Commit Hash: 5af3444c9b0509bd3864c299701c81af25ca0828
Time To Complete: P9D; PT57M20S

Type: Incomplete
Content:
(johnlenz): change this to reject null
Specificity: 0.700881
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, change-5)
dobj(change-5, this-6)
nsubj:xsubj(reject-8, this-6)
mark(reject-8, to-7)
xcomp(change-5, reject-8)
xcomp(reject-8, null-9)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-09T08:58:11-07:00
Time Of Deletion: null
Creation Commit Hash: 6954648993dabcbbad355aea1bb28615af8924f0
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): consider adding an extern annotation for this.
Specificity: 0.742706
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, adding-6)
det(annotation-9, an-7)
compound(annotation-9, extern-8)
dobj(adding-6, annotation-9)
case(this-11, for-10)
nmod:for(adding-6, this-11)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): consider doing this as a normalization.
Specificity: 0.722807
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, doing-6)
dobj(doing-6, this-7)
case(normalization-10, as-8)
det(normalization-10, a-9)
nmod:as(doing-6, normalization-10)
File Name: ./src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): consider introducing a CAST node to the AST (or
perhaps a parentheses node).
Specificity: 0.957618
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, introducing-6)
det(node-9, a-7)
amod(node-9, CAST-8)
dobj(introducing-6, node-9)
case(AST-12, to-10)
det(AST-12, the-11)
nmod:to(introducing-6, AST-12)
cc(node-18, or-14)
dep(node-18, perhaps-15)
det(node-18, a-16)
amod(node-18, parentheses-17)
appos(AST-12, node-18)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(johnlenz): consider merging Es6SyntacticScopeCreator with
Specificity: 0.801464
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, consider-5)
xcomp(consider-5, merging-6)
dobj(merging-6, Es6SyntacticScopeCreator-7)
nmod(merging-6, with-8)
File Name: /src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-07T08:44:17-07:00
Time Of Deletion: 2017-06-16T09:41:37-07:00
Creation Commit Hash: e6f3992269282757b47af7606397ff01a8a29993
Deletion Commit Hash: 5af3444c9b0509bd3864c299701c81af25ca0828
Time To Complete: P9D; PT57M20S

Type: Incomplete
Content:
(johnlenz): consider picking up new aliases at the end
of the pass instead of immediately like we do for global
inlines.
Specificity: 0.949841
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, picking-6)
compound:prt(picking-6, up-7)
amod(aliases-9, new-8)
dobj(picking-6, aliases-9)
case(end-12, at-10)
det(end-12, the-11)
nmod:at(picking-6, end-12)
case(pass-15, of-13)
det(pass-15, the-14)
nmod:of(end-12, pass-15)
case(immediately-18, instead-16)
mwe(instead-16, of-17)
advcl(picking-6, immediately-18)
mark(do-21, like-19)
nsubj(do-21, we-20)
advcl(picking-6, do-21)
case(inlines-24, for-22)
amod(inlines-24, global-23)
nmod:for(do-21, inlines-24)
File Name: ./src/com/google/javascript/jscomp/AggressiveInlineAliases.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): consider removing the result length check.
length of the left and right value plus 1 byte for the operator.
Specificity: 0.947603
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, removing-6)
det(check-10, the-7)
compound(check-10, result-8)
compound(check-10, length-9)
dobj(removing-6, check-10)
dep(check-10, length-12)
case(value-18, of-13)
det(value-18, the-14)
amod(value-18, left-15)
cc(left-15, and-16)
conj:and(left-15, right-17)
amod(value-18, right-17)
nmod:of(length-12, value-18)
case(byte-21, plus-19)
nummod(byte-21, 1-20)
nmod:plus(value-18, byte-21)
case(operator-24, for-22)
det(operator-24, the-23)
nmod:for(check-10, operator-24)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): consider sharing some code with trySimpleUnusedResult.
Specificity: 0.788672
Content Structure:
dep(consider-5, johnlenz-2)
root(ROOT-0, consider-5)
xcomp(consider-5, sharing-6)
det(code-8, some-7)
dobj(sharing-6, code-8)
case(trySimpleUnusedResult-10, with-9)
nmod:with(sharing-6, trySimpleUnusedResult-10)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): convert these to integers.
Specificity: 0.684521
Content Structure:
dep(convert-5, johnlenz-2)
root(ROOT-0, convert-5)
dobj(convert-5, these-6)
case(integers-8, to-7)
nmod:to(convert-5, integers-8)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): create a useful parameter list
Specificity: 0.700002
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, create-5)
det(list-9, a-6)
amod(list-9, useful-7)
compound(list-9, parameter-8)
dobj(create-5, list-9)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): determine if MODULE_BODY is useful here.
Specificity: 0.908972
Content Structure:
dep(determine-5, johnlenz-2)
root(ROOT-0, determine-5)
mark(useful-9, if-6)
nsubj(useful-9, MODULE_BODY-7)
cop(useful-9, is-8)
advcl(determine-5, useful-9)
advmod(useful-9, here-10)
File Name: ./src/com/google/javascript/jscomp/ChangeVerifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): determine if it is necessary to
try to protect side-effect free statements as well.
Specificity: 0.871783
Content Structure:
dep(determine-5, johnlenz-2)
root(ROOT-0, determine-5)
mark(necessary-9, if-6)
nsubj(necessary-9, it-7)
nsubj:xsubj(try-11, it-7)
cop(necessary-9, is-8)
advcl(determine-5, necessary-9)
mark(try-11, to-10)
xcomp(necessary-9, try-11)
mark(protect-13, to-12)
xcomp(try-11, protect-13)
amod(statements-16, side-effect-14)
amod(statements-16, free-15)
dobj(protect-13, statements-16)
advmod(protect-13, as-17)
mwe(as-17, well-18)
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): determine if we can limit object literals in some
way.
Specificity: 0.805215
Content Structure:
dep(determine-5, johnlenz-2)
root(ROOT-0, determine-5)
mark(limit-9, if-6)
nsubj(limit-9, we-7)
aux(limit-9, can-8)
advcl(determine-5, limit-9)
compound(literals-11, object-10)
dobj(limit-9, literals-11)
case(way-14, in-12)
det(way-14, some-13)
nmod:in(limit-9, way-14)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): determine what this is actually removing. Candidates
include: EMPTY nodes, control structures without children
(removing infinite loops), empty try blocks.  What else?
Specificity: 0.993
Content Structure:
dep(include-13, johnlenz-2)
parataxis(include-13, determine-5)
dobj(removing-10, what-6)
nsubj(removing-10, this-7)
aux(removing-10, is-8)
advmod(removing-10, actually-9)
ccomp(determine-5, removing-10)
nsubj(include-13, Candidates-12)
root(ROOT-0, include-13)
amod(nodes-16, EMPTY-15)
dobj(include-13, nodes-16)
appos(nodes-16, control-18)
dobj(control-18, structures-19)
case(children-21, without-20)
nmod:without(control-18, children-21)
parataxis(control-18, removing-23)
amod(loops-25, infinite-24)
dobj(removing-23, loops-25)
advmod(try-29, empty-28)
dep(control-18, try-29)
dobj(try-29, blocks-30)
dep(control-18, What-32)
advmod(What-32, else-33)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): determine why we are creating TemplatizedTypes for
types with no type arguments.
Specificity: 0.866804
Content Structure:
dep(determine-5, johnlenz-2)
root(ROOT-0, determine-5)
advmod(creating-9, why-6)
nsubj(creating-9, we-7)
aux(creating-9, are-8)
advcl(determine-5, creating-9)
dobj(creating-9, TemplatizedTypes-10)
case(types-12, for-11)
nmod:for(TemplatizedTypes-10, types-12)
case(arguments-16, with-13)
neg(arguments-16, no-14)
compound(arguments-16, type-15)
nmod:with(types-12, arguments-16)
File Name: /src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-07-11T15:35:46-07:00
Time Of Deletion: null
Creation Commit Hash: 1f80a2f64a19f0e62ba13ed00185a512fb037b05
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): do this more efficiently.
Specificity: 0.684734
Content Structure:
dep(do-5, johnlenz-2)
root(ROOT-0, do-5)
dobj(do-5, this-6)
advmod(efficiently-8, more-7)
advmod(do-5, efficiently-8)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LineNumberTable.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): don't work on detached nodes
Specificity: 0.704254
Content Structure:
root(ROOT-0, johnlenz-2)
aux(work-7, do-5)
neg(work-7, n't-6)
dep(johnlenz-2, work-7)
case(nodes-10, on-8)
amod(nodes-10, detached-9)
nmod:on(work-7, nodes-10)
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): enable this for most test cases.
Currently, this invalidates test for while-loops, for-loop
initializers, and other naming.  However, a set of code
(Closure primitive rewrites, etc) runs before the Normalize pass,
so this can't be force on everywhere.
Specificity: 0.999723
Content Structure:
dep(runs-40, johnlenz-2)
parataxis(runs-40, enable-5)
dobj(enable-5, this-6)
case(cases-10, for-7)
amod(cases-10, most-8)
compound(cases-10, test-9)
nmod:for(this-6, cases-10)
advmod(runs-40, Currently-12)
det(test-16, this-14)
amod(test-16, invalidates-15)
nsubj(runs-40, test-16)
case(initializers-21, for-17)
amod(initializers-21, while-loops-18)
amod(initializers-21, for-loop-20)
nmod:for(test-16, initializers-21)
cc(other-24, and-23)
dep(runs-40, other-24)
dep(other-24, naming-25)
dep(other-24, However-27)
det(set-30, a-29)
nsubj(runs-40, set-30)
case(code-32, of-31)
nmod:of(set-30, code-32)
amod(rewrites-36, Closure-34)
amod(rewrites-36, primitive-35)
dep(set-30, rewrites-36)
conj(rewrites-36, etc-38)
root(ROOT-0, runs-40)
case(pass-44, before-41)
det(pass-44, the-42)
compound(pass-44, Normalize-43)
nmod:before(runs-40, pass-44)
mark(force-51, so-46)
nsubj(force-51, this-47)
aux(force-51, ca-48)
neg(force-51, n't-49)
cop(force-51, be-50)
advcl(runs-40, force-51)
case(everywhere-53, on-52)
nmod:on(force-51, everywhere-53)
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): finish setting up the SCRIPT node
Specificity: 0.861138
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, finish-5)
acl(finish-5, setting-6)
compound:prt(setting-6, up-7)
det(node-10, the-8)
amod(node-10, SCRIPT-9)
dobj(setting-6, node-10)
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): fix the source location.
Specificity: 0.684948
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, fix-5)
det(location-8, the-6)
compound(location-8, source-7)
dep(fix-5, location-8)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): fix this so it is just another test case.
Specificity: 0.786061
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, fix-5)
dobj(fix-5, this-6)
mark(case-13, so-7)
nsubj(case-13, it-8)
cop(case-13, is-9)
advmod(case-13, just-10)
det(case-13, another-11)
compound(case-13, test-12)
advcl(fix-5, case-13)
File Name: ./test/com/google/javascript/jscomp/NormalizeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): fix this, "x" should remain or the reference to "x" should also be removed
as-is this pass has a prerequisite that the peephole passes have already remove
side-effect free statements like this.
Specificity: 0.996476
Content Structure:
dep(removed-23, johnlenz-2)
parataxis(removed-23, fix-5)
dobj(fix-5, this-6)
nsubj(remain-12, x-9)
aux(remain-12, should-11)
parataxis(removed-23, remain-12)
cc(remain-12, or-13)
det(reference-15, the-14)
conj:or(remain-12, reference-15)
parataxis(removed-23, reference-15)
nmod(reference-15, to-16)
nsubjpass(removed-23, x-18)
aux(removed-23, should-20)
advmod(removed-23, also-21)
auxpass(removed-23, be-22)
root(ROOT-0, removed-23)
dobj(removed-23, as-is-24)
det(pass-26, this-25)
nsubj(has-27, pass-26)
acl:relcl(as-is-24, has-27)
det(prerequisite-29, a-28)
dobj(has-27, prerequisite-29)
mark(have-34, that-30)
det(passes-33, the-31)
amod(passes-33, peephole-32)
nsubj(have-34, passes-33)
dep(prerequisite-29, have-34)
advmod(have-34, already-35)
ccomp(have-34, remove-36)
amod(statements-39, side-effect-37)
amod(statements-39, free-38)
dobj(remove-36, statements-39)
case(this-41, like-40)
nmod:like(remove-36, this-41)
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): fix this.
Specificity: 0.648456
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, fix-5)
dep(fix-5, this-6)
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): generally, the compiler should not be changing the options object
provided by the user.  This should be handled a different way.
Specificity: 0.968907
Content Structure:
root(ROOT-0, johnlenz-2)
advmod(changing-12, generally-5)
det(compiler-8, the-7)
nsubj(changing-12, compiler-8)
aux(changing-12, should-9)
neg(changing-12, not-10)
aux(changing-12, be-11)
dep(johnlenz-2, changing-12)
det(object-15, the-13)
compound(object-15, options-14)
dobj(changing-12, object-15)
acl(object-15, provided-16)
case(user-19, by-17)
det(user-19, the-18)
nmod:by(provided-16, user-19)
nsubjpass(handled-24, This-21)
aux(handled-24, should-22)
auxpass(handled-24, be-23)
acl:relcl(object-15, handled-24)
det(way-27, a-25)
amod(way-27, different-26)
dobj(handled-24, way-27)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): handle NEW calls that record their 'this'
in global scope and effectively return an alias.
Other non-local references are handled by this pass.
Specificity: 0.983417
Content Structure:
dep(handled-27, johnlenz-2)
parataxis(handled-27, handle-5)
amod(calls-7, NEW-6)
dobj(handle-5, calls-7)
mark(record-9, that-8)
ccomp(handle-5, record-9)
nsubj(this-12, their-10)
xcomp(record-9, this-12)
case(scope-16, in-14)
amod(scope-16, global-15)
nmod:in(this-12, scope-16)
cc(record-9, and-17)
advmod(return-19, effectively-18)
ccomp(handle-5, return-19)
conj:and(record-9, return-19)
det(alias-21, an-20)
dobj(return-19, alias-21)
amod(references-25, Other-23)
amod(references-25, non-local-24)
nsubjpass(handled-27, references-25)
auxpass(handled-27, are-26)
root(ROOT-0, handled-27)
case(pass-30, by-28)
det(pass-30, this-29)
nmod:agent(handled-27, pass-30)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): handle TRY/FINALLY
Specificity: 0.939965
Content Structure:
root(ROOT-0, johnlenz-2)
compound(TRY/FINALLY-6, handle-5)
dep(johnlenz-2, TRY/FINALLY-6)
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): handle non-namespace module identifiers aka 'foo/bar'
Specificity: 0.703837
Content Structure:
root(ROOT-0, johnlenz-2)
amod(identifiers-8, handle-5)
amod(identifiers-8, non-namespace-6)
compound(identifiers-8, module-7)
dep(johnlenz-2, identifiers-8)
compound(foo/bar-11, aka-9)
dep(identifiers-8, foo/bar-11)
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): handle these or remove parser support
Specificity: 0.717536
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, handle-5)
dobj(handle-5, these-6)
cc(handle-5, or-7)
dep(johnlenz-2, remove-8)
conj:or(handle-5, remove-8)
compound(support-10, parser-9)
dobj(remove-8, support-10)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): hash lookups are not free and
building scopes are already expensive
restructure the scope building to avoid this check.
Specificity: 0.940632
Content Structure:
root(ROOT-0, johnlenz-2)
compound(lookups-6, hash-5)
nsubj(free-9, lookups-6)
cop(free-9, are-7)
neg(free-9, not-8)
dep(johnlenz-2, free-9)
cc(free-9, and-10)
compound(scopes-12, building-11)
nsubj(expensive-15, scopes-12)
cop(expensive-15, are-13)
advmod(expensive-15, already-14)
dep(johnlenz-2, expensive-15)
conj:and(free-9, expensive-15)
dep(expensive-15, restructure-16)
det(building-19, the-17)
compound(building-19, scope-18)
dobj(restructure-16, building-19)
nsubj:xsubj(avoid-21, building-19)
mark(avoid-21, to-20)
xcomp(restructure-16, avoid-21)
det(check-23, this-22)
dobj(avoid-21, check-23)
File Name: ./src/com/google/javascript/jscomp/Es6SyntacticScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): hash lookups are not free and
building scopes are already expensive
restructure the scope building to avoid this check.
Specificity: 0.940632
Content Structure:
root(ROOT-0, johnlenz-2)
compound(lookups-6, hash-5)
nsubj(free-9, lookups-6)
cop(free-9, are-7)
neg(free-9, not-8)
dep(johnlenz-2, free-9)
cc(free-9, and-10)
compound(scopes-12, building-11)
nsubj(expensive-15, scopes-12)
cop(expensive-15, are-13)
advmod(expensive-15, already-14)
dep(johnlenz-2, expensive-15)
conj:and(free-9, expensive-15)
dep(expensive-15, restructure-16)
det(building-19, the-17)
compound(building-19, scope-18)
dobj(restructure-16, building-19)
nsubj:xsubj(avoid-21, building-19)
mark(avoid-21, to-20)
xcomp(restructure-16, avoid-21)
det(check-23, this-22)
dobj(avoid-21, check-23)
File Name: /src/com/google/javascript/jscomp/Es6SyntacticScopeCreator.java
Time Of Creation: 2017-06-05T08:30:01-07:00
Time Of Deletion: null
Creation Commit Hash: 2734cdfae8cb17ab5cf4a788bc3c953c34e32256
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): if this is called with a null scope we need to invalidate everything
but this isn't done, so we need to make this illegal or record this as having
invalidated everything.
Specificity: 0.994385
Content Structure:
root(ROOT-0, johnlenz-2)
mark(called-8, if-5)
nsubjpass(called-8, this-6)
auxpass(called-8, is-7)
advcl(need-14, called-8)
case(scope-12, with-9)
det(scope-12, a-10)
amod(scope-12, null-11)
nmod:with(called-8, scope-12)
nsubj(need-14, we-13)
nsubj:xsubj(invalidate-16, we-13)
dep(johnlenz-2, need-14)
mark(invalidate-16, to-15)
xcomp(need-14, invalidate-16)
dobj(invalidate-16, everything-17)
cc(need-14, but-18)
nsubjpass(done-22, this-19)
auxpass(done-22, is-20)
neg(done-22, n't-21)
dep(johnlenz-2, done-22)
conj:but(need-14, done-22)
dep(need-14, so-24)
nsubj(need-26, we-25)
nsubj:xsubj(make-28, we-25)
nsubj:xsubj(record-32, we-25)
parataxis(need-14, need-26)
mark(make-28, to-27)
xcomp(need-26, make-28)
det(illegal-30, this-29)
dobj(make-28, illegal-30)
cc(make-28, or-31)
xcomp(need-26, record-32)
conj:or(make-28, record-32)
dobj(record-32, this-33)
mark(invalidated-36, as-34)
aux(invalidated-36, having-35)
advcl(record-32, invalidated-36)
dobj(invalidated-36, everything-37)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): if we start tracking parameters individually
this should simply be a check for "arguments".
Specificity: 0.888352
Content Structure:
dep(check-16, johnlenz-2)
mark(start-7, if-5)
nsubj(start-7, we-6)
advcl(check-16, start-7)
xcomp(start-7, tracking-8)
dobj(tracking-8, parameters-9)
advmod(check-16, individually-10)
nsubj(check-16, this-11)
aux(check-16, should-12)
advmod(check-16, simply-13)
cop(check-16, be-14)
det(check-16, a-15)
root(ROOT-0, check-16)
case(arguments-19, for-17)
nmod:for(check-16, arguments-19)
File Name: ./src/com/google/javascript/rhino/JSDocInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): in ECMASCRIPT5/6 is a "mixed" mode and we should track the context
that we are in, if we want to support it.
Specificity: 0.985831
Content Structure:
root(ROOT-0, johnlenz-2)
advmod(mode-12, in-5)
nsubj(mode-12, ECMASCRIPT5/6-6)
cop(mode-12, is-7)
det(mode-12, a-8)
amod(mode-12, mixed-10)
dep(johnlenz-2, mode-12)
cc(mode-12, and-13)
nsubj(track-16, we-14)
aux(track-16, should-15)
dep(johnlenz-2, track-16)
conj:and(mode-12, track-16)
det(context-18, the-17)
dobj(track-16, context-18)
mark(in-22, that-19)
nsubj(in-22, we-20)
cop(in-22, are-21)
ccomp(track-16, in-22)
mark(want-26, if-24)
nsubj(want-26, we-25)
nsubj:xsubj(support-28, we-25)
advcl(in-22, want-26)
mark(support-28, to-27)
xcomp(want-26, support-28)
dobj(support-28, it-29)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): inputId maybe null if the FUNCTION node is detached
from the AST.
Is it meaningful to build a scope for detached FUNCTION node?
Specificity: 0.993547
Content Structure:
dep(inputId-5, johnlenz-2)
root(ROOT-0, inputId-5)
advmod(null-7, maybe-6)
nsubj(Is-18, null-7)
mark(detached-13, if-8)
det(node-11, the-9)
compound(node-11, FUNCTION-10)
nsubjpass(detached-13, node-11)
auxpass(detached-13, is-12)
dep(null-7, detached-13)
case(AST-16, from-14)
det(AST-16, the-15)
nmod:from(detached-13, AST-16)
ccomp(inputId-5, Is-18)
nsubj(meaningful-20, it-19)
nsubj:xsubj(build-22, it-19)
xcomp(Is-18, meaningful-20)
mark(build-22, to-21)
xcomp(meaningful-20, build-22)
det(scope-24, a-23)
dobj(build-22, scope-24)
case(node-28, for-25)
compound(node-28, detached-26)
compound(node-28, FUNCTION-27)
nmod:for(scope-24, node-28)
File Name: ./src/com/google/javascript/jscomp/Es6SyntacticScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): inputId maybe null if the FUNCTION node is detached
from the AST.
Is it meaningful to build a scope for detached FUNCTION node?
Specificity: 0.993547
Content Structure:
dep(inputId-5, johnlenz-2)
root(ROOT-0, inputId-5)
advmod(null-7, maybe-6)
nsubj(Is-18, null-7)
mark(detached-13, if-8)
det(node-11, the-9)
compound(node-11, FUNCTION-10)
nsubjpass(detached-13, node-11)
auxpass(detached-13, is-12)
dep(null-7, detached-13)
case(AST-16, from-14)
det(AST-16, the-15)
nmod:from(detached-13, AST-16)
ccomp(inputId-5, Is-18)
nsubj(meaningful-20, it-19)
nsubj:xsubj(build-22, it-19)
xcomp(Is-18, meaningful-20)
mark(build-22, to-21)
xcomp(meaningful-20, build-22)
det(scope-24, a-23)
dobj(build-22, scope-24)
case(node-28, for-25)
compound(node-28, detached-26)
compound(node-28, FUNCTION-27)
nmod:for(scope-24, node-28)
File Name: ./src/com/google/javascript/jscomp/SyntacticScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): is this valid across scopes?
Specificity: 0.704254
Content Structure:
dep(valid-7, johnlenz-2)
cop(valid-7, is-5)
det(valid-7, this-6)
root(ROOT-0, valid-7)
case(scopes-9, across-8)
nmod:across(valid-7, scopes-9)
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): link source script and the redeclaration script so
that the global scope is rebuilt in the presense of redeclarations.
Specificity: 0.940667
Content Structure:
dep(link-5, johnlenz-2)
root(ROOT-0, link-5)
compound(script-7, source-6)
dobj(link-5, script-7)
cc(script-7, and-8)
det(script-11, the-9)
compound(script-11, redeclaration-10)
dobj(link-5, script-11)
conj:and(script-7, script-11)
mark(rebuilt-18, so-12)
mwe(so-12, that-13)
det(scope-16, the-14)
amod(scope-16, global-15)
nsubjpass(rebuilt-18, scope-16)
auxpass(rebuilt-18, is-17)
advcl(link-5, rebuilt-18)
case(presense-21, in-19)
det(presense-21, the-20)
nmod:in(rebuilt-18, presense-21)
case(redeclarations-23, of-22)
nmod:of(presense-21, redeclarations-23)
File Name: /src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-16T09:41:37-07:00
Time Of Deletion: null
Creation Commit Hash: 5af3444c9b0509bd3864c299701c81af25ca0828
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): make "ignore" and "nothing" explicit.
Specificity: 0.699554
Content Structure:
dep(make-5, johnlenz-2)
root(ROOT-0, make-5)
conj:and(nothing-11, ignore-7)
amod(explicit-13, ignore-7)
cc(nothing-11, and-9)
amod(explicit-13, nothing-11)
dobj(make-5, explicit-13)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-09T08:58:11-07:00
Time Of Deletion: null
Creation Commit Hash: 6954648993dabcbbad355aea1bb28615af8924f0
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): make CollapseProperties safer around aliases of
functions and object literals.  Currently, this pass trades correctness
for code size.  We should able to create a safer compromise by teaching
the pass about goog.inherits and similiar calls.
Specificity: 0.997988
Content Structure:
dep(should-27, johnlenz-2)
parataxis(should-27, make-5)
nsubj(safer-7, CollapseProperties-6)
xcomp(make-5, safer-7)
case(aliases-9, around-8)
nmod:around(safer-7, aliases-9)
case(functions-11, of-10)
nmod:of(aliases-9, functions-11)
cc(functions-11, and-12)
compound(literals-14, object-13)
nmod:of(aliases-9, literals-14)
conj:and(functions-11, literals-14)
advmod(should-27, Currently-16)
det(pass-19, this-18)
dep(correctness-21, pass-19)
dep(pass-19, trades-20)
dep(should-27, correctness-21)
case(size-24, for-22)
compound(size-24, code-23)
nmod:for(correctness-21, size-24)
nsubj(should-27, We-26)
root(ROOT-0, should-27)
xcomp(should-27, able-28)
mark(create-30, to-29)
xcomp(able-28, create-30)
det(compromise-33, a-31)
amod(compromise-33, safer-32)
dobj(create-30, compromise-33)
mark(teaching-35, by-34)
advcl(create-30, teaching-35)
det(pass-37, the-36)
dobj(teaching-35, pass-37)
case(goog.inherits-39, about-38)
nmod:about(teaching-35, goog.inherits-39)
cc(goog.inherits-39, and-40)
amod(calls-42, similiar-41)
nmod:about(teaching-35, calls-42)
conj:and(goog.inherits-39, calls-42)
File Name: ./test/com/google/javascript/jscomp/CollapsePropertiesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): make global instrumentation an option
Specificity: 0.698468
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, make-5)
amod(instrumentation-7, global-6)
iobj(make-5, instrumentation-7)
det(option-9, an-8)
dobj(make-5, option-9)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): make this a abstract class with a private constructor
Specificity: 0.774749
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, make-5)
nsubj(class-9, this-6)
det(class-9, a-7)
amod(class-9, abstract-8)
xcomp(make-5, class-9)
case(constructor-13, with-10)
det(constructor-13, a-11)
amod(constructor-13, private-12)
nmod:with(class-9, constructor-13)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-09T08:58:11-07:00
Time Of Deletion: null
Creation Commit Hash: 6954648993dabcbbad355aea1bb28615af8924f0
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): make this part of the general graph interface.
Specificity: 0.764068
Content Structure:
dep(make-5, johnlenz-2)
root(ROOT-0, make-5)
det(part-7, this-6)
dobj(make-5, part-7)
case(interface-12, of-8)
det(interface-12, the-9)
amod(interface-12, general-10)
compound(interface-12, graph-11)
nmod:of(part-7, interface-12)
File Name: ./src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): maybe just report the first error, when not in IDE mode?
Specificity: 0.873508
Content Structure:
dep(report-7, johnlenz-2)
advmod(just-6, maybe-5)
advmod(report-7, just-6)
root(ROOT-0, report-7)
det(error-10, the-8)
amod(error-10, first-9)
dobj(report-7, error-10)
advmod(mode-16, when-12)
neg(mode-16, not-13)
case(mode-16, in-14)
compound(mode-16, IDE-15)
advcl(report-7, mode-16)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): maybe use ControlFlowAnalysis.mayThrowException?
Specificity: 0.794721
Content Structure:
dep(use-6, johnlenz-2)
advmod(use-6, maybe-5)
root(ROOT-0, use-6)
dobj(use-6, ControlFlowAnalysis.mayThrowException-7)
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): merge the useless "case 2"
Specificity: 0.684548
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, merge-5)
det(useless-7, the-6)
dep(case-9, useless-7)
xcomp(merge-5, case-9)
nummod(case-9, 2-10)
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): move test suite declaration into the
coding convention class.
Specificity: 0.783202
Content Structure:
dep(move-5, johnlenz-2)
root(ROOT-0, move-5)
compound(declaration-8, test-6)
compound(declaration-8, suite-7)
dobj(move-5, declaration-8)
case(class-13, into-9)
det(class-13, the-10)
amod(class-13, coding-11)
compound(class-13, convention-12)
nmod:into(move-5, class-13)
File Name: ./src/com/google/javascript/jscomp/ExportTestFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): normalize the AST so an AST comparison can be done.
As is, the expected AST does not match the actual correct result:
The AST matches "g.a()" with a FREE_CALL annotation, but this as
expected string would fail as it won't be mark as a free call.
"(0,g.a)()" matches the output, but not the resulting AST.
Specificity: 0.999998
Content Structure:
dep(is-17, johnlenz-2)
parataxis(is-17, normalize-5)
det(AST-7, the-6)
dobj(normalize-5, AST-7)
mark(done-14, so-8)
det(comparison-11, an-9)
compound(comparison-11, AST-10)
nsubjpass(done-14, comparison-11)
aux(done-14, can-12)
auxpass(done-14, be-13)
advcl(normalize-5, done-14)
nsubj(is-17, As-16)
root(ROOT-0, is-17)
det(AST-21, the-19)
amod(AST-21, expected-20)
nsubj(match-24, AST-21)
aux(match-24, does-22)
neg(match-24, not-23)
xcomp(is-17, match-24)
det(result-28, the-25)
amod(result-28, actual-26)
amod(result-28, correct-27)
dobj(match-24, result-28)
det(AST-31, The-30)
nsubj(matches-32, AST-31)
parataxis(match-24, matches-32)
compound(-RRB--36, g.a-34)
dobj(matches-32, -RRB--36)
case(annotation-41, with-38)
det(annotation-41, a-39)
compound(annotation-41, FREE_CALL-40)
nmod:with(-RRB--36, annotation-41)
cc(matches-32, but-43)
det(string-47, this-44)
advmod(expected-46, as-45)
amod(string-47, expected-46)
nsubj(fail-49, string-47)
aux(fail-49, would-48)
parataxis(match-24, fail-49)
conj:but(matches-32, fail-49)
mark(mark-55, as-50)
nsubj(mark-55, it-51)
aux(mark-55, wo-52)
neg(mark-55, n't-53)
cop(mark-55, be-54)
advcl(fail-49, mark-55)
case(call-59, as-56)
det(call-59, a-57)
amod(call-59, free-58)
nmod:as(mark-55, call-59)
dep(mark-55, 0-63)
appos(0-63, g.a-65)
nsubj(matches-70, -RRB--68)
parataxis(match-24, matches-70)
det(output-72, the-71)
dobj(matches-70, output-72)
cc(not-75, but-74)
cc(output-72, not-75)
det(AST-78, the-76)
amod(AST-78, resulting-77)
dobj(matches-70, AST-78)
conj:negcc(output-72, AST-78)
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): normalize the AST so an AST comparison can be done.
As is, the expected AST does not match the actual correct result:
The AST matches "g.a()" with a FREE_CALL annotation, but this as
expected string would fail as it won't be mark as a free call.
"(0,g.a)()" matches the output, but not the resulting AST.
Specificity: 0.999998
Content Structure:
dep(is-17, johnlenz-2)
parataxis(is-17, normalize-5)
det(AST-7, the-6)
dobj(normalize-5, AST-7)
mark(done-14, so-8)
det(comparison-11, an-9)
compound(comparison-11, AST-10)
nsubjpass(done-14, comparison-11)
aux(done-14, can-12)
auxpass(done-14, be-13)
advcl(normalize-5, done-14)
nsubj(is-17, As-16)
root(ROOT-0, is-17)
det(AST-21, the-19)
amod(AST-21, expected-20)
nsubj(match-24, AST-21)
aux(match-24, does-22)
neg(match-24, not-23)
xcomp(is-17, match-24)
det(result-28, the-25)
amod(result-28, actual-26)
amod(result-28, correct-27)
dobj(match-24, result-28)
det(AST-31, The-30)
nsubj(matches-32, AST-31)
parataxis(match-24, matches-32)
compound(-RRB--36, g.a-34)
dobj(matches-32, -RRB--36)
case(annotation-41, with-38)
det(annotation-41, a-39)
compound(annotation-41, FREE_CALL-40)
nmod:with(-RRB--36, annotation-41)
cc(matches-32, but-43)
det(string-47, this-44)
advmod(expected-46, as-45)
amod(string-47, expected-46)
nsubj(fail-49, string-47)
aux(fail-49, would-48)
parataxis(match-24, fail-49)
conj:but(matches-32, fail-49)
mark(mark-55, as-50)
nsubj(mark-55, it-51)
aux(mark-55, wo-52)
neg(mark-55, n't-53)
cop(mark-55, be-54)
advcl(fail-49, mark-55)
case(call-59, as-56)
det(call-59, a-57)
amod(call-59, free-58)
nmod:as(mark-55, call-59)
dep(mark-55, 0-63)
appos(0-63, g.a-65)
nsubj(matches-70, -RRB--68)
parataxis(match-24, matches-70)
det(output-72, the-71)
dobj(matches-70, output-72)
cc(not-75, but-74)
cc(output-72, not-75)
det(AST-78, the-76)
amod(AST-78, resulting-77)
dobj(matches-70, AST-78)
conj:negcc(output-72, AST-78)
File Name: /test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-06T13:05:22-07:00
Time Of Deletion: null
Creation Commit Hash: 05b267d49021ca56da5862fa88214bf8d4f471df
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): once the templated type work is finished,
restrict the type parameters.
Specificity: 0.835289
Content Structure:
root(ROOT-0, johnlenz-2)
mark(finished-11, once-5)
det(work-9, the-6)
amod(work-9, templated-7)
compound(work-9, type-8)
nsubjpass(finished-11, work-9)
auxpass(finished-11, is-10)
advcl(restrict-13, finished-11)
dep(johnlenz-2, restrict-13)
det(parameters-16, the-14)
compound(parameters-16, type-15)
dobj(restrict-13, parameters-16)
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): optimizations should not be emiting errors. Move these to
a check pass.
Specificity: 0.866008
Content Structure:
nsubj(Move-12, johnlenz-2)
nsubj(emiting-9, optimizations-5)
aux(emiting-9, should-6)
neg(emiting-9, not-7)
aux(emiting-9, be-8)
dep(johnlenz-2, emiting-9)
dobj(emiting-9, errors-10)
root(ROOT-0, Move-12)
dobj(Move-12, these-13)
case(pass-17, to-14)
det(pass-17, a-15)
compound(pass-17, check-16)
nmod:to(Move-12, pass-17)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): promote this to an error once existing conflicts have been
cleaned up.
Specificity: 0.843297
Content Structure:
dep(promote-5, johnlenz-2)
root(ROOT-0, promote-5)
dobj(promote-5, this-6)
case(error-9, to-7)
det(error-9, an-8)
nmod:to(promote-5, error-9)
mark(cleaned-15, once-10)
amod(conflicts-12, existing-11)
nsubjpass(cleaned-15, conflicts-12)
aux(cleaned-15, have-13)
auxpass(cleaned-15, been-14)
advcl(promote-5, cleaned-15)
compound:prt(cleaned-15, up-16)
File Name: ./src/com/google/javascript/jscomp/JsMessageVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): quoted props
Specificity: 0.649188
Content Structure:
root(ROOT-0, johnlenz-2)
amod(props-6, quoted-5)
dep(johnlenz-2, props-6)
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): reenable
Specificity: 0.631762
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, reenable-5)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): remove "currentScope".
Used as a shortcut for change tracking.  This is the current scope being
visited by the "current" NodeTraversal.  This can't be thread safe so
we should move it into the NodeTraversal and require explicit changed
nodes elsewhere so we aren't blocked from doing this elsewhere.
Specificity: 0.999921
Content Structure:
dep(safe-37, johnlenz-2)
parataxis(safe-37, remove-5)
nsubj(scope-22, currentScope-7)
dep(currentScope-7, Used-10)
case(shortcut-13, as-11)
det(shortcut-13, a-12)
nmod:as(Used-10, shortcut-13)
case(tracking-16, for-14)
compound(tracking-16, change-15)
nmod:for(shortcut-13, tracking-16)
nsubj(scope-22, This-18)
cop(scope-22, is-19)
det(scope-22, the-20)
amod(scope-22, current-21)
ccomp(remove-5, scope-22)
auxpass(visited-24, being-23)
acl(scope-22, visited-24)
case(NodeTraversal-30, by-25)
det(NodeTraversal-30, the-26)
amod(NodeTraversal-30, current-28)
nmod:agent(visited-24, NodeTraversal-30)
nsubj(safe-37, This-32)
aux(safe-37, ca-33)
neg(safe-37, n't-34)
cop(safe-37, be-35)
advmod(safe-37, thread-36)
root(ROOT-0, safe-37)
mark(move-41, so-38)
nsubj(move-41, we-39)
nsubj(require-47, we-39)
aux(move-41, should-40)
advcl(safe-37, move-41)
dobj(move-41, it-42)
case(NodeTraversal-45, into-43)
det(NodeTraversal-45, the-44)
nmod:into(move-41, NodeTraversal-45)
cc(move-41, and-46)
advcl(safe-37, require-47)
conj:and(move-41, require-47)
amod(nodes-50, explicit-48)
amod(nodes-50, changed-49)
dobj(require-47, nodes-50)
advmod(require-47, elsewhere-51)
mark(blocked-56, so-52)
nsubjpass(blocked-56, we-53)
auxpass(blocked-56, are-54)
neg(blocked-56, n't-55)
advcl(require-47, blocked-56)
mark(doing-58, from-57)
advcl(blocked-56, doing-58)
dobj(doing-58, this-59)
advmod(doing-58, elsewhere-60)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): remove "get" and "set" filename.  clients needing this should be
creating "SourceFile" objects directly.
Specificity: 0.935983
Content Structure:
dep(needing-16, johnlenz-2)
parataxis(needing-16, remove-5)
ccomp(filename-13, get-7)
cc(get-7, and-9)
conj:and(get-7, set-11)
ccomp(filename-13, set-11)
ccomp(remove-5, filename-13)
nsubj(needing-16, clients-15)
root(ROOT-0, needing-16)
nsubj(creating-20, this-17)
aux(creating-20, should-18)
aux(creating-20, be-19)
ccomp(needing-16, creating-20)
amod(objects-24, SourceFile-22)
dobj(creating-20, objects-24)
advmod(creating-20, directly-25)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-13T15:32:19-07:00
Time Of Deletion: null
Creation Commit Hash: cfa307660f82eded3d5fc2ff0920c3aeaa81ccf7
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): remove this code and make this an exception. This
is here only for legacy reasons, the AST is not valid but
preserve existing behavior.
Specificity: 0.9847
Content Structure:
dep(is-15, johnlenz-2)
parataxis(is-15, remove-5)
det(code-7, this-6)
dobj(remove-5, code-7)
cc(remove-5, and-8)
conj:and(remove-5, make-9)
parataxis(is-15, make-9)
dobj(make-9, this-10)
det(exception-12, an-11)
dobj(remove-5, exception-12)
nsubj(is-15, This-14)
root(ROOT-0, is-15)
advmod(is-15, here-16)
advmod(valid-26, only-17)
case(reasons-20, for-18)
compound(reasons-20, legacy-19)
nmod:for(valid-26, reasons-20)
det(AST-23, the-22)
nsubj(valid-26, AST-23)
nsubj(preserve-28, AST-23)
cop(valid-26, is-24)
neg(valid-26, not-25)
ccomp(is-15, valid-26)
cc(valid-26, but-27)
ccomp(is-15, preserve-28)
conj:but(valid-26, preserve-28)
amod(behavior-30, existing-29)
dobj(preserve-28, behavior-30)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): remove this constant once this has been proven in
production code.
Specificity: 0.824159
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, remove-5)
det(constant-7, this-6)
dobj(remove-5, constant-7)
mark(proven-12, once-8)
nsubjpass(proven-12, this-9)
aux(proven-12, has-10)
auxpass(proven-12, been-11)
advcl(remove-5, proven-12)
case(code-15, in-13)
compound(code-15, production-14)
nmod:in(proven-12, code-15)
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): remove this once GWT has a proper PrintStream implementation
Specificity: 0.862375
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, remove-5)
dobj(remove-5, this-6)
mark(has-9, once-7)
nsubj(has-9, GWT-8)
advcl(remove-5, has-9)
det(implementation-13, a-10)
amod(implementation-13, proper-11)
compound(implementation-13, PrintStream-12)
dobj(has-9, implementation-13)
File Name: ./src/com/google/javascript/jscomp/gwt/client/GwtRunner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): rename this function
Specificity: 0.665348
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, rename-5)
det(function-7, this-6)
dep(rename-5, function-7)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): rename this function.  It is currently being used
in two disjoint cases:
1) We only care about the result of the expression
(in which case NOT here should return true)
2) We care that expression is a side-effect free and can't
be side-effected by other expressions.
This should only be used to say the value is immuable and
hasSideEffects and canBeSideEffected should be used for the other case.
Specificity: 0.999999
Content Structure:
dep(used-63, johnlenz-2)
parataxis(used-63, rename-5)
det(function-7, this-6)
dep(used-13, function-7)
nsubjpass(used-13, It-9)
aux(used-13, is-10)
advmod(used-13, currently-11)
auxpass(used-13, being-12)
xcomp(rename-5, used-13)
case(cases-17, in-14)
nummod(cases-17, two-15)
amod(cases-17, disjoint-16)
nmod:in(used-13, cases-17)
dep(care-23, 1-19)
nsubj(care-23, We-21)
advmod(care-23, only-22)
parataxis(used-13, care-23)
advmod(result-26, about-24)
det(result-26, the-25)
dobj(care-23, result-26)
case(expression-29, of-27)
det(expression-29, the-28)
nmod:of(result-26, expression-29)
case(case-33, in-31)
det(case-33, which-32)
nmod:in(return-37, case-33)
nsubj(return-37, NOT-34)
advmod(return-37, here-35)
aux(return-37, should-36)
dep(expression-29, return-37)
xcomp(return-37, true-38)
dep(care-43, 2-40)
nsubj(care-43, We-42)
nsubjpass(side-effected-54, We-42)
parataxis(used-13, care-43)
mark(free-49, that-44)
nsubj(free-49, expression-45)
cop(free-49, is-46)
det(free-49, a-47)
amod(free-49, side-effect-48)
ccomp(care-43, free-49)
cc(care-43, and-50)
aux(side-effected-54, ca-51)
neg(side-effected-54, n't-52)
auxpass(side-effected-54, be-53)
parataxis(used-13, side-effected-54)
conj:and(care-43, side-effected-54)
case(expressions-57, by-55)
amod(expressions-57, other-56)
nmod:agent(side-effected-54, expressions-57)
nsubjpass(used-63, This-59)
nsubj:xsubj(say-65, This-59)
aux(used-63, should-60)
advmod(used-63, only-61)
auxpass(used-63, be-62)
root(ROOT-0, used-63)
mark(say-65, to-64)
xcomp(used-63, say-65)
det(value-67, the-66)
nsubj(hasSideEffects-71, value-67)
nsubj(canBeSideEffected-73, value-67)
cop(hasSideEffects-71, is-68)
dep(hasSideEffects-71, immuable-69)
cc(hasSideEffects-71, and-70)
ccomp(say-65, hasSideEffects-71)
cc(hasSideEffects-71, and-72)
ccomp(say-65, canBeSideEffected-73)
conj:and(hasSideEffects-71, canBeSideEffected-73)
aux(used-76, should-74)
auxpass(used-76, be-75)
ccomp(hasSideEffects-71, used-76)
case(case-80, for-77)
det(case-80, the-78)
amod(case-80, other-79)
nmod:for(used-76, case-80)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): report an error.
Specificity: 0.666745
Content Structure:
dep(report-5, johnlenz-2)
root(ROOT-0, report-5)
det(error-7, an-6)
dobj(report-5, error-7)
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): restrict to global names
Specificity: 0.682716
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, restrict-5)
case(names-8, to-6)
amod(names-8, global-7)
nmod:to(restrict-5, names-8)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): return a GETELEM for quoted strings.
Specificity: 0.872435
Content Structure:
dep(return-5, johnlenz-2)
root(ROOT-0, return-5)
det(GETELEM-7, a-6)
dobj(return-5, GETELEM-7)
case(strings-10, for-8)
amod(strings-10, quoted-9)
nmod:for(GETELEM-7, strings-10)
File Name: ./src/com/google/javascript/jscomp/DefinitionsRemover.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): rework catch expression handling when we
have lexical scope support so catch expressions don't
need to be special cased.
Specificity: 0.947203
Content Structure:
dep(support-14, johnlenz-2)
compound(expression-7, rework-5)
compound(expression-7, catch-6)
nsubj(support-14, expression-7)
acl(expression-7, handling-8)
advmod(have-11, when-9)
nsubj(have-11, we-10)
advcl(handling-8, have-11)
amod(scope-13, lexical-12)
dobj(have-11, scope-13)
root(ROOT-0, support-14)
mark(need-20, so-15)
dep(expressions-17, catch-16)
nsubj(need-20, expressions-17)
nsubj:xsubj(cased-24, expressions-17)
aux(need-20, do-18)
neg(need-20, n't-19)
advcl(support-14, need-20)
mark(cased-24, to-21)
cop(cased-24, be-22)
amod(cased-24, special-23)
xcomp(need-20, cased-24)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): separate setter property types from getter property
types.
Specificity: 0.762189
Content Structure:
root(ROOT-0, johnlenz-2)
amod(types-8, separate-5)
compound(types-8, setter-6)
compound(types-8, property-7)
dep(johnlenz-2, types-8)
case(types-12, from-9)
compound(types-12, getter-10)
compound(types-12, property-11)
nmod:from(types-8, types-12)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): share the JSDocInfo here rather than building
a new one each time.
Specificity: 0.889925
Content Structure:
dep(share-5, johnlenz-2)
root(ROOT-0, share-5)
det(JSDocInfo-7, the-6)
dobj(share-5, JSDocInfo-7)
advmod(share-5, here-8)
mark(building-11, rather-9)
mwe(rather-9, than-10)
advcl(share-5, building-11)
det(one-14, a-12)
amod(one-14, new-13)
iobj(building-11, one-14)
det(time-16, each-15)
dobj(building-11, time-16)
File Name: ./src/com/google/javascript/jscomp/CollapseVariableDeclarations.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): share the JSDocInfo here rather than building
a new one each time.
Specificity: 0.889925
Content Structure:
dep(share-5, johnlenz-2)
root(ROOT-0, share-5)
det(JSDocInfo-7, the-6)
dobj(share-5, JSDocInfo-7)
advmod(share-5, here-8)
mark(building-11, rather-9)
mwe(rather-9, than-10)
advcl(share-5, building-11)
det(one-14, a-12)
amod(one-14, new-13)
iobj(building-11, one-14)
det(time-16, each-15)
dobj(building-11, time-16)
File Name: ./src/com/google/javascript/jscomp/ExternExportsPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): should "apply" always be a possible violation?
Specificity: 0.741578
Content Structure:
dep(violation-13, johnlenz-2)
aux(violation-13, should-5)
advmod(violation-13, apply-7)
advmod(apply-7, always-9)
cop(violation-13, be-10)
det(violation-13, a-11)
amod(violation-13, possible-12)
root(ROOT-0, violation-13)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): should IN operator be included in #isSimpleOperator?
Specificity: 0.812069
Content Structure:
dep(included-9, johnlenz-2)
aux(included-9, should-5)
case(operator-7, IN-6)
nmod:in(included-9, operator-7)
auxpass(included-9, be-8)
root(ROOT-0, included-9)
case(#isSimpleOperator-11, in-10)
nmod:in(included-9, #isSimpleOperator-11)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): should this be false?
Specificity: 0.68559
Content Structure:
root(ROOT-0, johnlenz-2)
aux(false-8, should-5)
nsubj(false-8, this-6)
cop(false-8, be-7)
dep(johnlenz-2, false-8)
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): should we leave both types?
case 7: add a merged alternate
We currently merge to the templatized types to "unknown"
which is equivalent to the raw type.
Specificity: 0.991301
Content Structure:
root(ROOT-0, johnlenz-2)
dep(leave-7, should-5)
nsubj(leave-7, we-6)
acl:relcl(johnlenz-2, leave-7)
det(types-9, both-8)
dobj(leave-7, types-9)
dep(johnlenz-2, case-11)
nummod(case-11, 7-12)
dep(case-11, add-14)
det(alternate-17, a-15)
amod(alternate-17, merged-16)
dobj(add-14, alternate-17)
nsubj(equivalent-31, alternate-17)
nsubj(merge-20, We-18)
advmod(merge-20, currently-19)
acl:relcl(alternate-17, merge-20)
case(types-24, to-21)
det(types-24, the-22)
amod(types-24, templatized-23)
nmod:to(merge-20, types-24)
case(unknown-27, to-25)
advcl(merge-20, unknown-27)
ref(alternate-17, which-29)
cop(equivalent-31, is-30)
acl:relcl(alternate-17, equivalent-31)
case(type-35, to-32)
det(type-35, the-33)
amod(type-35, raw-34)
nmod:to(equivalent-31, type-35)
File Name: ./src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): should we validate no values in scope?
Specificity: 0.744066
Content Structure:
root(ROOT-0, johnlenz-2)
aux(validate-7, should-5)
nsubj(validate-7, we-6)
dep(johnlenz-2, validate-7)
neg(values-9, no-8)
dobj(validate-7, values-9)
case(scope-11, in-10)
nmod:in(validate-7, scope-11)
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): somehow allow templated typedefs
Specificity: 0.680792
Content Structure:
root(ROOT-0, johnlenz-2)
advmod(allow-6, somehow-5)
dep(johnlenz-2, allow-6)
amod(typedefs-8, templated-7)
dobj(allow-6, typedefs-8)
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): super in global scope should be a syntax error
Specificity: 0.775836
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, super-5)
case(scope-8, in-6)
amod(scope-8, global-7)
nmod:in(super-5, scope-8)
aux(error-13, should-9)
cop(error-13, be-10)
det(error-13, a-11)
compound(error-13, syntax-12)
acl:relcl(super-5, error-13)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): support foo.call
Specificity: 0.625976
Content Structure:
root(ROOT-0, johnlenz-2)
compound(foo.call-6, support-5)
dep(johnlenz-2, foo.call-6)
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): support prototype properties like:
Specificity: 0.682816
Content Structure:
root(ROOT-0, johnlenz-2)
compound(properties-7, support-5)
compound(properties-7, prototype-6)
dep(johnlenz-2, properties-7)
dep(johnlenz-2, like-8)
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): support rewriting methods defined as part of
object literals (they are generally problematic because they may be
maps of functions use in for-in expressions, etc).
Be conservative, don't try to optimize any declaration that isn't as
simple function declaration or assignment.
Specificity: 0.999665
Content Structure:
dep(try-39, johnlenz-2)
csubj(try-39, support-5)
amod(methods-7, rewriting-6)
dobj(support-5, methods-7)
acl(methods-7, defined-8)
case(part-10, as-9)
nmod:as(defined-8, part-10)
case(literals-13, of-11)
compound(literals-13, object-12)
nmod:of(part-10, literals-13)
nsubj(problematic-18, they-15)
cop(problematic-18, are-16)
advmod(problematic-18, generally-17)
dep(part-10, problematic-18)
mark(maps-23, because-19)
nsubj(maps-23, they-20)
aux(maps-23, may-21)
cop(maps-23, be-22)
ccomp(problematic-18, maps-23)
case(use-26, of-24)
compound(use-26, functions-25)
nmod:of(maps-23, use-26)
case(expressions-29, in-27)
amod(expressions-29, for-in-28)
nmod:in(use-26, expressions-29)
conj(expressions-29, etc-31)
advmod(conservative-35, Be-34)
advmod(try-39, conservative-35)
aux(try-39, do-37)
neg(try-39, n't-38)
root(ROOT-0, try-39)
mark(optimize-41, to-40)
xcomp(try-39, optimize-41)
det(declaration-43, any-42)
dobj(optimize-41, declaration-43)
nsubj(declaration-50, declaration-43)
ref(declaration-43, that-44)
cop(declaration-50, is-45)
neg(declaration-50, n't-46)
case(declaration-50, as-47)
amod(declaration-50, simple-48)
compound(declaration-50, function-49)
acl:relcl(declaration-43, declaration-50)
cc(declaration-50, or-51)
acl:relcl(declaration-43, assignment-52)
conj:or(declaration-50, assignment-52)
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): support specialization
Specificity: 0.646133
Content Structure:
root(ROOT-0, johnlenz-2)
compound(specialization-6, support-5)
dep(johnlenz-2, specialization-6)
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): support specialization
Specificity: 0.646133
Content Structure:
root(ROOT-0, johnlenz-2)
compound(specialization-6, support-5)
dep(johnlenz-2, specialization-6)
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedVars.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): the compiler is a bad place to store this value
multiple traversals can interfer with each other
(even on the same thread).
Specificity: 0.979653
Content Structure:
root(ROOT-0, johnlenz-2)
det(compiler-6, the-5)
nsubj(place-10, compiler-6)
cop(place-10, is-7)
det(place-10, a-8)
amod(place-10, bad-9)
dep(johnlenz-2, place-10)
mark(store-12, to-11)
acl(place-10, store-12)
det(value-14, this-13)
dobj(store-12, value-14)
amod(traversals-16, multiple-15)
nsubj(interfer-18, traversals-16)
aux(interfer-18, can-17)
acl:relcl(value-14, interfer-18)
case(other-21, with-19)
det(other-21, each-20)
nmod:with(interfer-18, other-21)
advmod(thread-27, even-23)
advmod(thread-27, on-24)
det(thread-27, the-25)
amod(thread-27, same-26)
appos(other-21, thread-27)
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): the premise in the following comment is questionable:
assignment to goog.nullFunction (or any global object) changes the value globally
we should preserve the assignment.  In particular, the example is an
misuse of goog.nullFunction and having special support for it doesn't make any
sense.  It is unclear if there is any valid use for this special case.
Specificity: 0.99998
Content Structure:
dep(questionable-12, johnlenz-2)
det(premise-6, the-5)
nsubj(questionable-12, premise-6)
case(comment-10, in-7)
det(comment-10, the-8)
amod(comment-10, following-9)
nmod:in(premise-6, comment-10)
cop(questionable-12, is-11)
root(ROOT-0, questionable-12)
compound(goog.nullFunction-16, assignment-14)
dep(goog.nullFunction-16, to-15)
nsubj(changes-23, goog.nullFunction-16)
cc(goog.nullFunction-16, or-18)
det(object-21, any-19)
amod(object-21, global-20)
conj:or(goog.nullFunction-16, object-21)
nsubj(changes-23, object-21)
parataxis(questionable-12, changes-23)
det(value-25, the-24)
dobj(changes-23, value-25)
advmod(changes-23, globally-26)
nsubj(preserve-29, we-27)
aux(preserve-29, should-28)
parataxis(changes-23, preserve-29)
det(assignment-31, the-30)
dobj(preserve-29, assignment-31)
case(particular-34, In-33)
advcl(misuse-40, particular-34)
det(example-37, the-36)
nsubj(misuse-40, example-37)
cop(misuse-40, is-38)
det(misuse-40, an-39)
parataxis(changes-23, misuse-40)
case(goog.nullFunction-42, of-41)
acl(misuse-40, goog.nullFunction-42)
cc(goog.nullFunction-42, and-43)
acl(misuse-40, having-44)
conj:and(goog.nullFunction-42, having-44)
amod(support-46, special-45)
dobj(having-44, support-46)
mark(make-51, for-47)
nsubj(make-51, it-48)
aux(make-51, does-49)
neg(make-51, n't-50)
advcl(having-44, make-51)
det(sense-53, any-52)
dobj(make-51, sense-53)
nsubj(unclear-57, It-55)
cop(unclear-57, is-56)
parataxis(changes-23, unclear-57)
mark(is-60, if-58)
expl(is-60, there-59)
advcl(unclear-57, is-60)
det(use-63, any-61)
amod(use-63, valid-62)
nsubj(is-60, use-63)
case(case-67, for-64)
det(case-67, this-65)
amod(case-67, special-66)
nmod:for(use-63, case-67)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): the rest of the ops
Specificity: 0.702421
Content Structure:
root(ROOT-0, johnlenz-2)
det(rest-6, the-5)
dep(johnlenz-2, rest-6)
case(ops-9, of-7)
det(ops-9, the-8)
nmod:of(rest-6, ops-9)
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this can be improved by looking at the possible
values for locals.  If there are simple values, or constants
we could still inline.
Specificity: 0.978001
Content Structure:
dep(values-22, johnlenz-2)
nsubj(values-22, this-5)
nsubj(constants-25, this-5)
aux(improved-8, can-6)
auxpass(improved-8, be-7)
acl:relcl(this-5, improved-8)
mark(looking-10, by-9)
advcl(improved-8, looking-10)
case(values-14, at-11)
det(values-14, the-12)
amod(values-14, possible-13)
nmod:at(are-20, values-14)
case(locals-16, for-15)
nmod:for(values-14, locals-16)
mark(are-20, If-18)
expl(are-20, there-19)
advcl(looking-10, are-20)
xcomp(are-20, simple-21)
root(ROOT-0, values-22)
cc(values-22, or-24)
conj:or(values-22, constants-25)
nsubj(inline-29, we-26)
aux(inline-29, could-27)
advmod(inline-29, still-28)
ccomp(constants-25, inline-29)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this can be improved by looking to see
if the inner function contains any references to values defined
in the outer function.
Specificity: 0.963704
Content Structure:
root(ROOT-0, johnlenz-2)
nsubjpass(improved-8, this-5)
aux(improved-8, can-6)
auxpass(improved-8, be-7)
dep(johnlenz-2, improved-8)
mark(looking-10, by-9)
advcl(improved-8, looking-10)
mark(see-12, to-11)
xcomp(looking-10, see-12)
mark(contains-17, if-13)
det(function-16, the-14)
amod(function-16, inner-15)
nsubj(contains-17, function-16)
advcl(see-12, contains-17)
det(references-19, any-18)
dobj(contains-17, references-19)
case(values-21, to-20)
nmod:to(contains-17, values-21)
acl(values-21, defined-22)
case(function-26, in-23)
det(function-26, the-24)
amod(function-26, outer-25)
nmod:in(defined-22, function-26)
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this is a direct copy of the invalidation code
from AmbiguateProperties, if in the end we don't need to modify it
we should move it to a common location.
Specificity: 0.992804
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(copy-9, this-5)
cop(copy-9, is-6)
det(copy-9, a-7)
amod(copy-9, direct-8)
dep(johnlenz-2, copy-9)
case(code-13, of-10)
det(code-13, the-11)
compound(code-13, invalidation-12)
nmod:of(copy-9, code-13)
case(AmbiguateProperties-15, from-14)
nmod:from(code-13, AmbiguateProperties-15)
mark(need-24, if-17)
case(end-20, in-18)
det(end-20, the-19)
nmod:in(need-24, end-20)
nsubj(need-24, we-21)
nsubj:xsubj(modify-26, we-21)
aux(need-24, do-22)
neg(need-24, n't-23)
advcl(copy-9, need-24)
mark(modify-26, to-25)
xcomp(need-24, modify-26)
dobj(modify-26, it-27)
nsubj(move-30, we-28)
aux(move-30, should-29)
dep(modify-26, move-30)
dobj(move-30, it-31)
case(location-35, to-32)
det(location-35, a-33)
amod(location-35, common-34)
nmod:to(move-30, location-35)
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this seems like a strange place to check "@implicitCast"
Specificity: 0.781647
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, this-5)
acl:relcl(this-5, seems-6)
case(place-10, like-7)
det(place-10, a-8)
amod(place-10, strange-9)
nmod:like(seems-6, place-10)
mark(check-12, to-11)
xcomp(seems-6, check-12)
dobj(check-12, @implicitCast-14)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this should generate a warning but does not.
Specificity: 0.764381
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(generate-7, this-5)
aux(generate-7, should-6)
dep(johnlenz-2, generate-7)
det(warning-9, a-8)
dobj(generate-7, warning-9)
cc(does-11, but-10)
dep(warning-9, does-11)
neg(does-11, not-12)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): this was a weird error.  We should add a general
restriction on what is accepted for T. Something like:
"@template T of {Object|string}" or some such.
Specificity: 0.996283
Content Structure:
nsubj(add-13, johnlenz-2)
nsubj(error-9, this-5)
cop(error-9, was-6)
det(error-9, a-7)
amod(error-9, weird-8)
dep(johnlenz-2, error-9)
nsubj(add-13, We-11)
aux(add-13, should-12)
root(ROOT-0, add-13)
det(restriction-16, a-14)
amod(restriction-16, general-15)
dobj(add-13, restriction-16)
mark(accepted-20, on-17)
nsubjpass(accepted-20, what-18)
auxpass(accepted-20, is-19)
advcl(add-13, accepted-20)
case(Something-23, for-21)
compound(Something-23, T.-22)
nmod:like(accepted-20, Something-23)
case(Something-23, like-24)
dep(add-13, @template-27)
dobj(@template-27, T-28)
case(string-33, of-29)
compound(string-33, Object-31)
compound(string-33, |-32)
nmod:of(T-28, string-33)
cc(T-28, or-36)
det(such-38, some-37)
dobj(@template-27, such-38)
conj:or(T-28, such-38)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): track entering strict scripts/modules/functions.
Specificity: 0.649613
Content Structure:
dep(track-5, johnlenz-2)
root(ROOT-0, track-5)
xcomp(track-5, entering-6)
amod(scripts/modules/functions-8, strict-7)
dobj(entering-6, scripts/modules/functions-8)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): try to remove parameters with side-effects by
decomposing the call expression.
Specificity: 0.813973
Content Structure:
dep(try-5, johnlenz-2)
root(ROOT-0, try-5)
mark(remove-7, to-6)
xcomp(try-5, remove-7)
dobj(remove-7, parameters-8)
case(side-effects-10, with-9)
nmod:with(remove-7, side-effects-10)
mark(decomposing-12, by-11)
advcl(remove-7, decomposing-12)
det(expression-15, the-13)
compound(expression-15, call-14)
dobj(decomposing-12, expression-15)
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedVars.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): unify "SourceFile", "Es6ErrorReporter" and "Config"
Specificity: 0.806821
Content Structure:
root(ROOT-0, johnlenz-2)
compound(SourceFile-7, unify-5)
dep(johnlenz-2, SourceFile-7)
appos(SourceFile-7, Es6ErrorReporter-11)
cc(Es6ErrorReporter-11, and-13)
appos(SourceFile-7, Config-15)
conj:and(Es6ErrorReporter-11, Config-15)
File Name: ./src/com/google/javascript/jscomp/parsing/ParserRunner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): update this test to look for the const annotation.
Specificity: 0.784776
Content Structure:
dep(update-5, johnlenz-2)
root(ROOT-0, update-5)
det(test-7, this-6)
dobj(update-5, test-7)
mark(look-9, to-8)
acl(test-7, look-9)
case(annotation-13, for-10)
det(annotation-13, the-11)
amod(annotation-13, const-12)
nmod:for(look-9, annotation-13)
File Name: ./test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): use this when we upgrade Trush:
Specificity: 0.747235
Content Structure:
root(ROOT-0, johnlenz-2)
dep(johnlenz-2, use-5)
dep(use-5, this-6)
advmod(upgrade-9, when-7)
nsubj(upgrade-9, we-8)
acl:relcl(use-5, upgrade-9)
dobj(upgrade-9, Trush-10)
File Name: ./test/com/google/javascript/jscomp/ChangeVerifierTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): validate "yield" parsing. Firefox rejects this
use of "yield".
Specificity: 0.830699
Content Structure:
dep(rejects-12, johnlenz-2)
parataxis(rejects-12, validate-5)
xcomp(validate-5, yield-7)
dobj(yield-7, parsing-9)
nsubj(rejects-12, Firefox-11)
root(ROOT-0, rejects-12)
det(use-14, this-13)
dobj(rejects-12, use-14)
case(yield-17, of-15)
nmod:of(use-14, yield-17)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): verify we want both template and class template lists instead of a unified
list.
Specificity: 0.878027
Content Structure:
dep(verify-5, johnlenz-2)
root(ROOT-0, verify-5)
nsubj(want-7, we-6)
ccomp(verify-5, want-7)
cc:preconj(template-9, both-8)
dobj(want-7, template-9)
cc(template-9, and-10)
compound(lists-13, class-11)
compound(lists-13, template-12)
dobj(want-7, lists-13)
conj:and(template-9, lists-13)
case(list-18, instead-14)
mwe(instead-14, of-15)
det(list-18, a-16)
amod(list-18, unified-17)
nmod:instead_of(template-9, list-18)
File Name: ./src/com/google/javascript/jscomp/FunctionTypeBuilder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): visit function parts
Specificity: 0.665348
Content Structure:
root(ROOT-0, johnlenz-2)
compound(parts-7, visit-5)
compound(parts-7, function-6)
dep(johnlenz-2, parts-7)
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): we currently report the type of the RHS which is not
correct, we should export the type of the LHS.
Specificity: 0.971382
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(report-7, we-5)
advmod(report-7, currently-6)
ccomp(export-20, report-7)
det(type-9, the-8)
dobj(report-7, type-9)
nsubj(correct-16, type-9)
case(RHS-12, of-10)
det(RHS-12, the-11)
nmod:of(type-9, RHS-12)
ref(type-9, which-13)
cop(correct-16, is-14)
neg(correct-16, not-15)
acl:relcl(type-9, correct-16)
nsubj(export-20, we-18)
aux(export-20, should-19)
dep(johnlenz-2, export-20)
det(type-22, the-21)
dobj(export-20, type-22)
case(LHS-25, of-23)
det(LHS-25, the-24)
nmod:of(type-22, LHS-25)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(johnlenz): we shouldn't need to check both isExternExportsEnabled and
externExportsPath.
Specificity: 0.867203
Content Structure:
root(ROOT-0, johnlenz-2)
nsubj(need-8, we-5)
nsubj:xsubj(check-10, we-5)
aux(need-8, should-6)
neg(need-8, n't-7)
dep(johnlenz-2, need-8)
mark(check-10, to-9)
xcomp(need-8, check-10)
cc:preconj(isExternExportsEnabled-12, both-11)
xcomp(check-10, isExternExportsEnabled-12)
cc(isExternExportsEnabled-12, and-13)
xcomp(check-10, externExportsPath-14)
conj:and(isExternExportsEnabled-12, externExportsPath-14)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(kevinoconnor): Switch/for statements need special consideration since they may
execute out of order.
Specificity: 0.846445
Content Structure:
root(ROOT-0, kevinoconnor-2)
compound(statements-6, Switch/for-5)
nsubj(need-7, statements-6)
dep(kevinoconnor-2, need-7)
amod(consideration-9, special-8)
dobj(need-7, consideration-9)
mark(execute-13, since-10)
nsubj(execute-13, they-11)
aux(execute-13, may-12)
advcl(need-7, execute-13)
compound:prt(execute-13, out-14)
case(order-16, of-15)
nmod:of(execute-13, order-16)
File Name: ./src/com/google/javascript/jscomp/DeadPropertyAssignmentElimination.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(kevinoconnor): Try to give special treatment to constructor, else remove this field
and cleanup dead code.
Specificity: 0.909976
Content Structure:
dep(Try-5, kevinoconnor-2)
root(ROOT-0, Try-5)
mark(give-7, to-6)
xcomp(Try-5, give-7)
amod(treatment-9, special-8)
dobj(give-7, treatment-9)
case(constructor-11, to-10)
nmod:to(give-7, constructor-11)
advmod(remove-14, else-13)
dep(give-7, remove-14)
det(field-16, this-15)
dobj(remove-14, field-16)
cc(field-16, and-17)
compound(code-20, cleanup-18)
amod(code-20, dead-19)
dobj(remove-14, code-20)
conj:and(field-16, code-20)
File Name: ./src/com/google/javascript/jscomp/DeadPropertyAssignmentElimination.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(kushal): Cache the results of the checks

Specificity: 0.744366
Content Structure:
root(ROOT-0, kushal-2)
dep(kushal-2, Cache-5)
det(results-7, the-6)
dep(Cache-5, results-7)
case(checks-10, of-8)
det(checks-10, the-9)
nmod:of(results-7, checks-10)
File Name: ./src/com/google/javascript/jscomp/InlineSimpleMethods.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(kushal): Make decision about overlap with CrossModuleCodeMotion
Specificity: 0.836822
Content Structure:
root(ROOT-0, kushal-2)
amod(decision-6, Make-5)
dep(kushal-2, decision-6)
case(overlap-8, about-7)
nmod:about(decision-6, overlap-8)
case(CrossModuleCodeMotion-10, with-9)
nmod:with(overlap-8, CrossModuleCodeMotion-10)
File Name: ./test/com/google/javascript/jscomp/InlineVariablesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Check that the number of parameters correspond with the
number of template types that the base type can take when creating
a templatized type. For instance, if the base type is Array then there
must be just one parameter.
Specificity: 0.998855
Content Structure:
dep(parameter-45, lpino-2)
parataxis(parameter-45, Check-5)
mark(correspond-11, that-6)
det(number-8, the-7)
nsubj(correspond-11, number-8)
case(parameters-10, of-9)
nmod:of(number-8, parameters-10)
ccomp(Check-5, correspond-11)
case(number-14, with-12)
det(number-14, the-13)
nmod:with(correspond-11, number-14)
case(types-17, of-15)
amod(types-17, template-16)
nmod:of(number-14, types-17)
mark(take-23, that-18)
det(type-21, the-19)
compound(type-21, base-20)
nsubj(take-23, type-21)
aux(take-23, can-22)
ccomp(correspond-11, take-23)
advmod(creating-25, when-24)
advcl(take-23, creating-25)
det(type-28, a-26)
amod(type-28, templatized-27)
dobj(creating-25, type-28)
case(instance-31, For-30)
advmod(parameter-45, instance-31)
mark(Array-38, if-33)
det(type-36, the-34)
compound(type-36, base-35)
nsubj(Array-38, type-36)
cop(Array-38, is-37)
advcl(parameter-45, Array-38)
advmod(parameter-45, then-39)
expl(parameter-45, there-40)
aux(parameter-45, must-41)
cop(parameter-45, be-42)
advmod(parameter-45, just-43)
nummod(parameter-45, one-44)
root(ROOT-0, parameter-45)
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Decide how to handle non-record types
Specificity: 0.728178
Content Structure:
root(ROOT-0, lpino-2)
dep(lpino-2, Decide-5)
advmod(handle-8, how-6)
mark(handle-8, to-7)
ccomp(Decide-5, handle-8)
amod(types-10, non-record-9)
dobj(handle-8, types-10)
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Decide if the best strategy is to collapse the properties
to a union type or not. So far, new values replace the old ones except
if they are two record types in which case the properties are joined
together
Specificity: 0.998609
Content Structure:
dep(replace-27, lpino-2)
parataxis(replace-27, Decide-5)
mark(is-10, if-6)
det(strategy-9, the-7)
amod(strategy-9, best-8)
nsubj(is-10, strategy-9)
nsubj:xsubj(collapse-12, strategy-9)
advcl(Decide-5, is-10)
mark(collapse-12, to-11)
xcomp(is-10, collapse-12)
det(properties-14, the-13)
dobj(collapse-12, properties-14)
case(type-18, to-15)
det(type-18, a-16)
compound(type-18, union-17)
nmod:to(collapse-12, type-18)
cc(is-10, or-19)
advcl(Decide-5, not-20)
conj:or(is-10, not-20)
case(far-23, So-22)
advmod(replace-27, far-23)
amod(values-26, new-25)
nsubj(replace-27, values-26)
root(ROOT-0, replace-27)
det(ones-30, the-28)
amod(ones-30, old-29)
dobj(replace-27, ones-30)
mark(types-37, except-31)
mark(types-37, if-32)
nsubj(types-37, they-33)
cop(types-37, are-34)
nummod(types-37, two-35)
amod(types-37, record-36)
acl(ones-30, types-37)
det(case-40, types-37)
case(case-40, in-38)
ref(types-37, which-39)
nmod:in(joined-44, case-40)
det(properties-42, the-41)
nsubjpass(joined-44, properties-42)
auxpass(joined-44, are-43)
acl:relcl(types-37, joined-44)
advmod(joined-44, together-45)
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Handle inherited properties
Specificity: 0.698655
Content Structure:
root(ROOT-0, lpino-2)
dep(lpino-2, Handle-5)
amod(properties-7, inherited-6)
dobj(Handle-5, properties-7)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): ParserRunner reports errors if the expression is not
ES6 valid. We need to abort the validation of the type transformation
whenever an error is reported.
Specificity: 0.986078
Content Structure:
dep(need-17, lpino-2)
parataxis(need-17, ParserRunner-5)
compound(errors-7, reports-6)
dobj(ParserRunner-5, errors-7)
mark(valid-14, if-8)
det(expression-10, the-9)
nsubj(valid-14, expression-10)
cop(valid-14, is-11)
neg(valid-14, not-12)
advmod(valid-14, ES6-13)
advcl(ParserRunner-5, valid-14)
nsubj(need-17, We-16)
nsubj:xsubj(abort-19, We-16)
root(ROOT-0, need-17)
mark(abort-19, to-18)
xcomp(need-17, abort-19)
det(validation-21, the-20)
dobj(abort-19, validation-21)
case(transformation-25, of-22)
det(transformation-25, the-23)
compound(transformation-25, type-24)
nmod:of(validation-21, transformation-25)
advmod(reported-30, whenever-26)
det(error-28, an-27)
nsubjpass(reported-30, error-28)
auxpass(reported-30, is-29)
advcl(abort-19, reported-30)
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): This delimiter needs to be further discussed
Specificity: 0.759378
Content Structure:
root(ROOT-0, lpino-2)
det(delimiter-6, This-5)
dep(lpino-2, delimiter-6)
acl:relcl(delimiter-6, needs-7)
mark(discussed-11, to-8)
auxpass(discussed-11, be-9)
advmod(discussed-11, further-10)
xcomp(needs-7, discussed-11)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Use only constants as parameters of this method
Specificity: 0.776879
Content Structure:
root(ROOT-0, lpino-2)
compound(constants-7, Use-5)
advmod(constants-7, only-6)
dep(lpino-2, constants-7)
case(parameters-9, as-8)
nmod:as(constants-7, parameters-9)
case(method-12, of-10)
det(method-12, this-11)
nmod:of(parameters-9, method-12)
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Use the exact lineno and charno, it is currently using
the lineno and charno of the parent @template
Specificity: 0.933428
Content Structure:
root(ROOT-0, lpino-2)
dep(lpino-2, Use-5)
det(lineno-8, the-6)
amod(lineno-8, exact-7)
dobj(Use-5, lineno-8)
cc(lineno-8, and-9)
dobj(Use-5, charno-10)
conj:and(lineno-8, charno-10)
nsubj(using-15, it-12)
aux(using-15, is-13)
advmod(using-15, currently-14)
acl:relcl(lineno-8, using-15)
det(lineno-17, the-16)
dobj(using-15, lineno-17)
cc(lineno-17, and-18)
dobj(using-15, charno-19)
conj:and(lineno-17, charno-19)
case(@template-23, of-20)
det(@template-23, the-21)
compound(@template-23, parent-22)
nmod:of(lineno-17, @template-23)
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(lpino): Use the type Promise instead of Array
{service:Array<number>}
is transformed to
{service:number}
Specificity: 0.975127
Content Structure:
root(ROOT-0, lpino-2)
dep(lpino-2, Use-5)
det(type-7, the-6)
dobj(Use-5, type-7)
nsubjpass(transformed-19, Promise-8)
nsubj:xsubj(service-22, Promise-8)
case(Array-11, instead-9)
mwe(instead-9, of-10)
nmod:instead_of(Promise-8, Array-11)
dep(Promise-8, service-13)
compound(<number>-16, Array-15)
dep(service-13, <number>-16)
auxpass(transformed-19, is-18)
acl:relcl(type-7, transformed-19)
mark(service-22, to-20)
xcomp(transformed-19, service-22)
dobj(service-22, number-24)
File Name: ./test/com/google/javascript/jscomp/TypeTransformationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(martinprobst): The new type syntax resolution should be separate.
Remove the NAME case then.
Specificity: 0.923116
Content Structure:
nsubj(Remove-14, martinprobst-2)
det(resolution-9, The-5)
amod(resolution-9, new-6)
compound(resolution-9, type-7)
compound(resolution-9, syntax-8)
nsubj(separate-12, resolution-9)
aux(separate-12, should-10)
cop(separate-12, be-11)
dep(martinprobst-2, separate-12)
root(ROOT-0, Remove-14)
det(case-17, the-15)
amod(case-17, NAME-16)
dobj(Remove-14, case-17)
advmod(Remove-14, then-18)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(martinprobst): The new type syntax resolution should be separate.
Remove the NAME case then.
Specificity: 0.923116
Content Structure:
nsubj(Remove-14, martinprobst-2)
det(resolution-9, The-5)
amod(resolution-9, new-6)
compound(resolution-9, type-7)
compound(resolution-9, syntax-8)
nsubj(separate-12, resolution-9)
aux(separate-12, should-10)
cop(separate-12, be-11)
dep(martinprobst-2, separate-12)
root(ROOT-0, Remove-14)
det(case-17, the-15)
amod(case-17, NAME-16)
dobj(Remove-14, case-17)
advmod(Remove-14, then-18)
File Name: /src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-19T14:34:51-07:00
Time Of Deletion: null
Creation Commit Hash: 731ea6acef2cad56e4f306727ff9abf73a480c03
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(martinprobst): There's currently no syntax for properties in object literals that
have type declarations on them (a la `{foo: number: 12}`). This comes up for, e.g.,
function parameters with default values. Support when figured out.
Specificity: 0.99964
Content Structure:
nsubj(Support-48, martinprobst-2)
expl('s-6, There-5)
dep(martinprobst-2, 's-6)
advmod('s-6, currently-7)
neg(syntax-9, no-8)
nsubj('s-6, syntax-9)
case(properties-11, for-10)
nmod:for(syntax-9, properties-11)
case(literals-14, in-12)
compound(literals-14, object-13)
nmod:in(syntax-9, literals-14)
case(declarations-18, that-15)
dep(type-17, have-16)
amod(declarations-18, type-17)
nmod:that(literals-14, declarations-18)
case(them-20, on-19)
nmod:on(literals-14, them-20)
dep(la-23, a-22)
nmod(them-20, la-23)
dep(them-20, foo-26)
dep(foo-26, number-28)
dep(number-28, 12-30)
nsubj(comes-36, This-35)
ccomp(function-42, comes-36)
compound:prt(comes-36, up-37)
nmod(comes-36, for-38)
xcomp(comes-36, e.g.-40)
parataxis(Support-48, function-42)
nsubj(function-42, parameters-43)
case(values-46, with-44)
compound(values-46, default-45)
nmod:with(parameters-43, values-46)
root(ROOT-0, Support-48)
advmod(figured-50, when-49)
advcl(Support-48, figured-50)
compound:prt(figured-50, out-51)
File Name: ./src/com/google/javascript/jscomp/CodeGenerator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(martinprobst): the test below asserts incorrect behavior for backwards compatibility.
Specificity: 0.781339
Content Structure:
dep(asserts-8, martinprobst-2)
det(test-6, the-5)
nmod:npmod(below-7, test-6)
advmod(asserts-8, below-7)
root(ROOT-0, asserts-8)
amod(behavior-10, incorrect-9)
dobj(asserts-8, behavior-10)
case(compatibility-13, for-11)
amod(compatibility-13, backwards-12)
nmod:for(behavior-10, compatibility-13)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mattloring): Allow code points greater than the size of a char
Specificity: 0.812582
Content Structure:
root(ROOT-0, mattloring-2)
amod(points-7, Allow-5)
compound(points-7, code-6)
dep(mattloring-2, points-7)
amod(points-7, greater-8)
case(size-11, than-9)
det(size-11, the-10)
nmod:than(greater-8, size-11)
case(char-14, of-12)
det(char-14, a-13)
nmod:of(size-11, char-14)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mattloring): copy existing suppressions.
Specificity: 0.663739
Content Structure:
dep(copy-5, mattloring-2)
root(ROOT-0, copy-5)
amod(suppressions-7, existing-6)
dobj(copy-5, suppressions-7)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mattloring): remove this suppression once we can optimize the switch statement to
remove unused cases.
Specificity: 0.877153
Content Structure:
root(ROOT-0, mattloring-2)
dep(mattloring-2, remove-5)
det(suppression-7, this-6)
dobj(remove-5, suppression-7)
mark(optimize-11, once-8)
nsubj(optimize-11, we-9)
aux(optimize-11, can-10)
advcl(remove-5, optimize-11)
det(statement-14, the-12)
compound(statement-14, switch-13)
dobj(optimize-11, statement-14)
mark(remove-16, to-15)
advcl(optimize-11, remove-16)
amod(cases-18, unused-17)
dobj(remove-16, cases-18)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(michaelthomas): Consider checking all children, but watch out for return statements
that could short-circuit the clinit.
Specificity: 0.904785
Content Structure:
dep(Consider-5, michaelthomas-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, checking-6)
det(children-8, all-7)
dobj(checking-6, children-8)
cc(Consider-5, but-10)
conj:but(Consider-5, watch-11)
compound:prt(watch-11, out-12)
case(statements-15, for-13)
compound(statements-15, return-14)
nmod:for(watch-11, statements-15)
nsubj(short-circuit-18, statements-15)
ref(statements-15, that-16)
aux(short-circuit-18, could-17)
acl:relcl(statements-15, short-circuit-18)
det(clinit-20, the-19)
dobj(short-circuit-18, clinit-20)
File Name: ./src/com/google/javascript/jscomp/J2clClinitPrunerPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(michaelthomas): Prune clinit calls in functions, if previous functions or the immediate
next function guarantees clinit call. With that we won't need this pass.
Specificity: 0.981829
Content Structure:
dep(Prune-5, michaelthomas-2)
root(ROOT-0, Prune-5)
amod(calls-7, clinit-6)
dobj(Prune-5, calls-7)
case(functions-9, in-8)
nmod:in(calls-7, functions-9)
mark(guarantees-19, if-11)
amod(functions-13, previous-12)
nsubj(guarantees-19, functions-13)
cc(functions-13, or-14)
det(function-18, the-15)
amod(function-18, immediate-16)
amod(function-18, next-17)
conj:or(functions-13, function-18)
nsubj(guarantees-19, function-18)
advcl(Prune-5, guarantees-19)
amod(call-21, clinit-20)
dobj(guarantees-19, call-21)
mark(need-28, With-23)
mark(need-28, that-24)
nsubj(need-28, we-25)
aux(need-28, wo-26)
neg(need-28, n't-27)
advcl(Prune-5, need-28)
det(pass-30, this-29)
dobj(need-28, pass-30)
File Name: ./src/com/google/javascript/jscomp/J2clClinitPrunerPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(michaelthomas): This could be improved slightly by not assuming that any variable in the
outer scope is used in the function.
Specificity: 0.953217
Content Structure:
root(ROOT-0, michaelthomas-2)
nsubjpass(improved-8, This-5)
aux(improved-8, could-6)
auxpass(improved-8, be-7)
dep(michaelthomas-2, improved-8)
advmod(improved-8, slightly-9)
mark(assuming-12, by-10)
neg(assuming-12, not-11)
advcl(improved-8, assuming-12)
mark(used-21, that-13)
det(variable-15, any-14)
nsubjpass(used-21, variable-15)
case(scope-19, in-16)
det(scope-19, the-17)
amod(scope-19, outer-18)
nmod:in(variable-15, scope-19)
auxpass(used-21, is-20)
ccomp(assuming-12, used-21)
case(function-24, in-22)
det(function-24, the-23)
nmod:in(used-21, function-24)
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Add matchers for:
- Constructor with argument types
- Function call with argument types
- Function definitions.
- Property definitions, references
- IsStatic
- JsDocMatcher
Specificity: 0.988693
Content Structure:
root(ROOT-0, mknichel-2)
amod(matchers-6, Add-5)
dep(mknichel-2, matchers-6)
case(call-16, for-7)
dep(call-16, Constructor-10)
case(types-13, with-11)
compound(types-13, argument-12)
nmod:with(Constructor-10, types-13)
amod(call-16, Function-15)
nmod:for(matchers-6, call-16)
case(types-19, with-17)
compound(types-19, argument-18)
nmod:with(call-16, types-19)
amod(definitions-22, Function-21)
dep(mknichel-2, definitions-22)
compound(definitions-26, Property-25)
parataxis(mknichel-2, definitions-26)
appos(definitions-26, references-28)
dep(definitions-26, IsStatic-30)
dep(IsStatic-30, JsDocMatcher-32)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Figure out the best way to output the typecast.
Specificity: 0.802723
Content Structure:
root(ROOT-0, mknichel-2)
dep(mknichel-2, Figure-5)
case(way-9, out-6)
det(way-9, the-7)
amod(way-9, best-8)
nmod:out(Figure-5, way-9)
case(output-11, to-10)
nmod:to(way-9, output-11)
det(typecast-13, the-12)
dep(Figure-5, typecast-13)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Figure out which node is the best to return for this
function: the GETPROP node, or the ASSIGN node when the property is
being assigned to.
Specificity: 0.994075
Content Structure:
dep(node-25, mknichel-2)
nsubj(best-11, Figure-5)
nsubj(node-25, Figure-5)
dep(Figure-5, out-6)
ref(Figure-5, which-7)
advmod(best-11, node-8)
cop(best-11, is-9)
det(best-11, the-10)
acl:relcl(Figure-5, best-11)
mark(return-13, to-12)
dep(best-11, return-13)
case(function-16, for-14)
det(function-16, this-15)
nmod:for(return-13, function-16)
det(node-20, the-18)
compound(node-20, GETPROP-19)
conj:or(Figure-5, node-20)
nsubj(best-11, node-20)
nsubj(node-25, node-20)
cc(Figure-5, or-22)
det(ASSIGN-24, the-23)
conj:or(Figure-5, ASSIGN-24)
nsubj(best-11, ASSIGN-24)
nsubj(node-25, ASSIGN-24)
root(ROOT-0, node-25)
advmod(assigned-31, when-26)
det(property-28, the-27)
nsubjpass(assigned-31, property-28)
nsubj:xsubj(to-32, property-28)
aux(assigned-31, is-29)
auxpass(assigned-31, being-30)
advcl(node-25, assigned-31)
xcomp(assigned-31, to-32)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Fix all the formatting problems with this code.
How does this play with goog.scope?
Specificity: 0.900141
Content Structure:
dep(Fix-5, mknichel-2)
root(ROOT-0, Fix-5)
det:predet(problems-9, all-6)
det(problems-9, the-7)
amod(problems-9, formatting-8)
dobj(Fix-5, problems-9)
case(code-12, with-10)
det(code-12, this-11)
nmod:with(Fix-5, code-12)
advmod(does-15, How-14)
dep(Fix-5, does-15)
det(play-17, this-16)
dobj(does-15, play-17)
case(goog.scope-19, with-18)
nmod:with(play-17, goog.scope-19)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Function declarations need to be rewritten to match the original source
instead of being assigned to a local variable with duplicate JS Doc.
Specificity: 0.976535
Content Structure:
root(ROOT-0, mknichel-2)
compound(declarations-6, Function-5)
nsubj(need-7, declarations-6)
nsubjpass:xsubj(rewritten-10, declarations-6)
dep(mknichel-2, need-7)
mark(rewritten-10, to-8)
auxpass(rewritten-10, be-9)
xcomp(need-7, rewritten-10)
mark(match-12, to-11)
xcomp(rewritten-10, match-12)
det(source-15, the-13)
amod(source-15, original-14)
dobj(match-12, source-15)
mark(assigned-19, instead-16)
mwe(instead-16, of-17)
auxpass(assigned-19, being-18)
advcl(match-12, assigned-19)
case(variable-23, to-20)
det(variable-23, a-21)
amod(variable-23, local-22)
nmod:to(assigned-19, variable-23)
case(Doc-27, with-24)
compound(Doc-27, duplicate-25)
compound(Doc-27, JS-26)
nmod:with(variable-23, Doc-27)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Handle the case when functions are applied through .call or .apply.
Specificity: 0.859555
Content Structure:
dep(Handle-5, mknichel-2)
root(ROOT-0, Handle-5)
det(case-7, the-6)
nsubj(apply-17, case-7)
advmod(call-14, when-8)
nsubj(call-14, functions-9)
cop(call-14, are-10)
amod(call-14, applied-11)
amod(call-14, through-12)
acl:relcl(case-7, call-14)
cc(call-14, or-15)
ccomp(Handle-5, apply-17)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): If the symbol is not explicitly provided, find the next best
symbol from the provides in the same file.
Specificity: 0.9514
Content Structure:
root(ROOT-0, mknichel-2)
mark(provided-11, If-5)
det(symbol-7, the-6)
nsubjpass(provided-11, symbol-7)
auxpass(provided-11, is-8)
neg(provided-11, not-9)
advmod(provided-11, explicitly-10)
advcl(find-13, provided-11)
dep(mknichel-2, find-13)
det(symbol-17, the-14)
amod(symbol-17, next-15)
amod(symbol-17, best-16)
dobj(find-13, symbol-17)
case(provides-20, from-18)
det(provides-20, the-19)
nmod:from(find-13, provides-20)
case(file-24, in-21)
det(file-24, the-22)
amod(file-24, same-23)
nmod:in(provides-20, file-24)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: null
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Implement the rest of this function.
Specificity: 0.746307
Content Structure:
root(ROOT-0, mknichel-2)
dep(mknichel-2, Implement-5)
det(rest-7, the-6)
dep(Implement-5, rest-7)
case(function-10, of-8)
det(function-10, this-9)
nmod:of(rest-7, function-10)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Make NodeUtil.getBestJSDoc public and use that.
Specificity: 0.860116
Content Structure:
dep(Make-5, mknichel-2)
root(ROOT-0, Make-5)
amod(public-7, NodeUtil.getBestJSDoc-6)
dobj(Make-5, public-7)
cc(Make-5, and-8)
conj:and(Make-5, use-9)
dobj(use-9, that-10)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Make sure all this code works with goog.scope.
Specificity: 0.771818
Content Structure:
dep(Make-5, mknichel-2)
root(ROOT-0, Make-5)
xcomp(Make-5, sure-6)
det:predet(code-9, all-7)
det(code-9, this-8)
nsubj(works-10, code-9)
ccomp(sure-6, works-10)
case(goog.scope-12, with-11)
nmod:with(works-10, goog.scope-12)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Make sure this works with the following cases:
ns = {
/** @constructor
name: function() {}
}
Specificity: 0.979756
Content Structure:
root(ROOT-0, mknichel-2)
dep(mknichel-2, Make-5)
xcomp(Make-5, sure-6)
nsubj(works-8, this-7)
ccomp(sure-6, works-8)
case(cases-12, with-9)
det(cases-12, the-10)
amod(cases-12, following-11)
nmod:with(works-8, cases-12)
advmod(works-8, ns-14)
nmod:npmod(ns-14, =-15)
dep(name-20, **-18)
compound(name-20, @constructor-19)
dep(=-15, name-20)
compound(-LRB--23, function-22)
dep(name-20, -LRB--23)
appos(=-15, -RCB--26)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Make this a SmallTest by disabling threads in the JS Compiler.
Specificity: 0.899117
Content Structure:
dep(Make-5, mknichel-2)
root(ROOT-0, Make-5)
det:predet(SmallTest-8, this-6)
det(SmallTest-8, a-7)
dobj(Make-5, SmallTest-8)
case(threads-11, by-9)
amod(threads-11, disabling-10)
nmod:by(Make-5, threads-11)
case(Compiler-15, in-12)
det(Compiler-15, the-13)
compound(Compiler-15, JS-14)
nmod:in(threads-11, Compiler-15)
File Name: ./test/com/google/javascript/refactoring/RefasterJsScannerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Make this test case work.
input = "ns = {\n"
+ "  /** @constructor */\n"
+ "  Foo: function() {}\n"
Specificity: 0.996229
Content Structure:
dep(n-40, mknichel-2)
parataxis(n-40, Make-5)
det(case-8, this-6)
compound(case-8, test-7)
dobj(Make-5, case-8)
nsubj(input-11, work-9)
parataxis(n-40, input-11)
case(*-25, =-12)
nsubj(+-20, ns-14)
dep(+-20, =-15)
compound(+-20, \-17)
compound(+-20, n-18)
dep(*-25, +-20)
dep(*-25, **-23)
compound(*-25, @constructor-24)
nmod:=(input-11, *-25)
parataxis(*-25, n-28)
compound(Foo-32, +-30)
dep(n-28, Foo-32)
dep(n-28, function-34)
compound(-LCB--37, -RRB--36)
appos(function-34, -LCB--37)
nsubj(n-40, \-39)
root(ROOT-0, n-40)
File Name: ./test/com/google/javascript/refactoring/MatchersTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Move this logic and the start position logic to a helper function
so that it can be reused in other methods.
Specificity: 0.960413
Content Structure:
root(ROOT-0, mknichel-2)
dep(mknichel-2, Move-5)
det(logic-7, this-6)
dobj(Move-5, logic-7)
cc(Move-5, and-8)
det(logic-12, the-9)
compound(logic-12, start-10)
compound(logic-12, position-11)
nsubj(function-16, logic-12)
case(helper-15, to-13)
det(helper-15, a-14)
nmod:to(logic-12, helper-15)
dep(mknichel-2, function-16)
conj:and(Move-5, function-16)
mark(reused-22, so-17)
mwe(so-17, that-18)
nsubjpass(reused-22, it-19)
aux(reused-22, can-20)
auxpass(reused-22, be-21)
advcl(function-16, reused-22)
case(methods-25, in-23)
amod(methods-25, other-24)
nmod:in(reused-22, methods-25)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Move this logic to CodePrinter.
Specificity: 0.779043
Content Structure:
dep(Move-5, mknichel-2)
root(ROOT-0, Move-5)
det(logic-7, this-6)
dobj(Move-5, logic-7)
case(CodePrinter-9, to-8)
nmod:to(Move-5, CodePrinter-9)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Replace this logic with a function argument
Matcher when it exists.
Specificity: 0.851734
Content Structure:
dep(Replace-5, mknichel-2)
root(ROOT-0, Replace-5)
det(logic-7, this-6)
dobj(Replace-5, logic-7)
case(Matcher-12, with-8)
det(Matcher-12, a-9)
compound(Matcher-12, function-10)
compound(Matcher-12, argument-11)
nmod:with(Replace-5, Matcher-12)
advmod(exists-15, when-13)
nsubj(exists-15, it-14)
advcl(Replace-5, exists-15)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Support matching:
foo.prototype = {
bar: 1
Specificity: 0.783201
Content Structure:
root(ROOT-0, mknichel-2)
compound(matching-6, Support-5)
dep(mknichel-2, matching-6)
amod(=-9, foo.prototype-8)
dep(matching-6, =-9)
dep(=-9, bar-11)
dep(bar-11, 1-13)
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): Use the JSDocInfoParser to find the end of the type declaration. This
would also handle multiple lines, and record types (which contain '{')
Specificity: 0.993176
Content Structure:
root(ROOT-0, mknichel-2)
dep(mknichel-2, Use-5)
det(JSDocInfoParser-7, the-6)
dobj(Use-5, JSDocInfoParser-7)
nsubj:xsubj(find-9, JSDocInfoParser-7)
mark(find-9, to-8)
xcomp(Use-5, find-9)
det(end-11, the-10)
dobj(find-9, end-11)
case(type-14, of-12)
det(type-14, the-13)
nmod:of(end-11, type-14)
compound(This-17, declaration-15)
nsubj(handle-20, This-17)
aux(handle-20, would-18)
advmod(handle-20, also-19)
acl:relcl(type-14, handle-20)
amod(lines-22, multiple-21)
dobj(handle-20, lines-22)
cc(type-14, and-24)
compound(types-26, record-25)
nmod:of(end-11, types-26)
conj:and(type-14, types-26)
nsubj(contain-29, which-28)
dep(types-26, contain-29)
dobj(contain-29, -LCB--31)
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mknichel): When types are used in templates that do not appear in the
compilation unit being processed, the template type will be a named type
that resolves to unknown instead of being a no resolved type. This should
be fixed in the compiler such that it resolves to a no resolved type, and
then this code can be simplified to use that.
Specificity: 0.999982
Content Structure:
nsubjpass(fixed-45, mknichel-2)
advmod(used-8, When-5)
nsubjpass(used-8, types-6)
auxpass(used-8, are-7)
advcl(type-29, used-8)
case(templates-10, in-9)
nmod:in(used-8, templates-10)
nsubj(appear-14, templates-10)
ref(templates-10, that-11)
aux(appear-14, do-12)
neg(appear-14, not-13)
acl:relcl(templates-10, appear-14)
case(unit-18, in-15)
det(unit-18, the-16)
compound(unit-18, compilation-17)
nmod:in(appear-14, unit-18)
auxpass(processed-20, being-19)
acl(unit-18, processed-20)
det(type-24, the-22)
amod(type-24, template-23)
nsubj(type-29, type-24)
aux(type-29, will-25)
cop(type-29, be-26)
det(type-29, a-27)
amod(type-29, named-28)
dep(mknichel-2, type-29)
nsubj(resolves-31, type-29)
ref(type-29, that-30)
acl:relcl(type-29, resolves-31)
case(unknown-33, to-32)
nmod:to(resolves-31, unknown-33)
mark(type-40, instead-34)
mwe(instead-34, of-35)
cop(type-40, being-36)
det(type-40, a-37)
advmod(resolved-39, no-38)
amod(type-40, resolved-39)
advcl(resolves-31, type-40)
nsubjpass(fixed-45, This-42)
aux(fixed-45, should-43)
auxpass(fixed-45, be-44)
root(ROOT-0, fixed-45)
case(compiler-48, in-46)
det(compiler-48, the-47)
nmod:in(fixed-45, compiler-48)
amod(compiler-48, such-49)
mark(resolves-52, that-50)
nsubj(resolves-52, it-51)
ccomp(fixed-45, resolves-52)
case(type-57, to-53)
det(type-57, a-54)
advmod(resolved-56, no-55)
amod(type-57, resolved-56)
nmod:to(resolves-52, type-57)
cc(fixed-45, and-59)
advmod(simplified-65, then-60)
det(code-62, this-61)
nsubj(simplified-65, code-62)
nsubj:xsubj(use-67, code-62)
aux(simplified-65, can-63)
cop(simplified-65, be-64)
conj:and(fixed-45, simplified-65)
mark(use-67, to-66)
xcomp(simplified-65, use-67)
dobj(use-67, that-68)
File Name: ./src/com/google/javascript/jscomp/TemplateAstMatcher.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(mlourenco): Ideally this would be in getChecks() instead of getOptimizations(). But
for that it needs to understand constant properties as well. See b/31301233#10.
Needs to happen after inferConsts and collapseProperties. Detects whether invocations of
the method goog.string.Const.from are done with an argument which is a string literal.
Specificity: 0.999945
Content Structure:
dep(Ideally-5, mlourenco-2)
root(ROOT-0, Ideally-5)
nsubj(getChecks-10, this-6)
aux(getChecks-10, would-7)
cop(getChecks-10, be-8)
case(getChecks-10, in-9)
dep(Ideally-5, getChecks-10)
dep(getChecks-10, -RRB--12)
case(-LRB--16, instead-13)
mwe(instead-13, of-14)
amod(-LRB--16, getOptimizations-15)
nmod:instead_of(-RRB--12, -LRB--16)
cc(getChecks-10, But-19)
case(that-21, for-20)
nmod:for(needs-23, that-21)
nsubj(needs-23, it-22)
nsubj:xsubj(understand-25, it-22)
nsubj(Detects-44, needs-23)
mark(understand-25, to-24)
xcomp(needs-23, understand-25)
amod(properties-27, constant-26)
dobj(understand-25, properties-27)
dep(See-31, as-28)
advmod(See-31, well-29)
advcl(understand-25, See-31)
nsubj(See-31, b/31301233-32)
compound(10-34, #-33)
amod(b/31301233-32, 10-34)
dep(understand-25, Needs-36)
mark(happen-38, to-37)
dep(Needs-36, happen-38)
case(inferConsts-40, after-39)
nmod:after(happen-38, inferConsts-40)
cc(inferConsts-40, and-41)
nmod:after(happen-38, collapseProperties-42)
conj:and(inferConsts-40, collapseProperties-42)
dep(Ideally-5, Detects-44)
conj:but(getChecks-10, Detects-44)
mark(done-52, whether-45)
nsubjpass(done-52, invocations-46)
case(goog.string.Const.from-50, of-47)
det(goog.string.Const.from-50, the-48)
compound(goog.string.Const.from-50, method-49)
nmod:of(invocations-46, goog.string.Const.from-50)
auxpass(done-52, are-51)
ccomp(Detects-44, done-52)
case(argument-55, with-53)
det(argument-55, an-54)
nmod:with(done-52, argument-55)
nsubj(literal-60, argument-55)
ref(argument-55, which-56)
cop(literal-60, is-57)
det(literal-60, a-58)
compound(literal-60, string-59)
acl:relcl(argument-55, literal-60)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Add GWT compatible super-source replacement


Specificity: 0.792804
Content Structure:
root(ROOT-0, moz-2)
compound(GWT-6, Add-5)
dep(moz-2, GWT-6)
amod(replacement-9, compatible-7)
amod(replacement-9, super-source-8)
dep(GWT-6, replacement-9)
File Name: ./src/com/google/javascript/jscomp/OutputCharsetEncoder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Add a GWT-compatible version in the super-source directory.

Specificity: 0.815763
Content Structure:
dep(Add-5, moz-2)
root(ROOT-0, Add-5)
det(version-8, a-6)
amod(version-8, GWT-compatible-7)
dobj(Add-5, version-8)
case(directory-12, in-9)
det(directory-12, the-10)
amod(directory-12, super-source-11)
nmod:in(version-8, directory-12)
File Name: ./src/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Convert this to an if statement for better optimization
Specificity: 0.794303
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Convert-5)
dep(Convert-5, this-6)
case(statement-10, to-7)
det(statement-10, an-8)
amod(statement-10, if-9)
nmod:to(Convert-5, statement-10)
case(optimization-13, for-11)
amod(optimization-13, better-12)
nmod:for(statement-10, optimization-13)
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Currently we only record ES6 classes and typedefs,
need to handle other kinds of type declarations too.
Specificity: 0.942885
Content Structure:
nsubj(need-14, moz-2)
nsubj:xsubj(handle-16, moz-2)
advmod(moz-2, Currently-5)
dep(moz-2, we-6)
advmod(classes-10, only-7)
amod(classes-10, record-8)
compound(classes-10, ES6-9)
dep(we-6, classes-10)
cc(classes-10, and-11)
dep(we-6, typedefs-12)
conj:and(classes-10, typedefs-12)
root(ROOT-0, need-14)
mark(handle-16, to-15)
xcomp(need-14, handle-16)
amod(kinds-18, other-17)
dobj(handle-16, kinds-18)
case(declarations-21, of-19)
compound(declarations-21, type-20)
nmod:of(kinds-18, declarations-21)
advmod(handle-16, too-22)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Enable this
Specificity: 0.69099
Content Structure:
root(ROOT-0, moz-2)
dep(this-6, Enable-5)
dep(moz-2, this-6)
File Name: ./test/com/google/javascript/jscomp/parsing/TypeSyntaxTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Figure out why this could be null
Specificity: 0.761784
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Figure-5)
mark(null-11, out-6)
advmod(null-11, why-7)
nsubj(null-11, this-8)
aux(null-11, could-9)
cop(null-11, be-10)
dep(moz-2, null-11)
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Figure out why we still need the special handling
Specificity: 0.795214
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Figure-5)
mark(need-10, out-6)
advmod(need-10, why-7)
nsubj(need-10, we-8)
advmod(need-10, still-9)
dep(moz-2, need-10)
det(handling-13, the-11)
amod(handling-13, special-12)
dobj(need-10, handling-13)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): For block-scoped function declaration, we should technically
warn if we are in non-strict mode and the language mode is ES5 or below.
Specificity: 0.971734
Content Structure:
root(ROOT-0, moz-2)
case(declaration-8, For-5)
amod(declaration-8, block-scoped-6)
compound(declaration-8, function-7)
nmod:for(warn-13, declaration-8)
nsubj(warn-13, we-10)
aux(warn-13, should-11)
advmod(warn-13, technically-12)
dep(moz-2, warn-13)
mark(mode-19, if-14)
nsubj(mode-19, we-15)
cop(mode-19, are-16)
case(mode-19, in-17)
amod(mode-19, non-strict-18)
advcl(warn-13, mode-19)
cc(warn-13, and-20)
det(mode-23, the-21)
compound(mode-23, language-22)
nsubj(ES5-25, mode-23)
cop(ES5-25, is-24)
dep(moz-2, ES5-25)
conj:and(warn-13, ES5-25)
cc(ES5-25, or-26)
advmod(ES5-25, below-27)
File Name: ./test/com/google/javascript/jscomp/lint/CheckUselessBlocksTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Gate this behind languageMode=ES3.
Specificity: 0.801672
Content Structure:
dep(Gate-5, moz-2)
root(ROOT-0, Gate-5)
det(languageMode-8, this-6)
compound(languageMode-8, behind-7)
nsubj(ES3-10, languageMode-8)
dep(ES3-10, =-9)
ccomp(Gate-5, ES3-10)
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Handle more ES6 features, such as default parameters.

Specificity: 0.826061
Content Structure:
root(ROOT-0, moz-2)
advmod(more-6, Handle-5)
amod(features-8, more-6)
compound(features-8, ES6-7)
dep(moz-2, features-8)
case(parameters-13, such-10)
mwe(such-10, as-11)
compound(parameters-13, default-12)
nmod:such_as(moz-2, parameters-13)
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): If we knew the named value wouldn't be NaN, it would be nice to handle
LE and GE. We should use type information if available here.
Specificity: 0.992585
Content Structure:
root(ROOT-0, moz-2)
mark(knew-7, If-5)
nsubj(knew-7, we-6)
advcl(nice-19, knew-7)
det(value-10, the-8)
amod(value-10, named-9)
nsubj(NaN-14, value-10)
aux(NaN-14, would-11)
neg(NaN-14, n't-12)
cop(NaN-14, be-13)
ccomp(knew-7, NaN-14)
nsubj(nice-19, it-16)
nsubj:xsubj(handle-21, it-16)
aux(nice-19, would-17)
cop(nice-19, be-18)
dep(moz-2, nice-19)
mark(handle-21, to-20)
xcomp(nice-19, handle-21)
dobj(handle-21, LE-22)
cc(LE-22, and-23)
dobj(handle-21, GE-24)
conj:and(LE-22, GE-24)
nsubj(use-28, We-26)
aux(use-28, should-27)
ccomp(nice-19, use-28)
compound(information-30, type-29)
dobj(use-28, information-30)
mark(available-32, if-31)
advcl(use-28, available-32)
advmod(available-32, here-33)
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Implement this using GWT's emulation of ListenableFuture and friends
Specificity: 0.878147
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Implement-5)
nsubj(using-7, this-6)
dep(Implement-5, using-7)
nmod:poss(emulation-10, GWT-8)
case(GWT-8, 's-9)
dobj(using-7, emulation-10)
case(ListenableFuture-12, of-11)
nmod:of(emulation-10, ListenableFuture-12)
cc(ListenableFuture-12, and-13)
nmod:of(emulation-10, friends-14)
conj:and(ListenableFuture-12, friends-14)
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/jscomp/PrebuildAst.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Implement.
Specificity: 0.666638
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Implement-5)
File Name: ./src/com/google/javascript/jscomp/Es6TypedToEs6Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Investigate whether we need to return early in this unlikely situation.
Specificity: 0.838309
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Investigate-5)
mark(need-8, whether-6)
nsubj(need-8, we-7)
nsubj:xsubj(return-10, we-7)
dep(Investigate-5, need-8)
mark(return-10, to-9)
xcomp(need-8, return-10)
advmod(return-10, early-11)
case(situation-15, in-12)
det(situation-15, this-13)
amod(situation-15, unlikely-14)
nmod:in(return-10, situation-15)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Investigate why this could be null
Specificity: 0.744366
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Investigate-5)
advmod(null-10, why-6)
nsubj(null-10, this-7)
aux(null-10, could-8)
cop(null-10, be-9)
acl:relcl(Investigate-5, null-10)
File Name: ./src/com/google/javascript/jscomp/RemoveSuperMethodsPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): It's not yet clear if we need another kind of NameContext for block scopes
in ES6, use anonymous node for now and investigate later.
Specificity: 0.985699
Content Structure:
root(ROOT-0, moz-2)
nsubj(clear-9, It-5)
cop(clear-9, 's-6)
neg(clear-9, not-7)
advmod(clear-9, yet-8)
dep(moz-2, clear-9)
mark(need-12, if-10)
nsubj(need-12, we-11)
nsubj(use-23, we-11)
nsubj(investigate-29, we-11)
advcl(clear-9, need-12)
det(kind-14, another-13)
dobj(need-12, kind-14)
case(NameContext-16, of-15)
nmod:of(kind-14, NameContext-16)
case(scopes-19, for-17)
compound(scopes-19, block-18)
nmod:for(need-12, scopes-19)
case(ES6-21, in-20)
nmod:in(scopes-19, ES6-21)
advcl(clear-9, use-23)
conj:and(need-12, use-23)
amod(node-25, anonymous-24)
dobj(use-23, node-25)
case(now-27, for-26)
nmod:for(use-23, now-27)
cc(need-12, and-28)
advcl(clear-9, investigate-29)
conj:and(need-12, investigate-29)
advmod(investigate-29, later-30)
File Name: ./src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Make this GWT compatible.


Specificity: 0.796508
Content Structure:
dep(Make-5, moz-2)
root(ROOT-0, Make-5)
det(GWT-7, this-6)
nsubj(compatible-8, GWT-7)
xcomp(Make-5, compatible-8)
File Name: ./src/com/google/javascript/jscomp/XtbMessageBundle.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Maybe correct the arity of the function type here.
Specificity: 0.803002
Content Structure:
dep(correct-6, moz-2)
advmod(correct-6, Maybe-5)
root(ROOT-0, correct-6)
det(arity-8, the-7)
dobj(correct-6, arity-8)
case(type-12, of-9)
det(type-12, the-10)
compound(type-12, function-11)
nmod:of(arity-8, type-12)
advmod(correct-6, here-13)
File Name: ./src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Remove this once we stop supporting IE8.
Specificity: 0.806843
Content Structure:
dep(Remove-5, moz-2)
root(ROOT-0, Remove-5)
dobj(Remove-5, this-6)
mark(stop-9, once-7)
nsubj(stop-9, we-8)
advcl(Remove-5, stop-9)
xcomp(stop-9, supporting-10)
dobj(supporting-10, IE8-11)
File Name: ./src/com/google/javascript/jscomp/ScopedAliases.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Removing methods annotated with @wizaction have caused internal breakage.
Figure out what {@link WizPass} might have done wrong and maybe remove this bailout.
Specificity: 0.987179
Content Structure:
dep(caused-11, moz-2)
amod(methods-6, Removing-5)
nsubj(caused-11, methods-6)
acl(methods-6, annotated-7)
case(@wizaction-9, with-8)
nmod:with(annotated-7, @wizaction-9)
aux(caused-11, have-10)
root(ROOT-0, caused-11)
compound(Figure-15, internal-12)
compound(Figure-15, breakage-13)
dobj(caused-11, Figure-15)
mark(done-24, out-16)
dobj(wrong-25, what-17)
compound(WizPass-20, @link-19)
nsubj(done-24, WizPass-20)
nsubj(remove-28, WizPass-20)
aux(done-24, might-22)
aux(done-24, have-23)
acl(Figure-15, done-24)
xcomp(done-24, wrong-25)
cc(done-24, and-26)
advmod(remove-28, maybe-27)
acl(Figure-15, remove-28)
conj:and(done-24, remove-28)
det(bailout-30, this-29)
dobj(remove-28, bailout-30)
File Name: ./src/com/google/javascript/jscomp/RemoveSuperMethodsPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): See if we can avoid generating duplicate @return's
Specificity: 0.771974
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, See-5)
mark(avoid-9, if-6)
nsubj(avoid-9, we-7)
aux(avoid-9, can-8)
advcl(See-5, avoid-9)
xcomp(avoid-9, generating-10)
compound(@return-12, duplicate-11)
dobj(generating-10, @return-12)
case(@return-12, 's-13)
File Name: ./test/com/google/javascript/jscomp/ScopedAliasesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): See if we can remove the bypass for "goog"
Specificity: 0.794069
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, See-5)
mark(remove-9, if-6)
nsubj(remove-9, we-7)
aux(remove-9, can-8)
advcl(See-5, remove-9)
det(bypass-11, the-10)
dobj(remove-9, bypass-11)
case(goog-14, for-12)
advcl(remove-9, goog-14)
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Support canceling all parsing on the first halting error
Specificity: 0.794151
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Support-5)
acl(Support-5, canceling-6)
det(parsing-8, all-7)
dobj(canceling-6, parsing-8)
case(error-13, on-9)
det(error-13, the-10)
amod(error-13, first-11)
amod(error-13, halting-12)
nmod:on(parsing-8, error-13)
File Name: ./src/com/google/javascript/jscomp/PrebuildAst.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Support full range of valid characters.
Specificity: 0.746678
Content Structure:
root(ROOT-0, moz-2)
compound(range-7, Support-5)
amod(range-7, full-6)
dep(moz-2, range-7)
case(characters-10, of-8)
amod(characters-10, valid-9)
nmod:of(range-7, characters-10)
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): There's no need to tag methods with @abstract in interfaces, maybe give a warning
on this.
Specificity: 0.927526
Content Structure:
root(ROOT-0, moz-2)
expl('s-6, There-5)
dep(moz-2, 's-6)
neg(need-8, no-7)
nsubj('s-6, need-8)
mark(tag-10, to-9)
acl(need-8, tag-10)
dobj(tag-10, methods-11)
case(@abstract-13, with-12)
nmod:with(tag-10, @abstract-13)
case(interfaces-15, in-14)
nmod:in(@abstract-13, interfaces-15)
advmod(give-18, maybe-17)
dep(tag-10, give-18)
det(warning-20, a-19)
dobj(give-18, warning-20)
case(this-22, on-21)
nmod:on(give-18, this-22)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): This is to show that the current optimization might break if the input has block
scoped declarations. We will need to fix the logic for removing blocks to account for this.
Specificity: 0.99415
Content Structure:
dep(need-25, moz-2)
parataxis(need-25, This-5)
acl:relcl(This-5, is-6)
mark(show-8, to-7)
xcomp(is-6, show-8)
mark(break-14, that-9)
det(optimization-12, the-10)
amod(optimization-12, current-11)
nsubj(break-14, optimization-12)
aux(break-14, might-13)
ccomp(show-8, break-14)
mark(block-19, if-15)
det(input-17, the-16)
nsubj(block-19, input-17)
dep(block-19, has-18)
advcl(break-14, block-19)
amod(declarations-21, scoped-20)
dobj(block-19, declarations-21)
nsubj(need-25, We-23)
nsubj:xsubj(fix-27, We-23)
aux(need-25, will-24)
root(ROOT-0, need-25)
mark(fix-27, to-26)
xcomp(need-25, fix-27)
det(logic-29, the-28)
dobj(fix-27, logic-29)
mark(removing-31, for-30)
advcl(fix-27, removing-31)
dobj(removing-31, blocks-32)
mark(account-34, to-33)
advcl(removing-31, account-34)
case(this-36, for-35)
nmod:for(account-34, this-36)
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): This needs to change when we optimize for ES6. The block might need to be
preserved in the presence of block-scoped declarations.
Specificity: 0.974724
Content Structure:
root(ROOT-0, moz-2)
nsubj(needs-6, This-5)
nsubj:xsubj(change-8, This-5)
dep(moz-2, needs-6)
mark(change-8, to-7)
xcomp(needs-6, change-8)
advmod(optimize-11, when-9)
nsubj(optimize-11, we-10)
advcl(change-8, optimize-11)
case(ES6-13, for-12)
nmod:for(optimize-11, ES6-13)
det(block-16, The-15)
nsubj(need-18, block-16)
nsubjpass:xsubj(preserved-21, block-16)
aux(need-18, might-17)
acl:relcl(ES6-13, need-18)
mark(preserved-21, to-19)
auxpass(preserved-21, be-20)
xcomp(need-18, preserved-21)
case(presence-24, in-22)
det(presence-24, the-23)
nmod:in(preserved-21, presence-24)
case(declarations-27, of-25)
amod(declarations-27, block-scoped-26)
nmod:of(presence-24, declarations-27)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): This should not call getScope(). We should find the root of the closest hoist
scope and effectively getScope() from there, which avoids scanning inner scopes that might
not be needed.
Specificity: 0.998116
Content Structure:
root(ROOT-0, moz-2)
nsubj(call-8, This-5)
aux(call-8, should-6)
neg(call-8, not-7)
dep(moz-2, call-8)
dobj(call-8, getScope-9)
dep(find-15, -RRB--11)
nsubj(find-15, We-13)
nsubj(getScope-25, We-13)
aux(find-15, should-14)
parataxis(call-8, find-15)
det(root-17, the-16)
dobj(find-15, root-17)
case(scope-22, of-18)
det(scope-22, the-19)
amod(scope-22, closest-20)
compound(scope-22, hoist-21)
nmod:of(root-17, scope-22)
cc(find-15, and-23)
advmod(getScope-25, effectively-24)
parataxis(call-8, getScope-25)
conj:and(find-15, getScope-25)
dobj(getScope-25, -LRB--26)
case(there-29, from-28)
nmod:from(call-8, there-29)
nsubj(avoids-32, there-29)
ref(there-29, which-31)
acl:relcl(there-29, avoids-32)
xcomp(avoids-32, scanning-33)
amod(scopes-35, inner-34)
dobj(scanning-33, scopes-35)
nsubjpass(needed-40, scopes-35)
ref(scopes-35, that-36)
aux(needed-40, might-37)
neg(needed-40, not-38)
auxpass(needed-40, be-39)
acl:relcl(scopes-35, needed-40)
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Try to use MakeDeclaredNamesUnique

@author moz@google.com (Michael Zhou)

Specificity: 0.916576
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, Try-5)
mark(use-7, to-6)
xcomp(Try-5, use-7)
amod(moz@google.com-10, MakeDeclaredNamesUnique-8)
compound(moz@google.com-10, @author-9)
dobj(use-7, moz@google.com-10)
compound(Zhou-13, Michael-12)
appos(moz@google.com-10, Zhou-13)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclaration.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): Use type information if allowed.
Specificity: 0.729397
Content Structure:
root(ROOT-0, moz-2)
compound(information-7, Use-5)
compound(information-7, type-6)
dep(moz-2, information-7)
mark(allowed-9, if-8)
dep(information-7, allowed-9)
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(moz): We should always add a PARAM_LIST in JsDocInfoParser
Specificity: 0.95399
Content Structure:
root(ROOT-0, moz-2)
dep(moz-2, We-5)
aux(add-8, should-6)
advmod(add-8, always-7)
acl:relcl(We-5, add-8)
det(PARAM_LIST-10, a-9)
dobj(add-8, PARAM_LIST-10)
case(JsDocInfoParser-12, in-11)
nmod:in(PARAM_LIST-10, JsDocInfoParser-12)
File Name: ./src/com/google/javascript/jscomp/Es6TypedToEs6Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nick): Get rid of the knownConstants argument in favor of using
scope with InferConsts.
Specificity: 0.901606
Content Structure:
dep(Get-5, nick-2)
root(ROOT-0, Get-5)
xcomp(Get-5, rid-6)
case(argument-10, of-7)
det(argument-10, the-8)
amod(argument-10, knownConstants-9)
nmod:of(rid-6, argument-10)
case(favor-12, in-11)
nmod:in(argument-10, favor-12)
mark(using-14, of-13)
acl(favor-12, using-14)
dobj(using-14, scope-15)
case(InferConsts-17, with-16)
nmod:with(using-14, InferConsts-17)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nick): Remove this. This should already be handled by
normal type resolution.
Specificity: 0.860957
Content Structure:
dep(handled-12, nick-2)
parataxis(handled-12, Remove-5)
dobj(Remove-5, this-6)
nsubjpass(handled-12, This-8)
aux(handled-12, should-9)
advmod(handled-12, already-10)
auxpass(handled-12, be-11)
root(ROOT-0, handled-12)
case(resolution-16, by-13)
amod(resolution-16, normal-14)
compound(resolution-16, type-15)
nmod:agent(handled-12, resolution-16)
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos) keep track of the conditionals in the ancestry, so
that we don't have to recrawl it.

Specificity: 0.916716
Content Structure:
nsubj(keep-4, nicksantos-2)
root(ROOT-0, keep-4)
dobj(keep-4, track-5)
case(conditionals-8, of-6)
det(conditionals-8, the-7)
nmod:of(track-5, conditionals-8)
case(ancestry-11, in-9)
det(ancestry-11, the-10)
nmod:in(conditionals-8, ancestry-11)
mark(have-18, so-13)
mwe(so-13, that-14)
nsubj(have-18, we-15)
nsubj:xsubj(recrawl-20, we-15)
aux(have-18, do-16)
neg(have-18, n't-17)
advcl(keep-4, have-18)
mark(recrawl-20, to-19)
xcomp(have-18, recrawl-20)
dobj(recrawl-20, it-21)
File Name: ./src/com/google/javascript/jscomp/CrossModuleCodeMotion.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): A lot of this code is duplicated from
TypedScopeCreatorTest. We should create a common test harness for
assertions about type information.
Specificity: 0.974971
Content Structure:
dep(duplicated-11, nicksantos-2)
det(lot-6, A-5)
nsubjpass(duplicated-11, lot-6)
case(code-9, of-7)
det(code-9, this-8)
nmod:of(lot-6, code-9)
auxpass(duplicated-11, is-10)
root(ROOT-0, duplicated-11)
case(TypedScopeCreatorTest-13, from-12)
nmod:from(duplicated-11, TypedScopeCreatorTest-13)
nsubj(create-17, We-15)
aux(create-17, should-16)
acl:relcl(TypedScopeCreatorTest-13, create-17)
det(test-20, a-18)
amod(test-20, common-19)
dobj(create-17, test-20)
dep(assertions-23, harness-21)
case(assertions-23, for-22)
advcl(create-17, assertions-23)
case(information-26, about-24)
compound(information-26, type-25)
nmod:about(assertions-23, information-26)
File Name: ./test/com/google/javascript/jscomp/InferJSDocInfoTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Add a precondition check here. People are passing
in null, but they should not be.
Specificity: 0.925287
Content Structure:
dep(passing-13, nicksantos-2)
parataxis(passing-13, Add-5)
det(check-8, a-6)
compound(check-8, precondition-7)
dobj(Add-5, check-8)
advmod(Add-5, here-9)
nsubj(passing-13, People-11)
aux(passing-13, are-12)
root(ROOT-0, passing-13)
case(null-15, in-14)
nmod:in(passing-13, null-15)
cc(be-21, but-17)
nsubj(be-21, they-18)
aux(be-21, should-19)
neg(be-21, not-20)
ccomp(passing-13, be-21)
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Add more literals
Specificity: 0.700081
Content Structure:
root(ROOT-0, nicksantos-2)
nummod(literals-7, Add-5)
advmod(Add-5, more-6)
dep(nicksantos-2, literals-7)
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Add something to check for calls of RegExp objects,
which is not supported by IE. Either say something about the return type
or warn about the non-portability of the call or both.
Specificity: 0.996447
Content Structure:
dep(say-23, nicksantos-2)
parataxis(say-23, Add-5)
dobj(Add-5, something-6)
mark(check-8, to-7)
advcl(Add-5, check-8)
case(calls-10, for-9)
nmod:for(check-8, calls-10)
case(objects-13, of-11)
amod(objects-13, RegExp-12)
nmod:of(calls-10, objects-13)
nsubjpass(supported-18, objects-13)
ref(objects-13, which-15)
auxpass(supported-18, is-16)
neg(supported-18, not-17)
acl:relcl(objects-13, supported-18)
case(IE-20, by-19)
nmod:agent(supported-18, IE-20)
nsubj(say-23, Either-22)
nsubj(warn-30, Either-22)
root(ROOT-0, say-23)
dobj(say-23, something-24)
case(type-28, about-25)
det(type-28, the-26)
compound(type-28, return-27)
nmod:about(say-23, type-28)
cc(say-23, or-29)
conj:or(say-23, warn-30)
case(non-portability-33, about-31)
det(non-portability-33, the-32)
nmod:about(warn-30, non-portability-33)
case(call-36, of-34)
det(call-36, the-35)
nmod:of(non-portability-33, call-36)
cc(call-36, or-37)
nmod:of(non-portability-33, both-38)
conj:or(call-36, both-38)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): All public properties of this class should be made
package-private, and have a public setter.
Specificity: 0.905622
Content Structure:
dep(made-13, nicksantos-2)
det(properties-7, All-5)
amod(properties-7, public-6)
nsubjpass(made-13, properties-7)
nsubj(have-17, properties-7)
case(class-10, of-8)
det(class-10, this-9)
nmod:of(properties-7, class-10)
aux(made-13, should-11)
auxpass(made-13, be-12)
root(ROOT-0, made-13)
xcomp(made-13, package-private-14)
cc(made-13, and-16)
conj:and(made-13, have-17)
det(setter-20, a-18)
amod(setter-20, public-19)
dobj(have-17, setter-20)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Check to see if resolve() looped back on itself.
Specificity: 0.884272
Content Structure:
nsubj(looped-12, nicksantos-2)
acl(nicksantos-2, Check-5)
mark(see-7, to-6)
xcomp(Check-5, see-7)
mark(-LRB--10, if-8)
nsubj(-LRB--10, resolve-9)
advcl(see-7, -LRB--10)
root(ROOT-0, looped-12)
advmod(looped-12, back-13)
case(itself-15, on-14)
nmod:on(looped-12, itself-15)
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Come up with a way to remove this.
If we remove object lit keys, then we will need to also
create dependency scopes for them.
Specificity: 0.985495
Content Structure:
dep(Come-5, nicksantos-2)
root(ROOT-0, Come-5)
compound:prt(Come-5, up-6)
case(way-9, with-7)
det(way-9, a-8)
nmod:with(Come-5, way-9)
mark(remove-11, to-10)
xcomp(Come-5, remove-11)
dep(remove-11, this-12)
mark(remove-16, If-14)
nsubj(remove-16, we-15)
advcl(Come-5, remove-16)
compound(keys-19, object-17)
compound(keys-19, lit-18)
dobj(remove-16, keys-19)
advmod(need-24, then-21)
nsubj(need-24, we-22)
nsubj:xsubj(create-27, we-22)
aux(need-24, will-23)
parataxis(remove-16, need-24)
mark(create-27, to-25)
advmod(create-27, also-26)
xcomp(need-24, create-27)
amod(scopes-29, dependency-28)
dobj(create-27, scopes-29)
case(them-31, for-30)
nmod:for(scopes-29, them-31)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Create a common mutation function that
can replace either a VAR name assignment, assignment expression or
a EXPR_RESULT.
Specificity: 0.978085
Content Structure:
dep(Create-5, nicksantos-2)
root(ROOT-0, Create-5)
det(function-9, a-6)
amod(function-9, common-7)
compound(function-9, mutation-8)
dobj(Create-5, function-9)
nsubj(replace-12, function-9)
ref(function-9, that-10)
aux(replace-12, can-11)
acl:relcl(function-9, replace-12)
advmod(replace-12, either-13)
det(assignment-17, a-14)
compound(assignment-17, VAR-15)
compound(assignment-17, name-16)
dobj(replace-12, assignment-17)
compound(expression-20, assignment-19)
dobj(replace-12, expression-20)
conj:or(assignment-17, expression-20)
cc(assignment-17, or-21)
det(EXPR_RESULT-23, a-22)
dobj(replace-12, EXPR_RESULT-23)
conj:or(assignment-17, EXPR_RESULT-23)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Decide if all of these are really necessary.
Many of them are just accessors that should be passed to the
CompilerPass's constructor.
Specificity: 0.978487
Content Structure:
nsubj(accessors-19, nicksantos-2)
dep(nicksantos-2, Decide-5)
mark(necessary-12, if-6)
nsubj(necessary-12, all-7)
case(these-9, of-8)
nmod:of(all-7, these-9)
cop(necessary-12, are-10)
advmod(necessary-12, really-11)
dep(Decide-5, necessary-12)
dep(Decide-5, Many-14)
case(them-16, of-15)
nmod:of(Many-14, them-16)
cop(accessors-19, are-17)
advmod(accessors-19, just-18)
root(ROOT-0, accessors-19)
nsubjpass(passed-23, accessors-19)
ref(accessors-19, that-20)
aux(passed-23, should-21)
auxpass(passed-23, be-22)
acl:relcl(accessors-19, passed-23)
case(constructor-28, to-24)
det(CompilerPass-26, the-25)
nmod:poss(constructor-28, CompilerPass-26)
case(CompilerPass-26, 's-27)
nmod:to(passed-23, constructor-28)
File Name: ./src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Decide which parts of these belong in an AbstractCompiler
interface, and which ones should always be injected.
Specificity: 0.94238
Content Structure:
dep(Decide-5, nicksantos-2)
root(ROOT-0, Decide-5)
dobj(belong-10, which-6)
nsubj(belong-10, parts-7)
case(these-9, of-8)
nmod:of(parts-7, these-9)
dep(Decide-5, belong-10)
case(interface-14, in-11)
det(interface-14, an-12)
compound(interface-14, AbstractCompiler-13)
nmod:in(belong-10, interface-14)
cc(belong-10, and-16)
dobj(injected-22, which-17)
nsubjpass(injected-22, ones-18)
aux(injected-22, should-19)
advmod(injected-22, always-20)
auxpass(injected-22, be-21)
dep(Decide-5, injected-22)
conj:and(belong-10, injected-22)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Fix this so that the doc info always shows up
on the NAME node. We probably want to wait for the parser
merge to fix this.
Specificity: 0.989103
Content Structure:
dep(want-22, nicksantos-2)
parataxis(want-22, Fix-5)
dobj(Fix-5, this-6)
mark(shows-13, so-7)
mwe(so-7, that-8)
det(info-11, the-9)
compound(info-11, doc-10)
nsubj(shows-13, info-11)
advmod(shows-13, always-12)
advcl(Fix-5, shows-13)
compound:prt(shows-13, up-14)
case(node-18, on-15)
det(node-18, the-16)
compound(node-18, NAME-17)
nmod:on(shows-13, node-18)
nsubj(want-22, We-20)
nsubj:xsubj(wait-24, We-20)
advmod(want-22, probably-21)
root(ROOT-0, want-22)
mark(wait-24, to-23)
xcomp(want-22, wait-24)
mark(merge-28, for-25)
det(parser-27, the-26)
nsubj(merge-28, parser-27)
nsubj:xsubj(fix-30, parser-27)
advcl(wait-24, merge-28)
mark(fix-30, to-29)
xcomp(merge-28, fix-30)
dobj(fix-30, this-31)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Generalize the algorithm for undirected graphs, if we
need it.
Specificity: 0.830002
Content Structure:
dep(Generalize-5, nicksantos-2)
root(ROOT-0, Generalize-5)
det(algorithm-7, the-6)
dobj(Generalize-5, algorithm-7)
case(graphs-10, for-8)
amod(graphs-10, undirected-9)
nmod:for(algorithm-7, graphs-10)
mark(need-14, if-12)
nsubj(need-14, we-13)
advcl(Generalize-5, need-14)
dobj(need-14, it-15)
File Name: ./src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Handle this correctly if we have a UnionType.
Specificity: 0.820384
Content Structure:
dep(Handle-5, nicksantos-2)
root(ROOT-0, Handle-5)
dobj(Handle-5, this-6)
advmod(Handle-5, correctly-7)
mark(have-10, if-8)
nsubj(have-10, we-9)
advcl(Handle-5, have-10)
det(UnionType-12, a-11)
dobj(have-10, UnionType-12)
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): I'm pretty sure we don't need this anymore.
Remove this later.
Specificity: 0.880997
Content Structure:
nsubj(Remove-16, nicksantos-2)
nsubj(sure-8, I-5)
cop(sure-8, 'm-6)
advmod(sure-8, pretty-7)
dep(nicksantos-2, sure-8)
nsubj(need-12, we-9)
aux(need-12, do-10)
neg(need-12, n't-11)
ccomp(sure-8, need-12)
dobj(need-12, this-13)
advmod(need-12, anymore-14)
root(ROOT-0, Remove-16)
dep(later-18, this-17)
advmod(Remove-16, later-18)
File Name: ./src/com/google/javascript/jscomp/deps/JsFileParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Implement me.
Specificity: 0.679968
Content Structure:
root(ROOT-0, nicksantos-2)
dep(me-6, Implement-5)
dep(nicksantos-2, me-6)
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): In the initial implementation of this pass, it was
important to understand namespaced names (e.g., that a.b is distinct from
a.b.c). Now that this pass comes after CollapseProperties, this is no longer
necessary. For now, I've changed so that {@code referenceParentNames}
creates a two-way reference between a.b and a.b.c, so that they're
effectively the same name. When someone has the time, we should completely
rip out all the logic that understands namespaces.


Specificity: 1.0
Content Structure:
dep(rip-84, nicksantos-2)
case(implementation-8, In-5)
det(implementation-8, the-6)
amod(implementation-8, initial-7)
parataxis(rip-84, implementation-8)
case(pass-11, of-9)
det(pass-11, this-10)
nmod:of(implementation-8, pass-11)
nsubj(important-15, it-13)
nsubj:xsubj(understand-17, it-13)
cop(important-15, was-14)
dep(pass-11, important-15)
mark(understand-17, to-16)
xcomp(important-15, understand-17)
amod(names-19, namespaced-18)
dobj(understand-17, names-19)
dep(names-19, e.g.-21)
mark(distinct-26, that-23)
nsubj(distinct-26, a.b-24)
cop(distinct-26, is-25)
ccomp(e.g.-21, distinct-26)
case(a.b.c-28, from-27)
advcl(distinct-26, a.b.c-28)
advmod(comes-35, Now-31)
mark(comes-35, that-32)
det(pass-34, this-33)
nsubj(comes-35, pass-34)
dep(important-15, comes-35)
case(CollapseProperties-37, after-36)
nmod:after(necessary-43, CollapseProperties-37)
nsubj(necessary-43, this-39)
cop(necessary-43, is-40)
neg(longer-42, no-41)
advmod(necessary-43, longer-42)
ccomp(comes-35, necessary-43)
case(now-46, For-45)
nmod:for(changed-50, now-46)
nsubj(changed-50, I-48)
aux(changed-50, 've-49)
parataxis(rip-84, changed-50)
advmod(creates-57, so-51)
mark(creates-57, that-52)
amod(referenceParentNames-55, @code-54)
nsubj(creates-57, referenceParentNames-55)
advcl(changed-50, creates-57)
det(reference-60, a-58)
amod(reference-60, two-way-59)
dobj(creates-57, reference-60)
case(a.b-62, between-61)
nmod:between(reference-60, a.b-62)
cc(a.b-62, and-63)
nmod:between(reference-60, a.b.c-64)
conj:and(a.b-62, a.b.c-64)
mark(name-73, so-66)
mwe(so-66, that-67)
nsubj(name-73, they-68)
cop(name-73, 're-69)
advmod(name-73, effectively-70)
det(name-73, the-71)
amod(name-73, same-72)
dep(creates-57, name-73)
advmod(has-77, When-75)
nsubj(has-77, someone-76)
advcl(changed-50, has-77)
det(time-79, the-78)
dobj(has-77, time-79)
nsubj(rip-84, we-81)
aux(rip-84, should-82)
advmod(rip-84, completely-83)
root(ROOT-0, rip-84)
compound:prt(rip-84, out-85)
det:predet(logic-88, all-86)
det(logic-88, the-87)
dobj(rip-84, logic-88)
nsubj(understands-90, logic-88)
ref(logic-88, that-89)
acl:relcl(logic-88, understands-90)
dobj(understands-90, namespaces-91)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): It's non-obvious where the declaration of
the 'this' symbol should be. Figure this out later.
Specificity: 0.936823
Content Structure:
dep(Figure-20, nicksantos-2)
nsubj(Figure-20, It-5)
cop(non-obvious-7, 's-6)
acl:relcl(It-5, non-obvious-7)
advmod(declaration-10, where-8)
det(declaration-10, the-9)
advcl(non-obvious-7, declaration-10)
case(symbol-16, of-11)
det(symbol-16, the-12)
compound(symbol-16, this-14)
nmod:of(declaration-10, symbol-16)
aux(be-18, should-17)
acl:relcl(symbol-16, be-18)
root(ROOT-0, Figure-20)
dobj(Figure-20, this-21)
compound:prt(Figure-20, out-22)
advmod(Figure-20, later-23)
File Name: ./src/com/google/javascript/jscomp/SymbolTable.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Make NameAnalyzer smarter, so that we can eliminate y.
Specificity: 0.825135
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, Make-5)
dobj(Make-5, NameAnalyzer-6)
advmod(Make-5, smarter-7)
mark(eliminate-13, so-9)
mwe(so-9, that-10)
nsubj(eliminate-13, we-11)
aux(eliminate-13, can-12)
advcl(Make-5, eliminate-13)
dobj(eliminate-13, y.-14)
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Make this an error.
Specificity: 0.712759
Content Structure:
dep(Make-5, nicksantos-2)
root(ROOT-0, Make-5)
nsubj(error-8, this-6)
det(error-8, an-7)
xcomp(Make-5, error-8)
File Name: ./test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Make this emit a warning, because of the 'this' type.
Specificity: 0.853667
Content Structure:
dep(Make-5, nicksantos-2)
root(ROOT-0, Make-5)
det(type-17, this-6)
amod(type-17, emit-7)
det(warning-9, a-8)
dep(emit-7, warning-9)
case(the-13, because-11)
mwe(because-11, of-12)
nmod:because_of(warning-9, the-13)
dep(the-13, this-15)
dobj(Make-5, type-17)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Maybe generalize this to a continuation mechanism
like in RemoveUnusedVars.
Specificity: 0.861981
Content Structure:
dep(generalize-6, nicksantos-2)
advmod(generalize-6, Maybe-5)
root(ROOT-0, generalize-6)
dobj(generalize-6, this-7)
case(mechanism-11, to-8)
det(mechanism-11, a-9)
compound(mechanism-11, continuation-10)
nmod:to(generalize-6, mechanism-11)
case(RemoveUnusedVars-14, like-12)
case(RemoveUnusedVars-14, in-13)
nmod:in(generalize-6, RemoveUnusedVars-14)
File Name: ./src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Model the Arguments object.
Specificity: 0.738913
Content Structure:
dep(Model-5, nicksantos-2)
root(ROOT-0, Model-5)
det(Arguments-7, the-6)
nsubj(object-8, Arguments-7)
ccomp(Model-5, object-8)
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Provide accessors to better filter the list of type
mismatches. For example, if we pass (Cake|null) where only Cake is
allowed, that doesn't mean we should invalidate all Cakes.
Specificity: 0.998043
Content Structure:
dep(mean-36, nicksantos-2)
parataxis(mean-36, Provide-5)
dobj(Provide-5, accessors-6)
nsubj:xsubj(filter-9, accessors-6)
mark(filter-9, to-7)
advmod(filter-9, better-8)
xcomp(Provide-5, filter-9)
det(list-11, the-10)
dobj(filter-9, list-11)
case(mismatches-14, of-12)
compound(mismatches-14, type-13)
nmod:of(list-11, mismatches-14)
case(example-17, For-16)
advmod(mean-36, example-17)
mark(pass-21, if-19)
nsubj(pass-21, we-20)
advcl(mean-36, pass-21)
compound(|-24, Cake-23)
nsubj(null-25, |-24)
parataxis(pass-21, null-25)
advmod(only-28, where-27)
advmod(allowed-31, only-28)
nsubjpass(allowed-31, Cake-29)
auxpass(allowed-31, is-30)
advcl(pass-21, allowed-31)
nsubj(mean-36, that-33)
aux(mean-36, does-34)
neg(mean-36, n't-35)
root(ROOT-0, mean-36)
nsubj(invalidate-39, we-37)
aux(invalidate-39, should-38)
ccomp(mean-36, invalidate-39)
det(Cakes-41, all-40)
dobj(invalidate-39, Cakes-41)
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Re-enable with side-effect detection.
public void testInlineWithinCalls2() {
helperInlineReferenceToFunction(
"/** @nosideeffects */ function foo(){return true;}; " +
"function x() {1 + _g(foo()) }",
"function foo(){return true;}; " +
"function x() { {var JSCompiler_inline_result$jscomp$0; " +
"JSCompiler_inline_result$jscomp$0=true;}" +
"1 + _g(JSCompiler_inline_result$jscomp$0) }",
}
Specificity: 1.0
Content Structure:
root(ROOT-0, nicksantos-2)
amod(testInlineWithinCalls2-12, Re-enable-5)
case(detection-8, with-6)
amod(detection-8, side-effect-7)
advcl(Re-enable-5, detection-8)
amod(testInlineWithinCalls2-12, public-10)
compound(testInlineWithinCalls2-12, void-11)
dep(nicksantos-2, testInlineWithinCalls2-12)
amod(-LRB--17, -RRB--14)
amod(-LRB--17, helperInlineReferenceToFunction-16)
nsubj(function-24, -LRB--17)
dep(*-22, **-20)
nsubj(*-22, @nosideeffects-21)
dep(-LRB--17, *-22)
dep(testInlineWithinCalls2-12, function-24)
compound(-RRB--27, foo-25)
nsubj(+-35, -RRB--27)
nmod:npmod(true-30, return-29)
dep(-RRB--27, true-30)
ccomp(function-24, +-35)
nsubj(x-38, function-37)
xcomp(+-35, x-38)
dep(x-38, -RRB--40)
dobj(-RRB--40, 1-42)
amod(g-45, _-44)
dep(1-42, g-45)
discourse(g-45, foo-47)
dep(foo-47, -LRB--48)
compound(foo-56, function-55)
nsubj(+-66, foo-56)
compound(-LCB--59, -RRB--58)
nummod(return-60, -LCB--59)
nmod:npmod(true-61, return-60)
dep(foo-56, true-61)
ccomp(+-94, +-66)
dobj(+-66, function-68)
dep(function-68, x-69)
dep(function-68, -RRB--71)
compound(JSCompiler_inline_result-75, -LCB--73)
compound(JSCompiler_inline_result-75, var-74)
nsubj(jscomp-77, JSCompiler_inline_result-75)
dep(jscomp-77, $-76)
xcomp(-RRB--71, jscomp-77)
dep(0-79, $-78)
dep(jscomp-77, 0-79)
acl(jscomp-77, +-82)
xcomp(+-82, JSCompiler_inline_result-84)
dep($-87, $-85)
nummod($-87, jscomp-86)
nmod:npmod(true-90, $-87)
compound(=-89, 0-88)
nummod($-87, =-89)
amod(JSCompiler_inline_result-84, true-90)
parataxis(function-24, +-94)
nummod(+-97, 1-96)
dobj(+-94, +-97)
dep(+-97, g-99)
dep(0-105, JSCompiler_inline_result-101)
dep(jscomp-103, $-102)
dep(JSCompiler_inline_result-101, jscomp-103)
dep(0-105, $-104)
appos(g-99, 0-105)
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Remove addProvide/addRequire/removeRequire once
there is better support for discovering non-closure dependencies.
Specificity: 0.849253
Content Structure:
dep(addProvide/addRequire/removeRequire-6, nicksantos-2)
advmod(addProvide/addRequire/removeRequire-6, Remove-5)
root(ROOT-0, addProvide/addRequire/removeRequire-6)
mark(is-9, once-7)
expl(is-9, there-8)
advcl(addProvide/addRequire/removeRequire-6, is-9)
amod(support-11, better-10)
nsubj(is-9, support-11)
mark(discovering-13, for-12)
acl(support-11, discovering-13)
amod(dependencies-15, non-closure-14)
dobj(discovering-13, dependencies-15)
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Remove all uses of the Name position
and replace them with the NameNode position.
Specificity: 0.912831
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, Remove-5)
det(uses-7, all-6)
dobj(Remove-5, uses-7)
case(position-11, of-8)
det(position-11, the-9)
compound(position-11, Name-10)
nmod:of(uses-7, position-11)
cc(Remove-5, and-12)
dep(nicksantos-2, replace-13)
conj:and(Remove-5, replace-13)
dobj(replace-13, them-14)
case(position-18, with-15)
det(position-18, the-16)
compound(position-18, NameNode-17)
nmod:with(replace-13, position-18)
File Name: ./src/com/google/javascript/rhino/JSDocInfoBuilder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Remove this once everyone is using
the CONSTANT_VAR annotation.
Specificity: 0.935469
Content Structure:
dep(Remove-5, nicksantos-2)
root(ROOT-0, Remove-5)
dobj(Remove-5, this-6)
mark(using-10, once-7)
nsubj(using-10, everyone-8)
aux(using-10, is-9)
advcl(Remove-5, using-10)
det(annotation-13, the-11)
amod(annotation-13, CONSTANT_VAR-12)
dobj(using-10, annotation-13)
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Remove this option.

Specificity: 0.695301
Content Structure:
dep(Remove-5, nicksantos-2)
root(ROOT-0, Remove-5)
det(option-7, this-6)
dobj(Remove-5, option-7)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Should these tests pass?
assertTypeEquals(
expectedInfimum + " should be the greatest subtype of Named " +
typeI + " and Named " + typeJ,
assertTypeEquals(
expectedInfimum + " should be the greatest subtype of Proxy " +
typeI + " and Proxy " + typeJ,
Specificity: 0.999785
Content Structure:
root(ROOT-0, nicksantos-2)
aux(tests-7, Should-5)
nsubj(tests-7, these-6)
dep(nicksantos-2, tests-7)
compound(+-13, pass-8)
compound(+-13, assertTypeEquals-10)
compound(+-13, expectedInfimum-12)
nsubj(subtype-19, +-13)
aux(subtype-19, should-15)
cop(subtype-19, be-16)
det(subtype-19, the-17)
amod(subtype-19, greatest-18)
dep(tests-7, subtype-19)
mark(Named-21, of-20)
acl(subtype-19, Named-21)
amod(+-25, +-23)
compound(+-25, typeI-24)
dobj(Named-21, +-25)
cc(subtype-19, and-27)
compound(+-36, Named-28)
compound(+-36, +-30)
compound(+-36, typeJ-31)
appos(+-36, assertTypeEquals-33)
compound(+-36, expectedInfimum-35)
nsubj(subtype-42, +-36)
aux(subtype-42, should-38)
cop(subtype-42, be-39)
det(subtype-42, the-40)
amod(subtype-42, greatest-41)
dep(tests-7, subtype-42)
conj:and(subtype-19, subtype-42)
case(Proxy-44, of-43)
nmod:of(subtype-42, Proxy-44)
compound(+-48, +-46)
compound(+-48, typeI-47)
dep(subtype-42, +-48)
cc(+-48, and-50)
compound(typeJ-54, Proxy-51)
compound(typeJ-54, +-53)
dep(subtype-42, typeJ-54)
conj:and(+-48, typeJ-54)
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Split some of this up into per-class unit tests.
Specificity: 0.791839
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, Split-5)
dep(Split-5, some-6)
case(this-8, of-7)
nmod:of(some-6, this-8)
advmod(this-8, up-9)
case(tests-13, into-10)
amod(tests-13, per-class-11)
compound(tests-13, unit-12)
nmod:into(up-9, tests-13)
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): The "right" way to do this is to
carry the known outcome all the way through the
recursive traversal, so that we can construct a
different flow scope based on the outcome. However,
this would require a bunch of code and a bunch of
extra computation for an edge case. This seems to be
a "good enough" approximation.
Specificity: 0.999986
Content Structure:
dep(seems-62, nicksantos-2)
det(way-9, The-5)
amod(way-9, right-7)
parataxis(seems-62, way-9)
mark(do-11, to-10)
acl(way-9, do-11)
nsubj(is-13, this-12)
nsubj:xsubj(carry-15, this-12)
ccomp(do-11, is-13)
mark(carry-15, to-14)
xcomp(is-13, carry-15)
det(outcome-18, the-16)
amod(outcome-18, known-17)
iobj(carry-15, outcome-18)
det:predet(way-21, all-19)
det(way-21, the-20)
dobj(carry-15, way-21)
case(traversal-25, through-22)
det(traversal-25, the-23)
amod(traversal-25, recursive-24)
nmod:through(carry-15, traversal-25)
cc(is-13, so-27)
mark(construct-31, that-28)
nsubj(construct-31, we-29)
aux(construct-31, can-30)
ccomp(do-11, construct-31)
conj:so(is-13, construct-31)
det(scope-35, a-32)
amod(scope-35, different-33)
compound(scope-35, flow-34)
dobj(construct-31, scope-35)
case(outcome-39, based-36)
mwe(based-36, on-37)
det(outcome-39, the-38)
advcl(construct-31, outcome-39)
advmod(do-11, However-41)
nsubj(require-45, this-43)
aux(require-45, would-44)
ccomp(do-11, require-45)
det(bunch-47, a-46)
dobj(require-45, bunch-47)
case(code-49, of-48)
nmod:of(bunch-47, code-49)
cc(bunch-47, and-50)
det(bunch-52, a-51)
dobj(require-45, bunch-52)
conj:and(bunch-47, bunch-52)
case(computation-55, of-53)
amod(computation-55, extra-54)
nmod:of(bunch-52, computation-55)
case(case-59, for-56)
det(case-59, an-57)
compound(case-59, edge-58)
nmod:for(require-45, case-59)
nsubj(seems-62, This-61)
nsubj:xsubj(approximation-70, This-61)
root(ROOT-0, seems-62)
mark(approximation-70, to-63)
cop(approximation-70, be-64)
det(approximation-70, a-65)
dep(enough-68, good-67)
amod(approximation-70, enough-68)
xcomp(seems-62, approximation-70)
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): The current implementation tries to maintain backwards
compatibility with previous versions of the spec whenever we can.
We should try to gradually withdraw support for these.
Specificity: 0.985677
Content Structure:
dep(try-25, nicksantos-2)
det(implementation-7, The-5)
amod(implementation-7, current-6)
parataxis(try-25, implementation-7)
acl:relcl(implementation-7, tries-8)
mark(maintain-10, to-9)
xcomp(tries-8, maintain-10)
amod(compatibility-12, backwards-11)
dobj(maintain-10, compatibility-12)
case(versions-15, with-13)
amod(versions-15, previous-14)
nmod:with(maintain-10, versions-15)
case(spec-18, of-16)
det(spec-18, the-17)
nmod:of(versions-15, spec-18)
advmod(can-21, whenever-19)
nsubj(can-21, we-20)
advcl(maintain-10, can-21)
nsubj(try-25, We-23)
nsubj:xsubj(withdraw-28, We-23)
aux(try-25, should-24)
root(ROOT-0, try-25)
mark(withdraw-28, to-26)
advmod(withdraw-28, gradually-27)
xcomp(try-25, withdraw-28)
dobj(withdraw-28, support-29)
case(these-31, for-30)
nmod:for(support-29, these-31)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): The semantics of this method are ill-defined. Delete it.
Specificity: 0.817266
Content Structure:
nsubj(Delete-13, nicksantos-2)
det(semantics-6, The-5)
nsubj(ill-defined-11, semantics-6)
case(method-9, of-7)
det(method-9, this-8)
nmod:of(semantics-6, method-9)
cop(ill-defined-11, are-10)
dep(nicksantos-2, ill-defined-11)
root(ROOT-0, Delete-13)
dobj(Delete-13, it-14)
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): There's a bug where the template name T clashes between
D and C.
Specificity: 0.896903
Content Structure:
root(ROOT-0, nicksantos-2)
expl('s-6, There-5)
dep(nicksantos-2, 's-6)
det(bug-8, a-7)
dep('s-6, bug-8)
advmod(T-13, where-9)
det(name-12, the-10)
amod(name-12, template-11)
nsubj(T-13, name-12)
acl:relcl(bug-8, T-13)
dobj(T-13, clashes-14)
case(D-16, between-15)
nmod:between(clashes-14, D-16)
cc(D-16, and-17)
nmod:between(clashes-14, C.-18)
conj:and(D-16, C.-18)
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This behavior is currently incorrect.
To handle this case properly, we'll need to change how we handle
type resolution.
Specificity: 0.964226
Content Structure:
root(ROOT-0, nicksantos-2)
det(behavior-6, This-5)
nsubj(incorrect-9, behavior-6)
cop(incorrect-9, is-7)
advmod(incorrect-9, currently-8)
ccomp(need-19, incorrect-9)
mark(handle-12, To-11)
acl(incorrect-9, handle-12)
det(case-14, this-13)
dobj(handle-12, case-14)
advmod(handle-12, properly-15)
nsubj(need-19, we-17)
nsubj:xsubj(change-21, we-17)
aux(need-19, 'll-18)
dep(nicksantos-2, need-19)
mark(change-21, to-20)
xcomp(need-19, change-21)
advmod(handle-24, how-22)
nsubj(handle-24, we-23)
ccomp(change-21, handle-24)
compound(resolution-26, type-25)
dobj(handle-24, resolution-26)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This branch indicates a compiler bug, not worthy of
halting the compilation but we should log this and analyze to track
down why it happens. This is not critical and will be resolved over
time as the type checker is extended.
Specificity: 0.999169
Content Structure:
dep(critical-35, nicksantos-2)
det(branch-6, This-5)
parataxis(critical-35, branch-6)
acl:relcl(branch-6, indicates-7)
det(bug-10, a-8)
compound(bug-10, compiler-9)
dobj(indicates-7, bug-10)
neg(worthy-13, not-12)
amod(bug-10, worthy-13)
mark(halting-15, of-14)
advcl(worthy-13, halting-15)
det(compilation-17, the-16)
dobj(halting-15, compilation-17)
cc(log-21, but-18)
nsubj(log-21, we-19)
nsubj(analyze-24, we-19)
nsubj:xsubj(track-26, we-19)
aux(log-21, should-20)
dep(halting-15, log-21)
dobj(log-21, this-22)
cc(log-21, and-23)
dep(halting-15, analyze-24)
conj:and(log-21, analyze-24)
mark(track-26, to-25)
xcomp(analyze-24, track-26)
compound:prt(track-26, down-27)
advmod(happens-30, why-28)
nsubj(happens-30, it-29)
advcl(track-26, happens-30)
nsubj(critical-35, This-32)
nsubjpass(resolved-39, This-32)
cop(critical-35, is-33)
neg(critical-35, not-34)
root(ROOT-0, critical-35)
cc(critical-35, and-36)
aux(resolved-39, will-37)
auxpass(resolved-39, be-38)
conj:and(critical-35, resolved-39)
case(time-41, over-40)
nmod:over(resolved-39, time-41)
mark(extended-47, as-42)
det(checker-45, the-43)
compound(checker-45, type-44)
nsubjpass(extended-47, checker-45)
auxpass(extended-47, is-46)
advcl(resolved-39, extended-47)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This branch indicates a compiler bug, not worthy of
halting the compilation but we should log this and analyze to track
down why it happens. This is not critical and will be resolved over
time as the type checker is extended.
Specificity: 0.999169
Content Structure:
dep(critical-35, nicksantos-2)
det(branch-6, This-5)
parataxis(critical-35, branch-6)
acl:relcl(branch-6, indicates-7)
det(bug-10, a-8)
compound(bug-10, compiler-9)
dobj(indicates-7, bug-10)
neg(worthy-13, not-12)
amod(bug-10, worthy-13)
mark(halting-15, of-14)
advcl(worthy-13, halting-15)
det(compilation-17, the-16)
dobj(halting-15, compilation-17)
cc(log-21, but-18)
nsubj(log-21, we-19)
nsubj(analyze-24, we-19)
nsubj:xsubj(track-26, we-19)
aux(log-21, should-20)
dep(halting-15, log-21)
dobj(log-21, this-22)
cc(log-21, and-23)
dep(halting-15, analyze-24)
conj:and(log-21, analyze-24)
mark(track-26, to-25)
xcomp(analyze-24, track-26)
compound:prt(track-26, down-27)
advmod(happens-30, why-28)
nsubj(happens-30, it-29)
advcl(track-26, happens-30)
nsubj(critical-35, This-32)
nsubjpass(resolved-39, This-32)
cop(critical-35, is-33)
neg(critical-35, not-34)
root(ROOT-0, critical-35)
cc(critical-35, and-36)
aux(resolved-39, will-37)
auxpass(resolved-39, be-38)
conj:and(critical-35, resolved-39)
case(time-41, over-40)
nmod:over(resolved-39, time-41)
mark(extended-47, as-42)
det(checker-45, the-43)
compound(checker-45, type-44)
nsubjpass(extended-47, checker-45)
auxpass(extended-47, is-46)
advcl(resolved-39, extended-47)
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This formulation of least subtype and greatest
supertype is a bit loose. We might want to tighten it up later.
Specificity: 0.961423
Content Structure:
dep(want-20, nicksantos-2)
det(formulation-6, This-5)
parataxis(want-20, formulation-6)
case(supertype-12, of-7)
advmod(subtype-9, least-8)
amod(supertype-12, subtype-9)
cc(subtype-9, and-10)
conj:and(subtype-9, greatest-11)
amod(supertype-12, greatest-11)
nmod:of(formulation-6, supertype-12)
cop(loose-16, is-13)
det(bit-15, a-14)
nmod:npmod(loose-16, bit-15)
acl:relcl(supertype-12, loose-16)
nsubj(want-20, We-18)
nsubj:xsubj(tighten-22, We-18)
aux(want-20, might-19)
root(ROOT-0, want-20)
mark(tighten-22, to-21)
xcomp(want-20, tighten-22)
dobj(tighten-22, it-23)
advmod(later-25, up-24)
advmod(tighten-22, later-25)
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This is a terrible terrible hack, until
I create a definitionProvider that understands namespacing.
Specificity: 0.911404
Content Structure:
root(ROOT-0, nicksantos-2)
nsubj(hack-10, This-5)
cop(hack-10, is-6)
det(hack-10, a-7)
amod(hack-10, terrible-8)
amod(hack-10, terrible-9)
dep(nicksantos-2, hack-10)
mark(create-14, until-12)
nsubj(create-14, I-13)
advcl(hack-10, create-14)
det(definitionProvider-16, a-15)
dobj(create-14, definitionProvider-16)
nsubj(understands-18, definitionProvider-16)
ref(definitionProvider-16, that-17)
acl:relcl(definitionProvider-16, understands-18)
xcomp(understands-18, namespacing-19)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This is a weird API.
Specificity: 0.805302
Content Structure:
root(ROOT-0, nicksantos-2)
nsubj(API-9, This-5)
cop(API-9, is-6)
det(API-9, a-7)
amod(API-9, weird-8)
dep(nicksantos-2, API-9)
File Name: ./src/com/google/javascript/jscomp/WhitelistWarningsGuard.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This is actually bad inference, because
h sets x to null. We should fix this, but for now we do it
this way so that we don't break existing binaries. We will
need to change TypeInference#isUnflowable to fix this.
Specificity: 0.999462
Content Structure:
root(ROOT-0, nicksantos-2)
nsubj(inference-9, This-5)
cop(inference-9, is-6)
advmod(inference-9, actually-7)
amod(inference-9, bad-8)
dep(nicksantos-2, inference-9)
mark(sets-13, because-11)
nsubj(sets-13, h-12)
advcl(inference-9, sets-13)
dobj(sets-13, x-14)
case(null-16, to-15)
nmod:to(x-14, null-16)
nsubj(fix-20, We-18)
aux(fix-20, should-19)
acl:relcl(null-16, fix-20)
dobj(fix-20, this-21)
cc(sets-13, but-23)
mark(need-42, for-24)
advmod(do-27, now-25)
nsubj(do-27, we-26)
advcl(need-42, do-27)
dobj(do-27, it-28)
det(way-30, this-29)
advmod(do-27, way-30)
mark(break-36, so-31)
mwe(so-31, that-32)
nsubj(break-36, we-33)
aux(break-36, do-34)
neg(break-36, n't-35)
dep(way-30, break-36)
amod(binaries-38, existing-37)
dobj(break-36, binaries-38)
nsubj(need-42, We-40)
nsubj:xsubj(change-44, We-40)
aux(need-42, will-41)
advcl(inference-9, need-42)
conj:but(sets-13, need-42)
mark(change-44, to-43)
xcomp(need-42, change-44)
compound(#isUnflowable-46, TypeInference-45)
dobj(change-44, #isUnflowable-46)
nsubj:xsubj(fix-48, #isUnflowable-46)
mark(fix-48, to-47)
xcomp(change-44, fix-48)
dobj(fix-48, this-49)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This isn't the right place to do this check. We
really want to do this when we're looking at the constructor.
We'd find all its properties and make sure they followed inheritance
rules, like we currently do for @implements to make sure
all the methods are implemented.

As-is, this misses many other ways to override a property.

Specificity: 0.999984
Content Structure:
nsubj(find-32, nicksantos-2)
nsubj(make-37, nicksantos-2)
nsubj(place-10, This-5)
cop(place-10, is-6)
neg(place-10, n't-7)
det(place-10, the-8)
amod(place-10, right-9)
dep(nicksantos-2, place-10)
mark(do-12, to-11)
acl(place-10, do-12)
det(check-14, this-13)
dobj(do-12, check-14)
nsubj(want-18, We-16)
nsubj:xsubj(do-20, We-16)
advmod(want-18, really-17)
parataxis(find-32, want-18)
mark(do-20, to-19)
xcomp(want-18, do-20)
dobj(do-20, this-21)
advmod(looking-25, when-22)
nsubj(looking-25, we-23)
aux(looking-25, 're-24)
acl:relcl(this-21, looking-25)
case(constructor-28, at-26)
det(constructor-28, the-27)
nmod:at(looking-25, constructor-28)
nsubj(find-32, We-30)
aux(find-32, 'd-31)
root(ROOT-0, find-32)
det:predet(properties-35, all-33)
nmod:poss(properties-35, its-34)
dobj(find-32, properties-35)
cc(find-32, and-36)
conj:and(find-32, make-37)
xcomp(make-37, sure-38)
nsubj(followed-40, they-39)
ccomp(sure-38, followed-40)
compound(rules-42, inheritance-41)
dobj(followed-40, rules-42)
mark(do-47, like-44)
nsubj(do-47, we-45)
advmod(do-47, currently-46)
advcl(followed-40, do-47)
case(As-is-59, for-48)
amod(As-is-59, @implements-49)
mark(make-51, to-50)
xcomp(@implements-49, make-51)
xcomp(make-51, sure-52)
det:predet(methods-55, all-53)
det(methods-55, the-54)
nsubjpass(implemented-57, methods-55)
auxpass(implemented-57, are-56)
ccomp(sure-52, implemented-57)
nmod:for(misses-62, As-is-59)
nsubj(misses-62, this-61)
ccomp(do-47, misses-62)
amod(ways-65, many-63)
amod(ways-65, other-64)
dobj(misses-62, ways-65)
mark(override-67, to-66)
advcl(misses-62, override-67)
det(property-69, a-68)
dobj(override-67, property-69)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This might be a better check once we have
back-inference of object/array constraints.  It will probably
introduce more type warnings.  It uses the result type iff it's
strictly narrower than the declared var type.

boolean isVarTypeBetter = isVarDeclaration &&
(varType.restrictByNotNullOrUndefined().isSubtype(resultType)
Specificity: 0.999914
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, This-5)
aux(check-10, might-6)
cop(check-10, be-7)
det(check-10, a-8)
amod(check-10, better-9)
acl:relcl(This-5, check-10)
mark(have-13, once-11)
nsubj(have-13, we-12)
advcl(check-10, have-13)
dep(constraints-17, back-inference-14)
case(object/array-16, of-15)
advcl(back-inference-14, object/array-16)
dep(introduce-22, constraints-17)
nsubj(introduce-22, It-19)
aux(introduce-22, will-20)
advmod(introduce-22, probably-21)
advcl(uses-28, introduce-22)
amod(warnings-25, more-23)
compound(warnings-25, type-24)
dobj(introduce-22, warnings-25)
nsubj(uses-28, It-27)
ccomp(have-13, uses-28)
det(type-31, the-29)
compound(type-31, result-30)
nsubj(iff-32, type-31)
ccomp(uses-28, iff-32)
nsubj(narrower-36, it-33)
cop(narrower-36, 's-34)
advmod(narrower-36, strictly-35)
ccomp(iff-32, narrower-36)
case(isVarDeclaration-46, than-37)
det(isVarDeclaration-46, the-38)
compound(isVarDeclaration-46, declared-39)
compound(isVarDeclaration-46, var-40)
compound(isVarDeclaration-46, type-41)
compound(isVarDeclaration-46, .-42)
compound(isVarDeclaration-46, boolean-43)
compound(isVarDeclaration-46, isVarTypeBetter-44)
compound(isVarDeclaration-46, =-45)
nmod:than(narrower-36, isVarDeclaration-46)
cc(isVarDeclaration-46, &-47)
nmod:than(narrower-36, &-48)
conj:&(isVarDeclaration-46, &-48)
dep(&-48, varType.restrictByNotNullOrUndefined-50)
xcomp(varType.restrictByNotNullOrUndefined-50, -LRB--51)
dep(&-48, isSubtype-54)
appos(isSubtype-54, resultType-56)
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): This needs to be completely rewritten to use scopes
to do variable lookups. Right now, it assumes that all functions are
uniquely named variables. There's currently a stopgap scope-check
to ensure that this doesn't produce invalid code. But in the long run,
this needs a major refactor.
Specificity: 0.999882
Content Structure:
dep(assumes-23, nicksantos-2)
parataxis(assumes-23, This-5)
acl:relcl(This-5, needs-6)
mark(rewritten-10, to-7)
auxpass(rewritten-10, be-8)
advmod(rewritten-10, completely-9)
xcomp(needs-6, rewritten-10)
mark(use-12, to-11)
xcomp(rewritten-10, use-12)
dobj(use-12, scopes-13)
nsubj:xsubj(do-15, scopes-13)
mark(do-15, to-14)
xcomp(use-12, do-15)
amod(lookups-17, variable-16)
dobj(do-15, lookups-17)
advmod(now-20, Right-19)
advmod(assumes-23, now-20)
nsubj(assumes-23, it-22)
root(ROOT-0, assumes-23)
mark(named-29, that-24)
det(functions-26, all-25)
nsubj(named-29, functions-26)
cop(named-29, are-27)
advmod(named-29, uniquely-28)
ccomp(assumes-23, named-29)
dep(named-29, variables-30)
expl('s-33, There-32)
acl:relcl(variables-30, 's-33)
advmod('s-33, currently-34)
det(scope-check-37, a-35)
amod(scope-check-37, stopgap-36)
nsubj('s-33, scope-check-37)
mark(ensure-39, to-38)
acl(scope-check-37, ensure-39)
mark(produce-44, that-40)
nsubj(produce-44, this-41)
aux(produce-44, does-42)
neg(produce-44, n't-43)
ccomp(ensure-39, produce-44)
amod(code-46, invalid-45)
dobj(produce-44, code-46)
cc(named-29, But-48)
case(run-52, in-49)
det(run-52, the-50)
amod(run-52, long-51)
nmod:in(needs-55, run-52)
nsubj(needs-55, this-54)
ccomp(assumes-23, needs-55)
conj:but(named-29, needs-55)
det(refactor-58, a-56)
amod(refactor-58, major-57)
dobj(needs-55, refactor-58)
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Turn this back on when locals-tracking
is fixed. See testLocalizedSideEffects11.
if (!caller.knownLocals.contains(name)) {
}
Specificity: 0.98417
Content Structure:
nsubj(-RRB--3, nicksantos-2)
root(ROOT-0, -RRB--3)
dep(-RRB--3, Turn-5)
det(back-7, this-6)
dobj(Turn-5, back-7)
mark(fixed-12, on-8)
advmod(fixed-12, when-9)
nsubjpass(fixed-12, locals-tracking-10)
auxpass(fixed-12, is-11)
advcl(Turn-5, fixed-12)
compound(testLocalizedSideEffects11-15, See-14)
nsubj(Turn-5, testLocalizedSideEffects11-15)
mark(-LCB--25, if-17)
amod(caller.knownLocals.contains-20, !-19)
nsubj(-LCB--25, caller.knownLocals.contains-20)
appos(caller.knownLocals.contains-20, name-22)
acl:relcl(testLocalizedSideEffects11-15, -LCB--25)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): TypeCheck should never be attaching types to nodes.
All types should be attached by TypeInference. This is not true today
for legacy reasons. There are a number of places where TypeInference
doesn't attach a type, as a signal to TypeCheck that it needs to check
that node's type.
Specificity: 0.999911
Content Structure:
nsubj(are-32, nicksantos-2)
nsubj(attaching-9, TypeCheck-5)
aux(attaching-9, should-6)
neg(attaching-9, never-7)
aux(attaching-9, be-8)
dep(nicksantos-2, attaching-9)
dobj(attaching-9, types-10)
case(nodes-12, to-11)
nmod:to(attaching-9, nodes-12)
det(types-15, All-14)
nsubjpass(attached-18, types-15)
aux(attached-18, should-16)
auxpass(attached-18, be-17)
dep(true-25, attached-18)
case(TypeInference-20, by-19)
nmod:agent(attached-18, TypeInference-20)
dep(TypeInference-20, This-22)
cop(true-25, is-23)
neg(true-25, not-24)
parataxis(are-32, true-25)
nsubj(true-25, today-26)
case(reasons-29, for-27)
compound(reasons-29, legacy-28)
nmod:for(today-26, reasons-29)
expl(are-32, There-31)
root(ROOT-0, are-32)
det(number-34, a-33)
nsubj(are-32, number-34)
case(places-36, of-35)
nmod:of(number-34, places-36)
mark(needs-52, places-36)
advmod(attach-41, where-37)
nsubj(attach-41, TypeInference-38)
aux(attach-41, does-39)
neg(attach-41, n't-40)
acl:relcl(places-36, attach-41)
det(type-43, a-42)
dobj(attach-41, type-43)
advmod(type-43, as-45)
det(signal-47, a-46)
dep(type-43, signal-47)
case(TypeCheck-49, to-48)
nmod:to(attach-41, TypeCheck-49)
ref(places-36, that-50)
nsubj(needs-52, it-51)
nsubj:xsubj(check-54, it-51)
ccomp(attach-41, needs-52)
mark(check-54, to-53)
xcomp(needs-52, check-54)
det(node-56, that-55)
nmod:poss(type-58, node-56)
case(node-56, 's-57)
dobj(check-54, type-58)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Unify all the JSDocInfo stuff into one package, instead of
spreading it across multiple packages.
Specificity: 0.934885
Content Structure:
dep(Unify-5, nicksantos-2)
root(ROOT-0, Unify-5)
det:predet(stuff-9, all-6)
det(stuff-9, the-7)
compound(stuff-9, JSDocInfo-8)
dobj(Unify-5, stuff-9)
case(package-12, into-10)
nummod(package-12, one-11)
nmod:into(Unify-5, package-12)
mark(spreading-16, instead-14)
mwe(instead-14, of-15)
advcl(Unify-5, spreading-16)
dobj(spreading-16, it-17)
case(packages-20, across-18)
amod(packages-20, multiple-19)
nmod:across(spreading-16, packages-20)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): We do not currently type-check the arguments
of the goog.bind.
Specificity: 0.800689
Content Structure:
root(ROOT-0, nicksantos-2)
nsubj(type-check-9, We-5)
aux(type-check-9, do-6)
neg(type-check-9, not-7)
advmod(type-check-9, currently-8)
dep(nicksantos-2, type-check-9)
det(arguments-11, the-10)
dobj(type-check-9, arguments-11)
case(goog.bind-14, of-12)
det(goog.bind-14, the-13)
nmod:of(arguments-11, goog.bind-14)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): We need to add some notion of @const outer
scope vars. We can inline those just fine.
Specificity: 0.935794
Content Structure:
dep(inline-19, nicksantos-2)
parataxis(inline-19, We-5)
acl:relcl(We-5, need-6)
mark(add-8, to-7)
xcomp(need-6, add-8)
det(notion-10, some-9)
dobj(add-8, notion-10)
case(vars-15, of-11)
amod(vars-15, @const-12)
amod(vars-15, outer-13)
compound(vars-15, scope-14)
nmod:of(notion-10, vars-15)
nsubj(inline-19, We-17)
aux(inline-19, can-18)
root(ROOT-0, inline-19)
nsubj(fine-22, those-20)
advmod(fine-22, just-21)
xcomp(inline-19, fine-22)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): We should be able to make the graph more fine-grained
here. Instead of Foo.prototype.bar creating a global reference to Foo,
it should create a reference from .bar to Foo. That will let us
compile this away to nothing.
Specificity: 0.999045
Content Structure:
root(ROOT-0, nicksantos-2)
nsubj(able-8, We-5)
nsubj:xsubj(make-10, We-5)
aux(able-8, should-6)
cop(able-8, be-7)
dep(nicksantos-2, able-8)
mark(make-10, to-9)
xcomp(able-8, make-10)
det(graph-12, the-11)
nsubj(bar-34, graph-12)
advmod(fine-grained-14, more-13)
dep(graph-12, fine-grained-14)
dep(graph-12, here-15)
case(Foo.prototype.bar-19, Instead-17)
mwe(Instead-17, of-18)
nmod:instead_of(graph-12, Foo.prototype.bar-19)
advcl(create-29, creating-20)
det(reference-23, a-21)
amod(reference-23, global-22)
dobj(creating-20, reference-23)
case(Foo-25, to-24)
nmod:to(creating-20, Foo-25)
nsubj(create-29, it-27)
aux(create-29, should-28)
dep(Foo.prototype.bar-19, create-29)
det(reference-31, a-30)
dobj(create-29, reference-31)
nmod(create-29, from-32)
ccomp(make-10, bar-34)
case(Foo-36, to-35)
nmod:to(bar-34, Foo-36)
nsubj(let-40, Foo-36)
ref(Foo-36, That-38)
aux(let-40, will-39)
acl:relcl(Foo-36, let-40)
nsubj(compile-42, us-41)
ccomp(let-40, compile-42)
dobj(compile-42, this-43)
advmod(compile-42, away-44)
case(nothing-46, to-45)
nmod:to(compile-42, nothing-46)
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedPrototypePropertiesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): Write a builder to help JSCompiler induce
{@code replacements} from command-line flags

@param replacements A hash table of names of defines to their replacements.
All replacements <b>must</b> be literals.

Specificity: 0.996393
Content Structure:
dep(literals-38, nicksantos-2)
parataxis(literals-38, Write-5)
det(builder-7, a-6)
dobj(Write-5, builder-7)
mark(help-9, to-8)
acl(builder-7, help-9)
nsubj(induce-11, JSCompiler-10)
ccomp(help-9, induce-11)
amod(replacements-14, @code-13)
dobj(induce-11, replacements-14)
case(replacements-20, from-16)
amod(replacements-20, command-line-17)
compound(replacements-20, flags-18)
compound(replacements-20, @param-19)
nmod:from(Write-5, replacements-20)
det(table-23, A-21)
amod(table-23, hash-22)
dobj(Write-5, table-23)
case(names-25, of-24)
nmod:of(table-23, names-25)
mark(defines-27, of-26)
acl(names-25, defines-27)
case(replacements-30, to-28)
nmod:poss(replacements-30, their-29)
nmod:to(defines-27, replacements-30)
det(<b>-34, All-32)
compound(<b>-34, replacements-33)
nsubj(literals-38, <b>-34)
aux(literals-38, must-35)
advmod(literals-38, </b>-36)
cop(literals-38, be-37)
root(ROOT-0, literals-38)
File Name: ./src/com/google/javascript/jscomp/ProcessDefines.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): assertOnChange should only be true if the tree
is normalized.
Specificity: 0.835136
Content Structure:
dep(true-9, nicksantos-2)
advmod(true-9, assertOnChange-5)
aux(true-9, should-6)
advmod(true-9, only-7)
cop(true-9, be-8)
root(ROOT-0, true-9)
mark(normalized-14, if-10)
det(tree-12, the-11)
nsubjpass(normalized-14, tree-12)
auxpass(normalized-14, is-13)
advcl(true-9, normalized-14)
File Name: ./src/com/google/javascript/jscomp/Normalize.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): change this to something that makes sense.
public void testComparison1() throws Exception {
testTypes("/**@type null */var a;" +
"/**@type !Date */var b;" +
"if (a==b) {}",
"condition always evaluates to false\n" +
"left : null\n" +
}
Specificity: 0.999995
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, change-5)
dobj(change-5, this-6)
nsubj(makes-10, this-6)
case(something-8, to-7)
nmod:to(this-6, something-8)
ref(this-6, that-9)
acl:relcl(this-6, makes-10)
dobj(makes-10, sense-11)
nmod:npmod(testComparison1-15, public-13)
nmod:npmod(testComparison1-15, void-14)
amod(sense-11, testComparison1-15)
nsubj(throws-18, -RRB--17)
parataxis(makes-10, throws-18)
dobj(throws-18, Exception-19)
amod(-LRB--22, testTypes-21)
nsubj(+-47, -LRB--22)
dep(@type-26, **-25)
dep(-LRB--22, @type-26)
dep(a-31, *-28)
amod(a-31, var-30)
parataxis(@type-26, a-31)
parataxis(a-31, ''-35)
dep(@type-38, **-37)
dep(''-35, @type-38)
dep(var-43, *-41)
parataxis(''-35, var-43)
dep(-LRB--22, b-44)
acl:relcl(Exception-19, +-47)
dobj(+-47, if-49)
det(b-53, a-51)
amod(b-53, ==-52)
dep(if-49, b-53)
advmod(''-57, -RCB--56)
amod(if-49, ''-57)
nsubj(evaluates-62, condition-60)
advmod(evaluates-62, always-61)
dep(if-49, evaluates-62)
case(+-68, to-63)
amod(+-68, false-64)
compound(+-68, n-66)
nmod:to(evaluates-62, +-68)
acl(+-68, left-70)
compound(n-74, null-72)
dep(+-68, n-74)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): enable this again once we allow constant aliasing.
public void testInlineConstantAlias() {
test("var XXX = new Foo(); var YYY = XXX; bar(YYY)",
}
Specificity: 0.999294
Content Structure:
nsubj(-RRB--3, nicksantos-2)
root(ROOT-0, -RRB--3)
ccomp(-RRB--3, enable-5)
dobj(enable-5, this-6)
dep(this-6, again-7)
mark(allow-10, once-8)
nsubj(allow-10, we-9)
dep(again-7, allow-10)
amod(aliasing-12, constant-11)
dobj(allow-10, aliasing-12)
amod(testInlineConstantAlias-16, public-14)
compound(testInlineConstantAlias-16, void-15)
dep(enable-5, testInlineConstantAlias-16)
dep(test-20, -RRB--18)
dep(testInlineConstantAlias-16, test-20)
amod(-LRB--28, var-23)
compound(-LRB--28, XXX-24)
compound(-LRB--28, =-25)
amod(-LRB--28, new-26)
compound(-LRB--28, Foo-27)
dobj(test-20, -LRB--28)
acl(testInlineConstantAlias-16, var-31)
compound(XXX-34, YYY-32)
compound(XXX-34, =-33)
dobj(var-31, XXX-34)
dep(XXX-34, bar-36)
appos(bar-36, YYY-38)
File Name: ./test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): fix this.
Specificity: 0.647946
Content Structure:
root(ROOT-0, nicksantos-2)
dep(nicksantos-2, fix-5)
dep(fix-5, this-6)
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos): should these be node annotations?
Specificity: 0.702868
Content Structure:
root(ROOT-0, nicksantos-2)
aux(annotations-9, should-5)
nsubj(annotations-9, these-6)
cop(annotations-9, be-7)
amod(annotations-9, node-8)
dep(nicksantos-2, annotations-9)
File Name: ./src/com/google/javascript/jscomp/ControlFlowAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos|user): This caching behavior is a bit
odd, and only works if you assume the exact call flow that
clients are currently using.  In that flow, they call
getProvides(), then remove the goog.provide calls from the
AST, and then call getProvides() again.

This won't work for any other call flow, or any sort of incremental
compilation scheme. The API needs to be fixed so callers aren't
doing weird things like this, and then we should get rid of the
multiple-scan strategy.
Specificity: 1.0
Content Structure:
amod(user-4, nicksantos-2)
amod(user-4, |-3)
dep(odd-13, user-4)
nsubj(odd-13, This-7)
nsubj(works-17, This-7)
acl(This-7, caching-8)
dobj(caching-8, behavior-9)
cop(odd-13, is-10)
det(bit-12, a-11)
nmod:npmod(odd-13, bit-12)
root(ROOT-0, odd-13)
cc(odd-13, and-15)
advmod(works-17, only-16)
conj:and(odd-13, works-17)
mark(assume-20, if-18)
nsubj(assume-20, you-19)
advcl(works-17, assume-20)
det(call-23, the-21)
amod(call-23, exact-22)
nsubj(flow-24, call-23)
xcomp(assume-20, flow-24)
mark(using-29, that-25)
nsubj(using-29, clients-26)
aux(using-29, are-27)
advmod(using-29, currently-28)
ccomp(flow-24, using-29)
case(flow-33, In-31)
det(flow-33, that-32)
nmod:in(call-36, flow-33)
nsubj(call-36, they-35)
dep(flow-24, call-36)
dobj(call-36, getProvides-37)
dep(getProvides-37, -RRB--39)
advmod(-RRB--39, then-41)
dep(-RRB--39, remove-42)
det(calls-45, the-43)
amod(calls-45, goog.provide-44)
dobj(remove-42, calls-45)
case(AST-48, from-46)
det(AST-48, the-47)
nmod:from(remove-42, AST-48)
cc(remove-42, and-50)
advmod(call-52, then-51)
dep(-RRB--39, call-52)
conj:and(remove-42, call-52)
amod(-LRB--54, getProvides-53)
dobj(call-52, -LRB--54)
dep(This-58, again-56)
dep(getProvides-37, This-58)
aux(work-61, wo-59)
neg(work-61, n't-60)
acl:relcl(This-58, work-61)
case(flow-66, for-62)
det(flow-66, any-63)
amod(flow-66, other-64)
compound(flow-66, call-65)
nmod:for(work-61, flow-66)
cc(flow-66, or-68)
det(sort-70, any-69)
nmod:for(work-61, sort-70)
conj:or(flow-66, sort-70)
case(scheme-74, of-71)
amod(scheme-74, incremental-72)
compound(scheme-74, compilation-73)
nmod:of(sort-70, scheme-74)
det(API-77, The-76)
nsubj(needs-78, API-77)
nsubjpass:xsubj(fixed-81, API-77)
ccomp(flow-24, needs-78)
mark(fixed-81, to-79)
auxpass(fixed-81, be-80)
xcomp(needs-78, fixed-81)
mark(doing-86, so-82)
nsubj(doing-86, callers-83)
aux(doing-86, are-84)
neg(doing-86, n't-85)
advcl(fixed-81, doing-86)
amod(things-88, weird-87)
dobj(doing-86, things-88)
case(this-90, like-89)
nmod:like(doing-86, this-90)
cc(flow-24, and-92)
advmod(get-96, then-93)
nsubj(get-96, we-94)
aux(get-96, should-95)
xcomp(assume-20, get-96)
conj:and(flow-24, get-96)
xcomp(get-96, rid-97)
case(strategy-101, of-98)
det(strategy-101, the-99)
amod(strategy-101, multiple-scan-100)
nmod:of(get-96, strategy-101)
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nicksantos|user): This is a terrible, terrible hack
to bail out on recursive typedefs. We'll eventually need
to handle these properly.
Specificity: 0.973509
Content Structure:
amod(user-4, nicksantos-2)
amod(user-4, |-3)
dep(need-24, user-4)
parataxis(need-24, This-7)
cop(hack-13, is-8)
det(hack-13, a-9)
amod(hack-13, terrible-10)
amod(hack-13, terrible-12)
dep(This-7, hack-13)
mark(bail-15, to-14)
advcl(hack-13, bail-15)
compound:prt(bail-15, out-16)
case(typedefs-19, on-17)
amod(typedefs-19, recursive-18)
nmod:on(bail-15, typedefs-19)
nsubj(need-24, We-21)
nsubj:xsubj(handle-26, We-21)
aux(need-24, 'll-22)
advmod(need-24, eventually-23)
root(ROOT-0, need-24)
mark(handle-26, to-25)
xcomp(need-24, handle-26)
dobj(handle-26, these-27)
advmod(handle-26, properly-28)
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nnaze): Consider putting bit-fiddling logic in a reusable
location.
Specificity: 0.77026
Content Structure:
dep(Consider-5, nnaze-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, putting-6)
amod(logic-8, bit-fiddling-7)
dobj(putting-6, logic-8)
case(location-12, in-9)
det(location-12, a-10)
amod(location-12, reusable-11)
nmod:in(putting-6, location-12)
File Name: ./src/com/google/javascript/rhino/JSDocInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(nnaze): Use of addDependency() should someday cause a warning
as we migrate users to explicit goog.forwardDeclare() calls.
Specificity: 0.975294
Content Structure:
dep(calls-24, nnaze-2)
nsubj(calls-24, Use-5)
case(addDependency-7, of-6)
nmod:of(Use-5, addDependency-7)
nsubj(cause-12, -RRB--9)
aux(cause-12, should-10)
advmod(cause-12, someday-11)
dep(addDependency-7, cause-12)
det(warning-14, a-13)
dobj(cause-12, warning-14)
mark(migrate-17, as-15)
nsubj(migrate-17, we-16)
advcl(cause-12, migrate-17)
dobj(migrate-17, users-18)
case(-LRB--22, to-19)
amod(-LRB--22, explicit-20)
compound(-LRB--22, goog.forwardDeclare-21)
nmod:to(migrate-17, -LRB--22)
root(ROOT-0, calls-24)
File Name: ./src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(peterhal): @template types.
Specificity: 0.628367
Content Structure:
root(ROOT-0, peterhal-2)
amod(types-6, @template-5)
dep(peterhal-2, types-6)
File Name: ./src/com/google/javascript/jscomp/SymbolTable.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(radokirov): The compiler should be removing statics too, but in this case they are
kept. A similar unittest in RemoveUnusedClassPropertiesTest removes everything.
Investigate why are they kept when ran together with other passes.
Specificity: 0.997268
Content Structure:
dep(kept-33, radokirov-2)
det(compiler-6, The-5)
nsubj(kept-33, compiler-6)
aux(removing-9, should-7)
aux(removing-9, be-8)
acl:relcl(compiler-6, removing-9)
xcomp(removing-9, statics-10)
advmod(statics-10, too-11)
cc(statics-10, but-13)
case(case-16, in-14)
det(case-16, this-15)
xcomp(removing-9, case-16)
conj:but(statics-10, case-16)
nsubjpass(kept-19, they-17)
auxpass(kept-19, are-18)
acl:relcl(case-16, kept-19)
det(unittest-23, A-21)
amod(unittest-23, similar-22)
nsubj(removes-26, unittest-23)
case(RemoveUnusedClassPropertiesTest-25, in-24)
nmod:in(unittest-23, RemoveUnusedClassPropertiesTest-25)
acl:relcl(compiler-6, removes-26)
compound(Investigate-29, everything-27)
dep(they-32, Investigate-29)
advmod(they-32, why-30)
cop(they-32, are-31)
xcomp(removes-26, they-32)
root(ROOT-0, kept-33)
advmod(ran-35, when-34)
advcl(kept-33, ran-35)
advmod(ran-35, together-36)
case(passes-39, with-37)
amod(passes-39, other-38)
nmod:with(ran-35, passes-39)
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): Find a better solution to avoid serializing the code cache.
Specificity: 0.820638
Content Structure:
dep(Find-5, rluble-2)
root(ROOT-0, Find-5)
det(solution-8, a-6)
amod(solution-8, better-7)
dobj(Find-5, solution-8)
mark(avoid-10, to-9)
advcl(Find-5, avoid-10)
xcomp(avoid-10, serializing-11)
det(cache-14, the-12)
compound(cache-14, code-13)
dobj(serializing-11, cache-14)
File Name: /src/com/google/javascript/jscomp/SourceFile.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: null
Creation Commit Hash: 9da58006a8bc76caa9562950468667b09a173e43
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): Serialize this field (guava issue #1554)
Specificity: 0.847794
Content Structure:
root(ROOT-0, rluble-2)
dep(field-7, Serialize-5)
det(field-7, this-6)
dep(rluble-2, field-7)
compound(issue-10, guava-9)
dep(field-7, issue-10)
dep(1554-12, #-11)
dep(issue-10, 1554-12)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): Serialize this field. If this field is serialized naively, a cycle is introduced
which results in NPE when attempting to deserialize an HashSet that contains object that are
only partially deserialized.
Specificity: 0.996071
Content Structure:
nsubjpass(introduced-19, rluble-2)
dep(rluble-2, Serialize-5)
det(field-7, this-6)
dep(Serialize-5, field-7)
mark(serialized-13, If-9)
det(field-11, this-10)
nsubjpass(serialized-13, field-11)
auxpass(serialized-13, is-12)
advcl(introduced-19, serialized-13)
advmod(serialized-13, naively-14)
det(cycle-17, a-16)
nsubjpass(introduced-19, cycle-17)
auxpass(introduced-19, is-18)
root(ROOT-0, introduced-19)
nsubj(results-21, which-20)
ccomp(introduced-19, results-21)
case(NPE-23, in-22)
nmod:in(results-21, NPE-23)
advmod(object-32, when-24)
csubj(object-32, attempting-25)
mark(deserialize-27, to-26)
xcomp(attempting-25, deserialize-27)
det(HashSet-29, an-28)
dobj(deserialize-27, HashSet-29)
nsubj(contains-31, HashSet-29)
ref(HashSet-29, that-30)
acl:relcl(HashSet-29, contains-31)
advcl(results-21, object-32)
mark(deserialized-37, that-33)
cop(deserialized-37, are-34)
advmod(deserialized-37, only-35)
advmod(deserialized-37, partially-36)
ccomp(object-32, deserialized-37)
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): Split process defines into two stages, one that performs only checks to be
run here, and the one that actually changes the AST that would run in the optimization
phase.
Specificity: 0.994577
Content Structure:
root(ROOT-0, rluble-2)
compound(process-6, Split-5)
nsubj(defines-7, process-6)
dep(rluble-2, defines-7)
case(stages-10, into-8)
nummod(stages-10, two-9)
nmod:into(defines-7, stages-10)
appos(stages-10, one-12)
nsubj(performs-14, one-12)
ref(one-12, that-13)
acl:relcl(one-12, performs-14)
advmod(checks-16, only-15)
dobj(performs-14, checks-16)
mark(run-19, to-17)
auxpass(run-19, be-18)
acl(checks-16, run-19)
advmod(run-19, here-20)
cc(one-12, and-22)
det(one-24, the-23)
appos(stages-10, one-24)
conj:and(one-12, one-24)
nsubj(changes-27, one-24)
ref(one-24, that-25)
advmod(changes-27, actually-26)
acl:relcl(one-24, changes-27)
det(AST-29, the-28)
dobj(changes-27, AST-29)
nsubj(run-32, AST-29)
ref(AST-29, that-30)
aux(run-32, would-31)
acl:relcl(AST-29, run-32)
case(phase-36, in-33)
det(phase-36, the-34)
compound(phase-36, optimization-35)
nmod:in(run-32, phase-36)
File Name: /src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-12T17:06:36-07:00
Time Of Deletion: null
Creation Commit Hash: ab9a412327b3398b450c9b4a469203de6e6506b6
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): Use the multistage pipeline for NTI and modules.
Specificity: 0.838015
Content Structure:
dep(Use-5, rluble-2)
root(ROOT-0, Use-5)
det(pipeline-8, the-6)
amod(pipeline-8, multistage-7)
dobj(Use-5, pipeline-8)
case(NTI-10, for-9)
nmod:for(Use-5, NTI-10)
cc(Use-5, and-11)
conj:and(Use-5, modules-12)
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): enable multistage compilation when invoking with modules.
Specificity: 0.741176
Content Structure:
dep(enable-5, rluble-2)
root(ROOT-0, enable-5)
amod(compilation-7, multistage-6)
dobj(enable-5, compilation-7)
advmod(invoking-9, when-8)
advcl(enable-5, invoking-9)
case(modules-11, with-10)
nmod:with(invoking-9, modules-11)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T07:53:19-07:00
Time Of Deletion: null
Creation Commit Hash: c7b015e92c3ac8ca14857a03b0ad7d69a49a3ee1
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): enable multistage compilation.
Specificity: 0.663969
Content Structure:
dep(enable-5, rluble-2)
root(ROOT-0, enable-5)
amod(compilation-7, multistage-6)
dobj(enable-5, compilation-7)
File Name: ./test/com/google/javascript/jscomp/ExternExportsPassTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): enable multistage compilation.
Specificity: 0.663969
Content Structure:
dep(enable-5, rluble-2)
root(ROOT-0, enable-5)
amod(compilation-7, multistage-6)
dobj(enable-5, compilation-7)
File Name: ./test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): move these into the general structure for keeping state between pass runs.

Specificity: 0.843091
Content Structure:
dep(move-5, rluble-2)
root(ROOT-0, move-5)
dobj(move-5, these-6)
case(structure-10, into-7)
det(structure-10, the-8)
amod(structure-10, general-9)
nmod:into(move-5, structure-10)
case(state-13, for-11)
amod(state-13, keeping-12)
nmod:for(structure-10, state-13)
case(runs-16, between-14)
compound(runs-16, pass-15)
nmod:between(state-13, runs-16)
File Name: /src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-06-27T11:00:04-07:00
Time Of Deletion: null
Creation Commit Hash: 59bc85240c923ad6d2ef14755d43a1ea6e063d76
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(rluble): remove the method from the JSTypeRegistry interface and inline the invocations
when the OTI is removed.
Specificity: 0.94779
Content Structure:
root(ROOT-0, rluble-2)
dep(rluble-2, remove-5)
det(method-7, the-6)
dobj(remove-5, method-7)
case(interface-11, from-8)
det(interface-11, the-9)
compound(interface-11, JSTypeRegistry-10)
nmod:from(remove-5, interface-11)
cc(remove-5, and-12)
dep(rluble-2, inline-13)
conj:and(remove-5, inline-13)
det(invocations-15, the-14)
dobj(inline-13, invocations-15)
advmod(removed-20, when-16)
det(OTI-18, the-17)
nsubjpass(removed-20, OTI-18)
auxpass(removed-20, is-19)
advcl(inline-13, removed-20)
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-22T16:48:21-07:00
Time Of Deletion: null
Creation Commit Hash: a7b25493d52128073bebde63dcc8dae29fefe98a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Add a test for import with .js suffix once #1897 is fixed.
Specificity: 0.87804
Content Structure:
dep(suffix-13, sdh-2)
parataxis(suffix-13, Add-5)
det(test-7, a-6)
dobj(Add-5, test-7)
case(import-9, for-8)
nmod:for(test-7, import-9)
nmod(Add-5, with-10)
nsubj(suffix-13, js-12)
root(ROOT-0, suffix-13)
mark(fixed-18, once-14)
dep(1897-16, #-15)
nsubjpass(fixed-18, 1897-16)
auxpass(fixed-18, is-17)
advcl(suffix-13, fixed-18)
File Name: ./test/com/google/javascript/jscomp/deps/JsFileParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Add checkState(!forAnnotations) calls in places where annotations are nonsense.
Specificity: 0.917569
Content Structure:
dep(Add-5, sdh-2)
root(ROOT-0, Add-5)
amod(calls-11, checkState-6)
nummod(forAnnotations-9, !-8)
appos(calls-11, forAnnotations-9)
dobj(Add-5, calls-11)
case(places-13, in-12)
nmod:in(Add-5, places-13)
advmod(nonsense-17, where-14)
nsubj(nonsense-17, annotations-15)
cop(nonsense-17, are-16)
advcl(Add-5, nonsense-17)
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Consider removing this test if we decide that enum objects are
okay to ambiguate (in which case, this would rename to Foo.a).
Specificity: 0.983694
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, Consider-5)
xcomp(Consider-5, removing-6)
det(test-8, this-7)
dobj(removing-6, test-8)
mark(decide-11, if-9)
nsubj(decide-11, we-10)
advcl(Consider-5, decide-11)
mark(okay-16, that-12)
compound(objects-14, enum-13)
nsubj(okay-16, objects-14)
nsubj:xsubj(ambiguate-18, objects-14)
cop(okay-16, are-15)
ccomp(decide-11, okay-16)
mark(ambiguate-18, to-17)
xcomp(okay-16, ambiguate-18)
case(which-21, in-20)
nmod:in(rename-26, which-21)
nsubj(rename-26, case-22)
appos(case-22, this-24)
aux(rename-26, would-25)
parataxis(ambiguate-18, rename-26)
case(Foo.a-28, to-27)
nmod:to(rename-26, Foo.a-28)
File Name: /test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Consider simplifying this by reusing the parser or a separate JSON library.
Specificity: 0.899504
Content Structure:
dep(Consider-5, sdh-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, simplifying-6)
dobj(simplifying-6, this-7)
mark(reusing-9, by-8)
advcl(simplifying-6, reusing-9)
det(parser-11, the-10)
dobj(reusing-9, parser-11)
cc(parser-11, or-12)
det(library-16, a-13)
amod(library-16, separate-14)
compound(library-16, JSON-15)
dobj(reusing-9, library-16)
conj:or(parser-11, library-16)
File Name: ./src/com/google/javascript/jscomp/deps/JsFileLineParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): ES6 STRICT, with a non-strict fallback - then give warnings.
Specificity: 0.901622
Content Structure:
nsubj(give-14, sdh-2)
compound(STRICT-6, ES6-5)
dep(sdh-2, STRICT-6)
case(fallback-11, with-8)
det(fallback-11, a-9)
amod(fallback-11, non-strict-10)
nmod:with(STRICT-6, fallback-11)
advmod(give-14, then-13)
root(ROOT-0, give-14)
dobj(give-14, warnings-15)
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Handle do/while/for/for-of/for-in?
Specificity: 0.620985
Content Structure:
root(ROOT-0, sdh-2)
amod(for-of/for-in-8, Handle-5)
compound(for-of/for-in-8, do/while/for-6)
compound(for-of/for-in-8, /-7)
dep(sdh-2, for-of/for-in-8)
File Name: ./src/com/google/javascript/jscomp/GuardedCallback.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Initialize *all* the options here, but first we must ensure no subclass
is changing them in the constructor, rather than in their own setUp method.
Specificity: 0.989001
Content Structure:
dep(changing-21, sdh-2)
nsubj(changing-21, Initialize-5)
nsubj(changing-21', Initialize-5)
dep(*-8, *-6)
nsubj(*-8, all-7)
acl:relcl(Initialize-5, *-8)
det(options-10, the-9)
dobj(*-8, options-10)
advmod(*-8, here-11)
cc(*-8, but-13)
advmod(ensure-17, first-14)
nsubj(ensure-17, we-15)
aux(ensure-17, must-16)
acl:relcl(Initialize-5, ensure-17)
conj:but(*-8, ensure-17)
neg(subclass-19, no-18)
dobj(ensure-17, subclass-19)
aux(changing-21, is-20)
root(ROOT-0, changing-21)
conj:negcc(changing-21, changing-21')
dobj(changing-21, them-22)
case(constructor-25, in-23)
det(constructor-25, the-24)
nmod:in(changing-21, constructor-25)
cc(changing-21, rather-27)
mwe(rather-27, than-28)
case(method-33, in-29)
nmod:poss(method-33, their-30)
amod(method-33, own-31)
compound(method-33, setUp-32)
nmod:in(changing-21', method-33)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-06T13:05:22-07:00
Time Of Deletion: null
Creation Commit Hash: 05b267d49021ca56da5862fa88214bf8d4f471df
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Investigate whether this can be consolidated between all three passes.
In particular, mutation testing suggests allowEnums=true should work everywhere.
We should revisit what breaks when we disallow scalars everywhere.
Specificity: 0.995877
Content Structure:
dep(revisit-31, sdh-2)
parataxis(revisit-31, Investigate-5)
mark(consolidated-10, whether-6)
nsubjpass(consolidated-10, this-7)
aux(consolidated-10, can-8)
auxpass(consolidated-10, be-9)
ccomp(Investigate-5, consolidated-10)
case(all-12, between-11)
dep(passes-14, all-12)
nummod(passes-14, three-13)
dep(suggests-21, passes-14)
case(particular-17, In-16)
advcl(suggests-21, particular-17)
compound(testing-20, mutation-19)
nsubj(suggests-21, testing-20)
ccomp(consolidated-10, suggests-21)
nsubj(work-26, allowEnums-22)
advmod(true-24, =-23)
amod(allowEnums-22, true-24)
aux(work-26, should-25)
ccomp(suggests-21, work-26)
advmod(work-26, everywhere-27)
nsubj(revisit-31, We-29)
aux(revisit-31, should-30)
root(ROOT-0, revisit-31)
nsubj(breaks-33, what-32)
ccomp(revisit-31, breaks-33)
advmod(disallow-36, when-34)
nsubj(disallow-36, we-35)
advcl(breaks-33, disallow-36)
dobj(disallow-36, scalars-37)
advmod(disallow-36, everywhere-38)
File Name: /src/com/google/javascript/jscomp/InvalidatingTypes.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): It would be better to have a more robust way to distinguish
between actual provided symbols and synthetic symbols generated for
ES6 (or other) modules.  We can't read loadFlags here (to see if
the module type is 'es6') either, since that requires a full parse.
So for now we rely on the heuristic that all generated provides start
with "module$".
Specificity: 0.999997
Content Structure:
root(ROOT-0, sdh-2)
nsubj(better-8, It-5)
nsubj:xsubj(have-10, It-5)
aux(better-8, would-6)
cop(better-8, be-7)
dep(sdh-2, better-8)
mark(have-10, to-9)
xcomp(better-8, have-10)
det(way-14, a-11)
advmod(robust-13, more-12)
amod(way-14, robust-13)
dobj(have-10, way-14)
mark(distinguish-16, to-15)
acl(way-14, distinguish-16)
case(symbols-20, between-17)
dep(provided-19, actual-18)
amod(symbols-20, provided-19)
nmod:between(distinguish-16, symbols-20)
cc(symbols-20, and-21)
amod(symbols-23, synthetic-22)
nmod:between(distinguish-16, symbols-23)
conj:and(symbols-20, symbols-23)
acl(symbols-23, generated-24)
case(ES6-26, for-25)
nmod:for(generated-24, ES6-26)
cc(other-29, or-28)
dep(ES6-26, other-29)
discourse(read-36, modules-31)
nsubj(read-36, We-33)
aux(read-36, ca-34)
neg(read-36, n't-35)
acl:relcl(ES6-26, read-36)
dobj(read-36, loadFlags-37)
advmod(read-36, here-38)
mark(see-41, to-40)
dep(symbols-23, see-41)
mark(es6-48, if-42)
det(type-45, the-43)
amod(type-45, module-44)
nsubj(es6-48, type-45)
cop(es6-48, is-46)
advcl(see-41, es6-48)
advmod(distinguish-16, either-51)
mark(requires-55, since-53)
nsubj(requires-55, that-54)
advcl(distinguish-16, requires-55)
det(parse-58, a-56)
amod(parse-58, full-57)
dobj(requires-55, parse-58)
dep(requires-55, So-60)
case(now-62, for-61)
nmod:for(rely-64, now-62)
nsubj(rely-64, we-63)
parataxis(requires-55, rely-64)
case(heuristic-67, on-65)
det(heuristic-67, the-66)
nmod:on(rely-64, heuristic-67)
mark(generated-70, that-68)
nsubj(generated-70, all-69)
ccomp(better-8, generated-70)
ccomp(generated-70, provides-71)
xcomp(provides-71, start-72)
case($-76, with-73)
amod($-76, module-75)
nmod:with(start-72, $-76)
File Name: ./src/com/google/javascript/jscomp/deps/Es6SortedDependencies.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): It would be nice to allow people to output code in
strict mode.  But currently we swallow all the input language
strictness checks, and there are various tests that are never
compiled and so are broken when we output 'use strict'.  We
could consider adding some sort of logging/warning/error in
cases where the input was not strict, though there could still
be semantic differences even if syntax is strict.  Possibly
the first step would be to allow the option of outputting strict
and then change the default and see what breaks.  b/33005948
Specificity: 1.0
Content Structure:
root(ROOT-0, sdh-2)
nsubj(nice-8, It-5)
nsubj:xsubj(allow-10, It-5)
aux(nice-8, would-6)
cop(nice-8, be-7)
acl:relcl(sdh-2, nice-8)
mark(allow-10, to-9)
xcomp(nice-8, allow-10)
dobj(allow-10, people-11)
case(code-14, to-12)
compound(code-14, output-13)
nmod:to(allow-10, code-14)
case(mode-17, in-15)
amod(mode-17, strict-16)
nmod:in(code-14, mode-17)
cc(swallow-22, But-19)
advmod(swallow-22, currently-20)
nsubj(swallow-22, we-21)
ccomp(nice-8, swallow-22)
det:predet(language-26, all-23)
det(language-26, the-24)
compound(language-26, input-25)
nsubj(strictness-27, language-26)
ccomp(swallow-22, strictness-27)
dobj(strictness-27, checks-28)
cc(nice-8, and-30)
expl(are-32, there-31)
acl:relcl(sdh-2, are-32)
conj:and(nice-8, are-32)
amod(tests-34, various-33)
nsubj(are-32, tests-34)
nsubjpass(compiled-38, tests-34)
ref(tests-34, that-35)
auxpass(compiled-38, are-36)
neg(compiled-38, never-37)
acl:relcl(tests-34, compiled-38)
cc(nice-8, and-39)
advmod(broken-42, so-40)
cop(broken-42, are-41)
advcl(consider-53, broken-42)
advmod(use-47, when-43)
dep(output-45, we-44)
nsubj(use-47, output-45)
ccomp(broken-42, use-47)
dobj(use-47, strict-48)
nsubj(consider-53, We-51)
aux(consider-53, could-52)
acl:relcl(sdh-2, consider-53)
conj:and(nice-8, consider-53)
xcomp(consider-53, adding-54)
det(sort-56, some-55)
dobj(adding-54, sort-56)
case(logging/warning/error-58, of-57)
nmod:of(sort-56, logging/warning/error-58)
case(cases-60, in-59)
nmod:in(adding-54, cases-60)
advmod(strict-66, where-61)
det(input-63, the-62)
nsubj(strict-66, input-63)
cop(strict-66, was-64)
neg(strict-66, not-65)
acl:relcl(cases-60, strict-66)
mark(differences-74, though-68)
expl(differences-74, there-69)
aux(differences-74, could-70)
advmod(differences-74, still-71)
cop(differences-74, be-72)
amod(differences-74, semantic-73)
advcl(strict-66, differences-74)
advmod(strict-79, even-75)
mark(strict-79, if-76)
nsubj(strict-79, syntax-77)
cop(strict-79, is-78)
advcl(differences-74, strict-79)
dep(step-84, Possibly-81)
det(step-84, the-82)
amod(step-84, first-83)
dep(sdh-2, step-84)
aux(be-86, would-85)
acl:relcl(step-84, be-86)
mark(allow-88, to-87)
xcomp(be-86, allow-88)
det(option-90, the-89)
dobj(allow-88, option-90)
mark(outputting-92, of-91)
acl(option-90, outputting-92)
dobj(outputting-92, strict-93)
cc(allow-88, and-94)
advmod(change-96, then-95)
xcomp(be-86, change-96)
conj:and(allow-88, change-96)
det(default-98, the-97)
dobj(change-96, default-98)
cc(change-96, and-99)
conj:and(allow-88, see-100)
conj:and(change-96, see-100)
nsubj(breaks-102, what-101)
ccomp(see-100, breaks-102)
dep(allow-88, b/33005948-104)
File Name: ./src/com/google/javascript/jscomp/transpile/BaseTranspiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): It's somewhat odd that we treat function namespaces differently
from object namespaces. The reason is for consistency with OTI, which treats
most object literals as anonymous objects, but not so for functions. We
could remove the 'fn' check and simply return true for all namespaces, but
we'll need to update a bunch of expectations in DisambiguatePropertiesTest
(which will then differ from OTI).
Specificity: 0.999997
Content Structure:
root(ROOT-0, sdh-2)
nsubj(odd-8, It-5)
cop(odd-8, 's-6)
advmod(odd-8, somewhat-7)
dep(sdh-2, odd-8)
mark(treat-11, that-9)
nsubj(treat-11, we-10)
ccomp(odd-8, treat-11)
compound(namespaces-13, function-12)
dep(consistency-23, namespaces-13)
dep(namespaces-13, differently-14)
case(namespaces-17, from-15)
compound(namespaces-17, object-16)
nmod:from(differently-14, namespaces-17)
det(reason-20, The-19)
nsubj(consistency-23, reason-20)
cop(consistency-23, is-21)
case(consistency-23, for-22)
dep(treat-11, consistency-23)
case(OTI-25, with-24)
nmod:with(consistency-23, OTI-25)
nsubj(treats-28, OTI-25)
ref(OTI-25, which-27)
acl:relcl(OTI-25, treats-28)
amod(literals-31, most-29)
compound(literals-31, object-30)
dobj(treats-28, literals-31)
case(objects-34, as-32)
amod(objects-34, anonymous-33)
nmod:as(literals-31, objects-34)
cc(not-37, but-36)
dep(remove-44, not-37)
dep(not-37, so-38)
case(functions-40, for-39)
nmod:for(not-37, functions-40)
nsubj(remove-44, We-42)
nsubj(return-52, We-42)
aux(remove-44, could-43)
ccomp(consistency-23, remove-44)
det(check-49, the-45)
compound(check-49, fn-47)
dobj(remove-44, check-49)
cc(remove-44, and-50)
advmod(return-52, simply-51)
ccomp(consistency-23, return-52)
conj:and(remove-44, return-52)
xcomp(return-52, true-53)
case(namespaces-56, for-54)
det(namespaces-56, all-55)
nmod:for(return-52, namespaces-56)
cc(consistency-23, but-58)
nsubj(need-61, we-59)
nsubj:xsubj(update-63, we-59)
aux(need-61, 'll-60)
dep(treat-11, need-61)
conj:but(consistency-23, need-61)
mark(update-63, to-62)
xcomp(need-61, update-63)
det(bunch-65, a-64)
dobj(update-63, bunch-65)
case(expectations-67, of-66)
nmod:of(bunch-65, expectations-67)
case(DisambiguatePropertiesTest-69, in-68)
nmod:in(expectations-67, DisambiguatePropertiesTest-69)
nsubj(differ-74, which-71)
aux(differ-74, will-72)
advmod(differ-74, then-73)
dep(expectations-67, differ-74)
case(OTI-76, from-75)
nmod:from(differ-74, OTI-76)
File Name: /src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-28T09:03:42-07:00
Time Of Deletion: null
Creation Commit Hash: c27f830ca767a61cd09ac2f43c1f3f87689118ed
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): NTI currently fails to infer the result of the baz() call (b/37351897)
so we handle it more carefully.  When methods are deferred, this should be changed
to check that it's exactly unknown.
Specificity: 0.998811
Content Structure:
root(ROOT-0, sdh-2)
nsubj(fails-7, NTI-5)
nsubj:xsubj(infer-9, NTI-5)
advmod(fails-7, currently-6)
ccomp(changed-36, fails-7)
mark(infer-9, to-8)
xcomp(fails-7, infer-9)
det(result-11, the-10)
dobj(infer-9, result-11)
case(baz-14, of-12)
det(baz-14, the-13)
nmod:of(result-11, baz-14)
amod(call-17, -RRB--16)
dep(baz-14, call-17)
appos(baz-14, b/37351897-19)
mark(handle-23, so-21)
nsubj(handle-23, we-22)
advcl(infer-9, handle-23)
nsubjpass(deferred-31, it-24)
dep(deferred-31, more-25)
advmod(deferred-31, carefully-26)
advmod(deferred-31, When-28)
nsubjpass(deferred-31, methods-29)
auxpass(deferred-31, are-30)
xcomp(handle-23, deferred-31)
nsubjpass(changed-36, this-33)
nsubj:xsubj(check-38, this-33)
aux(changed-36, should-34)
auxpass(changed-36, be-35)
dep(sdh-2, changed-36)
mark(check-38, to-37)
xcomp(changed-36, check-38)
mark(unknown-43, that-39)
nsubj(unknown-43, it-40)
cop(unknown-43, 's-41)
advmod(unknown-43, exactly-42)
ccomp(check-38, unknown-43)
File Name: ./test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): NTI currently infers that a is a string, allowing the peephole pass
to rewrite substring to charAt.  We need to figure out if this is desirable.
Specificity: 0.989796
Content Structure:
dep(need-25, sdh-2)
parataxis(need-25, NTI-5)
advmod(infers-7, currently-6)
xcomp(NTI-5, infers-7)
mark(string-12, that-8)
nsubj(string-12, a-9)
cop(string-12, is-10)
det(string-12, a-11)
ccomp(NTI-5, string-12)
advcl(string-12, allowing-14)
det(pass-17, the-15)
amod(pass-17, peephole-16)
dobj(allowing-14, pass-17)
nsubj:xsubj(rewrite-19, pass-17)
mark(rewrite-19, to-18)
xcomp(allowing-14, rewrite-19)
xcomp(rewrite-19, substring-20)
mark(charAt-22, to-21)
xcomp(substring-20, charAt-22)
nsubj(need-25, We-24)
nsubj:xsubj(figure-27, We-24)
root(ROOT-0, need-25)
mark(figure-27, to-26)
xcomp(need-25, figure-27)
compound:prt(figure-27, out-28)
mark(desirable-32, if-29)
nsubj(desirable-32, this-30)
cop(desirable-32, is-31)
advcl(figure-27, desirable-32)
File Name: ./test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Remove this option if there's never a reason to turn it on.
Specificity: 0.867515
Content Structure:
dep(Remove-5, sdh-2)
root(ROOT-0, Remove-5)
det(option-7, this-6)
dobj(Remove-5, option-7)
mark('s-10, if-8)
expl('s-10, there-9)
advcl(Remove-5, 's-10)
neg('s-10, never-11)
det(reason-13, a-12)
nsubj('s-10, reason-13)
mark(turn-15, to-14)
acl(reason-13, turn-15)
dobj(turn-15, it-16)
compound:prt(turn-15, on-17)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-06T13:05:22-07:00
Time Of Deletion: null
Creation Commit Hash: 05b267d49021ca56da5862fa88214bf8d4f471df
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Replace TypeMismatch#src with a (nullable?) Node,
then generate the relevant errors later.
Specificity: 0.949708
Content Structure:
dep(generate-17, sdh-2)
compound(TypeMismatch-6, Replace-5)
nsubj(generate-17, TypeMismatch-6)
amod(TypeMismatch-6, #src-7)
case(Node-14, with-8)
det(Node-14, a-9)
compound(Node-14, nullable-11)
nmod:with(#src-7, Node-14)
advmod(Node-14, then-16)
root(ROOT-0, generate-17)
det(errors-20, the-18)
amod(errors-20, relevant-19)
dobj(generate-17, errors-20)
advmod(generate-17, later-21)
File Name: /src/com/google/javascript/jscomp/InvalidatingTypes.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Replace calls of toAnnotationString with toNonNullAnnotationString and
then substring off any leading '!' if necessary.  Then delete toAnnotationString
and consider renaming toNonNullAnnotationString as simply toAnnotationString.
Specificity: 0.994116
Content Structure:
dep(delete-24, sdh-2)
amod(calls-6, Replace-5)
nsubj(delete-24, calls-6)
nsubj(consider-27, calls-6)
mark(toAnnotationString-8, of-7)
acl(calls-6, toAnnotationString-8)
mark(toNonNullAnnotationString-10, with-9)
advcl(toAnnotationString-8, toNonNullAnnotationString-10)
cc(toNonNullAnnotationString-10, and-11)
advmod(substring-13, then-12)
advcl(toAnnotationString-8, substring-13)
conj:and(toNonNullAnnotationString-10, substring-13)
compound:prt(substring-13, off-14)
det(leading-16, any-15)
nmod:poss(!-18, leading-16)
case(leading-16, '-17)
dobj(substring-13, !-18)
dep(!-18, '-19)
mark(necessary-21, if-20)
dep(!-18, necessary-21)
advmod(delete-24, Then-23)
root(ROOT-0, delete-24)
xcomp(delete-24, toAnnotationString-25)
cc(delete-24, and-26)
conj:and(delete-24, consider-27)
xcomp(consider-27, renaming-28)
advcl(renaming-28, toNonNullAnnotationString-29)
mark(toAnnotationString-32, as-30)
advmod(toAnnotationString-32, simply-31)
advcl(toNonNullAnnotationString-29, toAnnotationString-32)
File Name: /src/com/google/javascript/rhino/TypeI.java
Time Of Creation: 2017-05-31T17:59:26-07:00
Time Of Deletion: null
Creation Commit Hash: 23e2bf3ffd8b5761b6ea1fa4a3b4afe70982da1a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): Replace isWellKnownSymbol with a real type-based
check once the type system understands the symbol primitive.
Any @const symbol reference should be allowed for a @struct.
Specificity: 0.984274
Content Structure:
dep(allowed-27, sdh-2)
parataxis(allowed-27, Replace-5)
xcomp(Replace-5, isWellKnownSymbol-6)
case(check-11, with-7)
det(check-11, a-8)
amod(check-11, real-9)
amod(check-11, type-based-10)
nmod:with(isWellKnownSymbol-6, check-11)
mark(understands-16, once-12)
det(system-15, the-13)
compound(system-15, type-14)
nsubj(understands-16, system-15)
advcl(Replace-5, understands-16)
det(symbol-18, the-17)
nsubj(primitive-19, symbol-18)
xcomp(understands-16, primitive-19)
det(reference-24, Any-21)
amod(reference-24, @const-22)
compound(reference-24, symbol-23)
nsubjpass(allowed-27, reference-24)
aux(allowed-27, should-25)
auxpass(allowed-27, be-26)
root(ROOT-0, allowed-27)
case(@struct-30, for-28)
det(@struct-30, a-29)
nmod:for(allowed-27, @struct-30)
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): See if we can remove IIterableResult and Set once polyfills are
split
Specificity: 0.894895
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, See-5)
mark(remove-9, if-6)
nsubj(remove-9, we-7)
aux(remove-9, can-8)
advcl(See-5, remove-9)
dobj(remove-9, IIterableResult-10)
cc(See-5, and-11)
dep(sdh-2, Set-12)
conj:and(See-5, Set-12)
mark(split-16, once-13)
nsubjpass(split-16, polyfills-14)
auxpass(split-16, are-15)
advcl(Set-12, split-16)
File Name: ./test/com/google/javascript/jscomp/IntegrationTestCase.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): This cache should be moved out into a higher level, but is
currently required due to the API that source maps must be accessible
via just a path (and not the file contents).
Specificity: 0.997834
Content Structure:
root(ROOT-0, sdh-2)
det(cache-6, This-5)
nsubjpass(moved-9, cache-6)
nsubjpass(required-19, cache-6)
aux(moved-9, should-7)
auxpass(moved-9, be-8)
dep(sdh-2, moved-9)
compound:prt(moved-9, out-10)
case(level-14, into-11)
det(level-14, a-12)
amod(level-14, higher-13)
nmod:into(moved-9, level-14)
cc(moved-9, but-16)
auxpass(required-19, is-17)
advmod(required-19, currently-18)
dep(sdh-2, required-19)
conj:but(moved-9, required-19)
xcomp(required-19, due-20)
case(API-23, to-21)
det(API-23, the-22)
nmod:to(due-20, API-23)
mark(accessible-29, that-24)
compound(maps-26, source-25)
nsubj(accessible-29, maps-26)
aux(accessible-29, must-27)
cop(accessible-29, be-28)
ccomp(required-19, accessible-29)
case(path-33, via-30)
advmod(path-33, just-31)
det(path-33, a-32)
nmod:via(accessible-29, path-33)
dep(accessible-29, and-35)
dep(and-35, not-36)
det(contents-39, the-37)
amod(contents-39, file-38)
dep(not-36, contents-39)
File Name: ./src/com/google/javascript/jscomp/deps/ClosureBundler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): This is reinventing a large part of JSDocInfoParser.  We should
try to consolidate as much as possible.  This requires several steps:
1. Make all the annotations we look for first-class in JSDocInfo
2. Support custom annotations (may already be done?)
3. Fix up existing code so that all these annotations are in @fileoverview
4. Change this code to simply inspect the script's JSDocInfo instead of re-parsing
Specificity: 0.999999
Content Structure:
nsubj(Support-43, sdh-2)
nsubj(reinventing-7, This-5)
aux(reinventing-7, is-6)
dep(sdh-2, reinventing-7)
det(part-10, a-8)
amod(part-10, large-9)
dobj(reinventing-7, part-10)
case(JSDocInfoParser-12, of-11)
nmod:of(part-10, JSDocInfoParser-12)
nsubj(try-16, We-14)
nsubj:xsubj(consolidate-18, We-14)
aux(try-16, should-15)
acl:relcl(JSDocInfoParser-12, try-16)
mark(consolidate-18, to-17)
xcomp(try-16, consolidate-18)
mark(requires-25, as-19)
advmod(possible-22, much-20)
advmod(possible-22, as-21)
dep(requires-25, possible-22)
nsubj(requires-25, This-24)
advcl(consolidate-18, requires-25)
amod(steps-27, several-26)
dobj(requires-25, steps-27)
nsubj(Make-31, 1-29)
parataxis(requires-25, Make-31)
det:predet(annotations-34, all-32)
det(annotations-34, the-33)
dobj(Make-31, annotations-34)
nsubj(look-36, we-35)
acl:relcl(annotations-34, look-36)
case(first-class-38, for-37)
advcl(look-36, first-class-38)
case(JSDocInfo-40, in-39)
nmod:in(look-36, JSDocInfo-40)
nummod(JSDocInfo-40, 2-41)
root(ROOT-0, Support-43)
compound(annotations-45, custom-44)
dobj(Support-43, annotations-45)
aux(done-50, may-47)
advmod(done-50, already-48)
auxpass(done-50, be-49)
dep(annotations-45, done-50)
nsubj(Fix-55, 3-53)
acl:relcl(annotations-45, Fix-55)
compound:prt(Fix-55, up-56)
amod(code-58, existing-57)
dobj(Fix-55, code-58)
mark(@fileoverview-66, so-59)
mwe(so-59, that-60)
det:predet(annotations-63, all-61)
det(annotations-63, these-62)
nsubj(@fileoverview-66, annotations-63)
cop(@fileoverview-66, are-64)
case(@fileoverview-66, in-65)
advcl(Fix-55, @fileoverview-66)
dep(Change-69, 4-67)
dep(Support-43, Change-69)
det(code-71, this-70)
dobj(Change-69, code-71)
mark(inspect-74, to-72)
advmod(inspect-74, simply-73)
advcl(Change-69, inspect-74)
det(script-76, the-75)
nmod:poss(JSDocInfo-78, script-76)
case(script-76, 's-77)
dobj(inspect-74, JSDocInfo-78)
case(re-parsing-81, instead-79)
mwe(instead-79, of-80)
nmod:instead_of(JSDocInfo-78, re-parsing-81)
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): This whole method could be deleted if we don't mind adding
additional @this annotations where they're not actually necessary.
Specificity: 0.954625
Content Structure:
dep(annotations-19, sdh-2)
det(method-7, This-5)
amod(method-7, whole-6)
nsubj(annotations-19, method-7)
aux(deleted-10, could-8)
auxpass(deleted-10, be-9)
acl:relcl(method-7, deleted-10)
mark(mind-15, if-11)
nsubj(mind-15, we-12)
aux(mind-15, do-13)
neg(mind-15, n't-14)
advcl(deleted-10, mind-15)
xcomp(mind-15, adding-16)
amod(@this-18, additional-17)
dobj(adding-16, @this-18)
root(ROOT-0, annotations-19)
advmod(necessary-25, where-20)
nsubj(necessary-25, they-21)
cop(necessary-25, 're-22)
neg(necessary-25, not-23)
advmod(necessary-25, actually-24)
advcl(annotations-19, necessary-25)
File Name: /src/com/google/javascript/jscomp/TypedCodeGenerator.java
Time Of Creation: 2017-05-31T17:59:26-07:00
Time Of Deletion: null
Creation Commit Hash: 23e2bf3ffd8b5761b6ea1fa4a3b4afe70982da1a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): This would be better as a defender method once Java 8 is allowed (b/28382956):
Specificity: 0.938806
Content Structure:
root(ROOT-0, sdh-2)
nsubj(better-8, This-5)
aux(better-8, would-6)
cop(better-8, be-7)
dep(sdh-2, better-8)
case(method-12, as-9)
det(method-12, a-10)
compound(method-12, defender-11)
nmod:as(better-8, method-12)
mark(allowed-17, once-13)
nsubjpass(allowed-17, Java-14)
nummod(Java-14, 8-15)
auxpass(allowed-17, is-16)
advcl(better-8, allowed-17)
dep(allowed-17, b/28382956-19)
File Name: ./src/com/google/javascript/jscomp/deps/DependencyInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): We could reduce some work here by combining the global names
check with the root-in-scope check but it's not clear how to do so and
still keep the var lookup *after* the polyfill-existence check.
Specificity: 0.997101
Content Structure:
root(ROOT-0, sdh-2)
nsubj(reduce-7, We-5)
aux(reduce-7, could-6)
dep(sdh-2, reduce-7)
det(work-9, some-8)
dobj(reduce-7, work-9)
advmod(reduce-7, here-10)
mark(combining-12, by-11)
advcl(reduce-7, combining-12)
det(check-16, the-13)
amod(check-16, global-14)
compound(check-16, names-15)
dobj(combining-12, check-16)
case(check-20, with-17)
det(check-20, the-18)
amod(check-20, root-in-scope-19)
nmod:with(combining-12, check-20)
cc(clear-25, but-21)
nsubj(clear-25, it-22)
cop(clear-25, 's-23)
neg(clear-25, not-24)
dep(combining-12, clear-25)
advmod(do-28, how-26)
mark(do-28, to-27)
ccomp(clear-25, do-28)
advmod(do-28, so-29)
cc(do-28, and-30)
advmod(keep-32, still-31)
ccomp(clear-25, keep-32)
conj:and(do-28, keep-32)
det(*-36, the-33)
compound(*-36, var-34)
compound(*-36, lookup-35)
dobj(keep-32, *-36)
advcl(keep-32, after-37)
dep(after-37, *-38)
det(check-41, the-39)
amod(check-41, polyfill-existence-40)
dobj(do-28, check-41)
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): We're currently stuck on an earlier version of Truth that doesn't
provide MapSubject#containsExactly(Object, Object, Object...), and it is very
hard to upgrade due to parallel ant and maven builds.  Once this restriction
is lifted and we can depend on a newer Truth, these assertions should be
changed to assertThat(info.getLoadFlags()).containsExactly(...)
Specificity: 0.999996
Content Structure:
nsubj(containsExactly-72, sdh-2)
nsubjpass(stuck-8, We-5)
auxpass(stuck-8, 're-6)
advmod(stuck-8, currently-7)
dep(sdh-2, stuck-8)
case(version-12, on-9)
det(version-12, an-10)
amod(version-12, earlier-11)
nmod:on(stuck-8, version-12)
nsubj(provide-18, version-12)
case(Truth-14, of-13)
nmod:of(version-12, Truth-14)
ref(version-12, that-15)
aux(provide-18, does-16)
neg(provide-18, n't-17)
acl:relcl(version-12, provide-18)
amod(#containsExactly-20, MapSubject-19)
dobj(provide-18, #containsExactly-20)
dep(Object-24, Object-22)
discourse(Object-26, Object-24)
dep(provide-18, Object-26)
cc(stuck-8, and-30)
nsubj(hard-34, it-31)
nsubj:xsubj(upgrade-36, it-31)
cop(hard-34, is-32)
advmod(hard-34, very-33)
dep(sdh-2, hard-34)
conj:and(stuck-8, hard-34)
mark(upgrade-36, to-35)
xcomp(hard-34, upgrade-36)
dep(upgrade-36, due-37)
case(ant-40, to-38)
amod(ant-40, parallel-39)
nmod:to(due-37, ant-40)
cc(ant-40, and-41)
compound(builds-43, maven-42)
nmod:to(due-37, builds-43)
conj:and(ant-40, builds-43)
mark(lifted-49, Once-45)
det(restriction-47, this-46)
nsubjpass(lifted-49, restriction-47)
auxpass(lifted-49, is-48)
advcl(changed-63, lifted-49)
cc(lifted-49, and-50)
nsubj(depend-53, we-51)
aux(depend-53, can-52)
conj:and(lifted-49, depend-53)
advcl(changed-63, depend-53)
case(Truth-57, on-54)
det(Truth-57, a-55)
amod(Truth-57, newer-56)
nmod:on(depend-53, Truth-57)
det(assertions-60, these-59)
nsubjpass(changed-63, assertions-60)
aux(changed-63, should-61)
auxpass(changed-63, be-62)
ccomp(hard-34, changed-63)
case(assertThat-65, to-64)
nmod:to(changed-63, assertThat-65)
dep(assertThat-65, info.getLoadFlags-67)
appos(assertThat-65, -RRB--69)
root(ROOT-0, containsExactly-72)
dep(containsExactly-72, ...-74)
File Name: ./test/com/google/javascript/jscomp/LazyParsedDependencyInfoTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): When OTI is gone, these can be renamed to simply isString and isNumber
(provided we have sufficiently clear JavaDoc to specify that it does *not* include
the object wrapper type).
Specificity: 0.997753
Content Structure:
root(ROOT-0, sdh-2)
advmod(gone-8, When-5)
nsubjpass(gone-8, OTI-6)
auxpass(gone-8, is-7)
advcl(renamed-13, gone-8)
nsubjpass(renamed-13, these-10)
aux(renamed-13, can-11)
auxpass(renamed-13, be-12)
dep(sdh-2, renamed-13)
case(isString-16, to-14)
advmod(isString-16, simply-15)
nmod:to(renamed-13, isString-16)
cc(isString-16, and-17)
nmod:to(renamed-13, isNumber-18)
conj:and(isString-16, isNumber-18)
dep(isString-16, provided-20)
nsubj(have-22, we-21)
ccomp(provided-20, have-22)
advmod(clear-24, sufficiently-23)
amod(JavaDoc-25, clear-24)
dobj(have-22, JavaDoc-25)
mark(specify-27, to-26)
ccomp(have-22, specify-27)
mark(does-30, that-28)
nsubj(does-30, it-29)
ccomp(specify-27, does-30)
dobj(does-30, *-31)
neg(*-31, not-32)
dep(include-34, *-33)
dep(*-31, include-34)
det(type-38, the-35)
compound(type-38, object-36)
compound(type-38, wrapper-37)
dobj(include-34, type-38)
File Name: ./src/com/google/javascript/rhino/TypeI.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(sdh): Why does NTI infer `x` to be optional?
Specificity: 0.85006
Content Structure:
dep(does-6, sdh-2)
advmod(does-6, Why-5)
root(ROOT-0, does-6)
compound(infer-8, NTI-7)
dobj(does-6, infer-8)
dobj(does-6, x-10)
mark(optional-14, to-12)
cop(optional-14, be-13)
advcl(does-6, optional-14)
File Name: /test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:59:26-07:00
Time Of Deletion: 2017-06-15T10:35:38-07:00
Creation Commit Hash: 23e2bf3ffd8b5761b6ea1fa4a3b4afe70982da1a
Deletion Commit Hash: a13d0ba6d2b02b2188137b36cb699415bd8784c5
Time To Complete: P15D; PT-7H-23M-48S

Type: Incomplete
Content:
(sdh): change the name to getDirectSubTypes()
Specificity: 0.875044
Content Structure:
root(ROOT-0, sdh-2)
dep(name-7, change-5)
det(name-7, the-6)
dep(sdh-2, name-7)
case(getDirectSubTypes-9, to-8)
nmod:to(name-7, getDirectSubTypes-9)
dep(name-7, -LRB--10)
File Name: /src/com/google/javascript/rhino/FunctionTypeI.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: null
Creation Commit Hash: aa5874513f85b1731b0749cde561141b7dd2bcf8
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(sdh): change the name to getDirectSubTypes()
Specificity: 0.875044
Content Structure:
root(ROOT-0, sdh-2)
dep(name-7, change-5)
det(name-7, the-6)
dep(sdh-2, name-7)
case(getDirectSubTypes-9, to-8)
nmod:to(name-7, getDirectSubTypes-9)
dep(name-7, -LRB--10)
File Name: /src/com/google/javascript/rhino/FunctionTypeI.java
Time Of Creation: 2017-06-20T10:26:24-07:00
Time Of Deletion: 2017-06-20T10:26:25-07:00
Creation Commit Hash: c060f2b79da5adf1c6c3b3c94d80c711224a53c7
Deletion Commit Hash: 62d229a82235660214de930e8377126b41e38d62
Time To Complete: P0D; PT1S

Type: Incomplete
Content:
(sdh): checkState(!forAnnotations) all
Specificity: 0.839293
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, checkState-5)
nummod(forAnnotations-8, !-7)
appos(checkState-5, forAnnotations-8)
dep(checkState-5, all-10)
File Name: /src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-05-31T17:59:26-07:00
Time Of Deletion: null
Creation Commit Hash: 23e2bf3ffd8b5761b6ea1fa4a3b4afe70982da1a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): consider allowing ambiguation on properties of global this
(we already reserve extern'd names, so this should be safe).
Specificity: 0.969303
Content Structure:
dep(consider-5, sdh-2)
root(ROOT-0, consider-5)
xcomp(consider-5, allowing-6)
dobj(allowing-6, ambiguation-7)
case(properties-9, on-8)
nmod:on(allowing-6, properties-9)
case(global-11, of-10)
nmod:of(properties-9, global-11)
dep(global-11, this-12)
nsubj(reserve-16, we-14)
advmod(reserve-16, already-15)
dep(global-11, reserve-16)
nsubj('d-18, extern-17)
ccomp(reserve-16, 'd-18)
dobj('d-18, names-19)
mark(safe-25, so-21)
nsubj(safe-25, this-22)
aux(safe-25, should-23)
cop(safe-25, be-24)
advcl('d-18, safe-25)
File Name: /src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): consider allowing inlining properties of global this
(we already reserve extern'd names, so this should be safe).
Specificity: 0.963961
Content Structure:
dep(consider-5, sdh-2)
root(ROOT-0, consider-5)
xcomp(consider-5, allowing-6)
amod(properties-8, inlining-7)
dobj(allowing-6, properties-8)
case(global-10, of-9)
nmod:of(properties-8, global-10)
dep(global-10, this-11)
nsubj(reserve-15, we-13)
advmod(reserve-15, already-14)
dep(global-10, reserve-15)
nsubj('d-17, extern-16)
ccomp(reserve-15, 'd-17)
dobj('d-17, names-18)
mark(safe-24, so-20)
nsubj(safe-24, this-21)
aux(safe-24, should-22)
cop(safe-24, be-23)
advcl('d-17, safe-24)
File Name: /src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): consider eliminating this branch now that generics are uniquified.
Specificity: 0.783202
Content Structure:
dep(consider-5, sdh-2)
root(ROOT-0, consider-5)
xcomp(consider-5, eliminating-6)
det(branch-8, this-7)
dobj(eliminating-6, branch-8)
advmod(eliminating-6, now-9)
mark(uniquified-13, that-10)
nsubjpass(uniquified-13, generics-11)
auxpass(uniquified-13, are-12)
ccomp(eliminating-6, uniquified-13)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): consider warning if language_in is too low?  it's not really any
harm, and we can't do it consistently for the prototype methods, so maybe
it's not worth doing here, either.
Specificity: 0.996802
Content Structure:
dep(consider-5, sdh-2)
root(ROOT-0, consider-5)
dep(consider-5, warning-6)
mark(low-11, if-7)
nsubj(low-11, language_in-8)
cop(low-11, is-9)
advmod(low-11, too-10)
advcl(warning-6, low-11)
nsubj(harm-18, it-13)
cop(harm-18, 's-14)
neg(harm-18, not-15)
advmod(harm-18, really-16)
det(harm-18, any-17)
ccomp(warning-6, harm-18)
cc(warning-6, and-20)
nsubj(do-24, we-21)
aux(do-24, ca-22)
neg(do-24, n't-23)
dep(consider-5, do-24)
conj:and(warning-6, do-24)
dobj(do-24, it-25)
advmod(do-24, consistently-26)
case(methods-30, for-27)
det(methods-30, the-28)
compound(methods-30, prototype-29)
nmod:for(do-24, methods-30)
dep(warning-6, so-32)
advmod(worth-37, maybe-33)
nsubj(worth-37, it-34)
cop(worth-37, 's-35)
neg(worth-37, not-36)
parataxis(warning-6, worth-37)
xcomp(worth-37, doing-38)
advmod(doing-38, here-39)
advmod(worth-37, either-41)
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): explain a bit more concretely how this is different from meet.

Specificity: 0.825204
Content Structure:
dep(explain-5, sdh-2)
root(ROOT-0, explain-5)
det(bit-7, a-6)
dep(concretely-9, bit-7)
advmod(concretely-9, more-8)
xcomp(explain-5, concretely-9)
advmod(different-13, how-10)
nsubj(different-13, this-11)
cop(different-13, is-12)
ccomp(concretely-9, different-13)
mark(meet-15, from-14)
advcl(different-13, meet-15)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): how to handle this?  Currently we throw an ISE with the message,
but this may not be the most appropriate option.  It might make sense to
add console.log() statements to any JS that comes out, particularly for
warnings.
Specificity: 0.999478
Content Structure:
nsubj(sense-32, sdh-2)
nsubj:xsubj(add-34, sdh-2)
advmod(handle-7, how-5)
mark(handle-7, to-6)
advcl(throw-12, handle-7)
dep(handle-7, this-8)
advmod(throw-12, Currently-10)
nsubj(throw-12, we-11)
dep(sdh-2, throw-12)
det(ISE-14, an-13)
dobj(throw-12, ISE-14)
case(message-17, with-15)
det(message-17, the-16)
nmod:with(ISE-14, message-17)
cc(throw-12, but-19)
nsubj(option-27, this-20)
aux(option-27, may-21)
neg(option-27, not-22)
cop(option-27, be-23)
det(option-27, the-24)
advmod(appropriate-26, most-25)
amod(option-27, appropriate-26)
dep(sdh-2, option-27)
conj:but(throw-12, option-27)
nsubj(make-31, It-29)
aux(make-31, might-30)
parataxis(sense-32, make-31)
root(ROOT-0, sense-32)
mark(add-34, to-33)
xcomp(sense-32, add-34)
xcomp(add-34, console.log-35)
amod(statements-38, -RRB--37)
dobj(console.log-35, statements-38)
nsubj(comes-43, statements-38)
case(JS-41, to-39)
det(JS-41, any-40)
nmod:to(statements-38, JS-41)
ref(statements-38, that-42)
acl:relcl(statements-38, comes-43)
compound:prt(comes-43, out-44)
advmod(comes-43, particularly-46)
case(warnings-48, for-47)
nmod:for(console.log-35, warnings-48)
File Name: ./src/com/google/javascript/jscomp/transpile/BaseTranspiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): how to specify naming scheme for sourcemap and original?
- if we're not embedding then we need to know how to find them.
- probabaly we'll keep 'path' pointing to the original, since that's
what's more important and harder to find - we can add some suffix
on for the transpiled version as necessary.
Specificity: 0.999973
Content Structure:
root(ROOT-0, sdh-2)
advmod(specify-7, how-5)
mark(specify-7, to-6)
advcl(keep-35, specify-7)
dep(specify-7, naming-8)
dobj(naming-8, scheme-9)
case(sourcemap-11, for-10)
nmod:for(scheme-9, sourcemap-11)
cc(naming-8, and-12)
dep(specify-7, original-13)
conj:and(naming-8, original-13)
mark(embedding-20, if-16)
nsubj(embedding-20, we-17)
aux(embedding-20, 're-18)
neg(embedding-20, not-19)
dep(naming-8, embedding-20)
advmod(need-23, then-21)
nsubj(need-23, we-22)
nsubj:xsubj(know-25, we-22)
ccomp(embedding-20, need-23)
mark(know-25, to-24)
xcomp(need-23, know-25)
advmod(find-28, how-26)
mark(find-28, to-27)
ccomp(know-25, find-28)
dobj(find-28, them-29)
advmod(keep-35, probabaly-32)
nsubj(keep-35, we-33)
aux(keep-35, 'll-34)
dep(sdh-2, keep-35)
dobj(keep-35, path-37)
acl(path-37, pointing-39)
case(original-42, to-40)
det(original-42, the-41)
nmod:to(pointing-39, original-42)
mark('s-46, since-44)
nsubj('s-46, that-45)
advcl(pointing-39, 's-46)
nsubj(important-50, what-47)
nsubj(harder-52, what-47)
nsubj:xsubj(find-54, what-47)
cop(important-50, 's-48)
advmod(important-50, more-49)
ccomp('s-46, important-50)
cc(important-50, and-51)
ccomp('s-46, harder-52)
conj:and(important-50, harder-52)
mark(find-54, to-53)
xcomp(important-50, find-54)
nsubj(add-58, we-56)
aux(add-58, can-57)
parataxis(keep-35, add-58)
det(suffix-60, some-59)
dobj(add-58, suffix-60)
case(version-65, on-61)
case(version-65, for-62)
det(version-65, the-63)
amod(version-65, transpiled-64)
nmod:for(add-58, version-65)
advmod(necessary-67, as-66)
amod(version-65, necessary-67)
File Name: ./src/com/google/javascript/jscomp/transpile/TranspileResult.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): make this method static to emphasize parameter symmetry.
Specificity: 0.763285
Content Structure:
dep(make-5, sdh-2)
root(ROOT-0, make-5)
det(static-8, this-6)
compound(static-8, method-7)
dobj(make-5, static-8)
nsubj:xsubj(emphasize-10, static-8)
mark(emphasize-10, to-9)
xcomp(make-5, emphasize-10)
compound(symmetry-12, parameter-11)
dobj(emphasize-10, symmetry-12)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): might be a bit nicer for this to be a suffix rather than a whole path?
Specificity: 0.908901
Content Structure:
dep(nicer-9, sdh-2)
aux(nicer-9, might-5)
cop(nicer-9, be-6)
det(bit-8, a-7)
nmod:npmod(nicer-9, bit-8)
root(ROOT-0, nicer-9)
case(this-11, for-10)
nmod:for(nicer-9, this-11)
mark(suffix-15, to-12)
cop(suffix-15, be-13)
det(suffix-15, a-14)
xcomp(nicer-9, suffix-15)
cc(suffix-15, rather-16)
mwe(rather-16, than-17)
det(path-20, a-18)
amod(path-20, whole-19)
xcomp(nicer-9, path-20)
conj:negcc(suffix-15, path-20)
File Name: ./src/com/google/javascript/jscomp/transpile/TranspileResult.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): migrate callers away and deprecate this constructor
Specificity: 0.735437
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, migrate-5)
dobj(migrate-5, callers-6)
advmod(migrate-5, away-7)
cc(migrate-5, and-8)
dep(sdh-2, deprecate-9)
conj:and(migrate-5, deprecate-9)
det(constructor-11, this-10)
dobj(deprecate-9, constructor-11)
File Name: ./src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): should this be an error?
Specificity: 0.70604
Content Structure:
root(ROOT-0, sdh-2)
aux(error-9, should-5)
nsubj(error-9, this-6)
cop(error-9, be-7)
det(error-9, an-8)
dep(sdh-2, error-9)
File Name: ./src/com/google/javascript/jscomp/deps/JsFileParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): support string-enum keys.
Bracket accesses on the IObject (or on an Array) can generally return undefined
and we don't warn about that; so ignore undefined for the object literal as well.
Specificity: 0.997618
Content Structure:
dep(accesses-10, sdh-2)
parataxis(accesses-10, support-5)
amod(keys-7, string-enum-6)
dobj(support-5, keys-7)
nsubj(accesses-10, Bracket-9)
root(ROOT-0, accesses-10)
mark(return-22, on-11)
det(IObject-13, the-12)
nsubj(return-22, IObject-13)
dep(IObject-13, or-15)
case(Array-18, on-16)
det(Array-18, an-17)
nmod:on(or-15, Array-18)
aux(return-22, can-20)
advmod(return-22, generally-21)
advcl(accesses-10, return-22)
xcomp(return-22, undefined-23)
cc(return-22, and-24)
nsubj(warn-28, we-25)
aux(warn-28, do-26)
neg(warn-28, n't-27)
advcl(accesses-10, warn-28)
conj:and(return-22, warn-28)
case(that-30, about-29)
nmod:about(warn-28, that-30)
advmod(undefined-34, so-32)
advmod(undefined-34, ignore-33)
amod(that-30, undefined-34)
case(literal-38, for-35)
det(literal-38, the-36)
compound(literal-38, object-37)
nmod:for(undefined-34, literal-38)
advmod(undefined-34, as-39)
mwe(as-39, well-40)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): test this case once NTI understands ES6 classes
Specificity: 0.8547
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, test-5)
det(case-7, this-6)
dep(test-5, case-7)
mark(understands-10, once-8)
nsubj(understands-10, NTI-9)
dep(sdh-2, understands-10)
nummod(classes-12, ES6-11)
dobj(understands-10, classes-12)
File Name: /src/com/google/javascript/jscomp/TypedCodeGenerator.java
Time Of Creation: 2017-05-31T17:59:26-07:00
Time Of Deletion: null
Creation Commit Hash: 23e2bf3ffd8b5761b6ea1fa4a3b4afe70982da1a
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): this is less useful if we end up needing the node for library version detection
Specificity: 0.884367
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, this-5)
cop(useful-8, is-6)
advmod(useful-8, less-7)
acl:relcl(this-5, useful-8)
mark(end-11, if-9)
nsubj(end-11, we-10)
advcl(useful-8, end-11)
compound:prt(end-11, up-12)
xcomp(end-11, needing-13)
det(node-15, the-14)
dobj(needing-13, node-15)
case(detection-19, for-16)
compound(detection-19, library-17)
compound(detection-19, version-18)
nmod:for(node-15, detection-19)
File Name: ./src/com/google/javascript/jscomp/parsing/ParserRunner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): this is supposed to be relative to the given class, but
GWT can't handle that - probably better to remove the class argument
and just require that paths be relative to c.g.javascript.jscomp.
Specificity: 0.995442
Content Structure:
root(ROOT-0, sdh-2)
nsubjpass(supposed-7, this-5)
nsubj:xsubj(relative-10, this-5)
auxpass(supposed-7, is-6)
dep(sdh-2, supposed-7)
mark(relative-10, to-8)
cop(relative-10, be-9)
xcomp(supposed-7, relative-10)
case(class-14, to-11)
det(class-14, the-12)
amod(class-14, given-13)
nmod:to(relative-10, class-14)
cc(supposed-7, but-16)
nsubj(handle-20, GWT-17)
nsubj(require-32, GWT-17)
aux(handle-20, ca-18)
neg(handle-20, n't-19)
dep(sdh-2, handle-20)
conj:but(supposed-7, handle-20)
dobj(handle-20, that-21)
dep(remove-26, probably-23)
dep(remove-26, better-24)
mark(remove-26, to-25)
dep(handle-20, remove-26)
det(argument-29, the-27)
compound(argument-29, class-28)
dobj(remove-26, argument-29)
cc(handle-20, and-30)
advmod(require-32, just-31)
conj:but(supposed-7, require-32)
conj:and(handle-20, require-32)
mark(relative-36, that-33)
nsubj(relative-36, paths-34)
nsubj:xsubj(c.g.javascript.jscomp-38, paths-34)
cop(relative-36, be-35)
ccomp(require-32, relative-36)
mark(c.g.javascript.jscomp-38, to-37)
xcomp(relative-36, c.g.javascript.jscomp-38)
File Name: /src/com/google/javascript/jscomp/resources/super-gwt/com/google/javascript/jscomp/resources/ResourceLoader.java
Time Of Creation: 2017-07-07T17:43:05-07:00
Time Of Deletion: null
Creation Commit Hash: 7d82bdd77e544842b3594a5c574e914f711bf068
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(sdh): this shouldn't matter once we no longer construct JSErrors
Specificity: 0.835255
Content Structure:
root(ROOT-0, sdh-2)
dep(sdh-2, this-5)
aux(matter-8, should-6)
neg(matter-8, n't-7)
acl:relcl(this-5, matter-8)
mark(construct-13, once-9)
nsubj(construct-13, we-10)
neg(longer-12, no-11)
advmod(construct-13, longer-12)
advcl(matter-8, construct-13)
dobj(construct-13, JSErrors-14)
File Name: /src/com/google/javascript/jscomp/InvalidatingTypes.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(simarora) Correct output is commented out for now - transpilation mode is being entered
to convert lets and consts to vars even though output is ES6
Specificity: 0.975946
Content Structure:
root(ROOT-0, simarora-2)
compound(output-5, Correct-4)
nsubjpass(commented-7, output-5)
auxpass(commented-7, is-6)
acl:relcl(simarora-2, commented-7)
compound:prt(commented-7, out-8)
case(now-10, for-9)
nmod:for(commented-7, now-10)
dep(simarora-2, transpilation-12)
advmod(entered-16, mode-13)
aux(entered-16, is-14)
auxpass(entered-16, being-15)
dep(simarora-2, entered-16)
mark(convert-18, to-17)
xcomp(entered-16, convert-18)
dobj(convert-18, lets-19)
cc(lets-19, and-20)
dobj(convert-18, consts-21)
conj:and(lets-19, consts-21)
case(vars-23, to-22)
nmod:to(convert-18, vars-23)
advmod(ES6-28, even-24)
mark(ES6-28, though-25)
nsubj(ES6-28, output-26)
cop(ES6-28, is-27)
advcl(convert-18, ES6-28)
File Name: /test/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclarationEs6LangOutTest.java
Time Of Creation: 2017-07-11T15:35:46-07:00
Time Of Deletion: null
Creation Commit Hash: 561da055299a9566c35c1154741e984d2783c334
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(simarora) Correct output is commented out for now - transpilation mode is being entered
Specificity: 0.845638
Content Structure:
root(ROOT-0, simarora-2)
compound(output-5, Correct-4)
nsubjpass(commented-7, output-5)
auxpass(commented-7, is-6)
acl:relcl(simarora-2, commented-7)
compound:prt(commented-7, out-8)
case(now-10, for-9)
nmod:for(commented-7, now-10)
dep(simarora-2, transpilation-12)
advmod(entered-16, mode-13)
aux(entered-16, is-14)
auxpass(entered-16, being-15)
dep(simarora-2, entered-16)
File Name: /test/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclarationEs6LangOutTest.java
Time Of Creation: 2017-07-07T17:41:16-07:00
Time Of Deletion: 2017-07-07T17:42:12-07:00
Creation Commit Hash: 155bd992b71e13acc95091481d7ac677d550e8a7
Deletion Commit Hash: 41ad1ff81983e5f536db359163bd8e818cbf25c9
Time To Complete: P0D; PT56S

Type: Complete
Content:
(simarora) Correct output is commented out for now - transpilation mode is being entered
Specificity: 0.845638
Content Structure:
root(ROOT-0, simarora-2)
compound(output-5, Correct-4)
nsubjpass(commented-7, output-5)
auxpass(commented-7, is-6)
acl:relcl(simarora-2, commented-7)
compound:prt(commented-7, out-8)
case(now-10, for-9)
nmod:for(commented-7, now-10)
dep(simarora-2, transpilation-12)
advmod(entered-16, mode-13)
aux(entered-16, is-14)
auxpass(entered-16, being-15)
dep(simarora-2, entered-16)
File Name: /test/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclarationEs6LangOutTest.java
Time Of Creation: 2017-07-07T17:43:34-07:00
Time Of Deletion: 2017-07-11T15:34:10-07:00
Creation Commit Hash: b826e092755ce17e2b3f6ad3f00d0f5220665f09
Deletion Commit Hash: 224fe12e27a4b47d32d3a187f18d7b2a8faed986
Time To Complete: P4D; PT-2H-9M-24S

Type: Incomplete
Content:
(simarora) is there a better way to identify these externs?
Specificity: 0.775681
Content Structure:
nsubj(way-8, simarora-2)
cop(way-8, is-4)
advmod(way-8, there-5)
det(way-8, a-6)
amod(way-8, better-7)
root(ROOT-0, way-8)
mark(identify-10, to-9)
acl(way-8, identify-10)
det(externs-12, these-11)
dobj(identify-10, externs-12)
File Name: /src/com/google/javascript/jscomp/RenameProperties.java
Time Of Creation: 2017-07-07T17:44:26-07:00
Time Of Deletion: null
Creation Commit Hash: c1372b799d94582eaf4b507a4a22558ff26c403c
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(simranarora) A restriction of this pass is that quoted and unquoted property
references cannot be mixed.
Specificity: 0.905903
Content Structure:
dep(that-10, simranarora-2)
det(restriction-5, A-4)
nsubj(that-10, restriction-5)
case(pass-8, of-6)
det(pass-8, this-7)
nmod:of(restriction-5, pass-8)
cop(that-10, is-9)
advcl(mixed-19, that-10)
acl(that-10, quoted-11)
cc(quoted-11, and-12)
acl(that-10, unquoted-13)
conj:and(quoted-11, unquoted-13)
compound(references-15, property-14)
nsubj(mixed-19, references-15)
aux(mixed-19, can-16)
neg(mixed-19, not-17)
cop(mixed-19, be-18)
root(ROOT-0, mixed-19)
File Name: /test/com/google/javascript/jscomp/RenamePropertiesTest.java
Time Of Creation: 2017-07-11T15:35:46-07:00
Time Of Deletion: null
Creation Commit Hash: 1421862212bf3ec096202a63fccc0251aba0f4b5
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(simranarora) We are currently traversing in Es6 for this pass, but the conversion
Specificity: 0.859327
Content Structure:
root(ROOT-0, simranarora-2)
nsubj(traversing-7, We-4)
aux(traversing-7, are-5)
advmod(traversing-7, currently-6)
acl:relcl(simranarora-2, traversing-7)
case(Es6-9, in-8)
nmod:in(traversing-7, Es6-9)
case(pass-12, for-10)
det(pass-12, this-11)
nmod:for(Es6-9, pass-12)
cc(pass-12, but-14)
det(conversion-16, the-15)
nmod:for(Es6-9, conversion-16)
conj:but(pass-12, conversion-16)
File Name: /src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
Time Of Creation: 2017-06-05T11:49:31-07:00
Time Of Deletion: 2017-06-27T11:00:33-07:00
Creation Commit Hash: 51bd73b3ddb5c4cb690ba8ee7687dc7a1db7f600
Deletion Commit Hash: 72d8adb709b120793a000fd1229d787e4111e4e3
Time To Complete: P22D; PT-48M-58S

Type: Incomplete
Content:
(simranarora) What should we have as the intended behavior with block scoping?
Specificity: 0.82887
Content Structure:
root(ROOT-0, simranarora-2)
dep(have-7, simranarora-2)
ref(simranarora-2, What-4)
aux(have-7, should-5)
nsubj(have-7, we-6)
acl:relcl(simranarora-2, have-7)
case(behavior-11, as-8)
det(behavior-11, the-9)
amod(behavior-11, intended-10)
nmod:as(have-7, behavior-11)
case(scoping-14, with-12)
compound(scoping-14, block-13)
nmod:with(behavior-11, scoping-14)
File Name: /test/com/google/javascript/jscomp/ExploitAssignsTest.java
Time Of Creation: 2017-06-27T10:59:40-07:00
Time Of Deletion: null
Creation Commit Hash: 75101184744ce6e2dde8cc63037dcdff5a5896a0
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(simranarora) make this pass
Specificity: 0.671733
Content Structure:
nsubj(make-4, simranarora-2)
root(ROOT-0, make-4)
det(pass-6, this-5)
dobj(make-4, pass-6)
File Name: /test/com/google/javascript/jscomp/RenamePropertiesTest.java
Time Of Creation: 2017-07-07T17:44:26-07:00
Time Of Deletion: 2017-07-11T15:35:46-07:00
Creation Commit Hash: c1372b799d94582eaf4b507a4a22558ff26c403c
Deletion Commit Hash: d6d7a78e176fc09f839e51964e16aab14c6fe7d3
Time To Complete: P4D; PT-2H-8M-40S

Type: Complete
Content:
(simranarora): Fix the pass so that it produces these correct outputs.
Specificity: 0.820513
Content Structure:
dep(Fix-5, simranarora-2)
root(ROOT-0, Fix-5)
det(pass-7, the-6)
dobj(Fix-5, pass-7)
mark(produces-11, so-8)
mwe(so-8, that-9)
nsubj(produces-11, it-10)
advcl(Fix-5, produces-11)
det(outputs-14, these-12)
amod(outputs-14, correct-13)
dobj(produces-11, outputs-14)
File Name: /test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: 2017-06-23T16:44:24-07:00
Creation Commit Hash: 656f3859d300ec63ee6c4f21fe7330cb354ad9c5
Deletion Commit Hash: b058b4e6748878a9cf6acec79520ef2c63132dcd
Time To Complete: P1D; PT6H7M29S

Type: Incomplete
Content:
(stalcup): convert to a persistent index of hoistable functions.
Specificity: 0.763129
Content Structure:
dep(convert-5, stalcup-2)
root(ROOT-0, convert-5)
case(index-9, to-6)
det(index-9, a-7)
amod(index-9, persistent-8)
nmod:to(convert-5, index-9)
case(functions-12, of-10)
amod(functions-12, hoistable-11)
nmod:of(index-9, functions-12)
File Name: /src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:52-07:00
Time Of Deletion: null
Creation Commit Hash: 318ec5f298cdb25dea7eb6f705409e20a0f27725
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(stalcup): convert to a persistent index of hoistable functions.
Specificity: 0.763129
Content Structure:
dep(convert-5, stalcup-2)
root(ROOT-0, convert-5)
case(index-9, to-6)
det(index-9, a-7)
amod(index-9, persistent-8)
nmod:to(convert-5, index-9)
case(functions-12, of-10)
amod(functions-12, hoistable-11)
nmod:of(index-9, functions-12)
File Name: /src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-16T16:51:12-07:00
Time Of Deletion: 2017-06-19T14:34:52-07:00
Creation Commit Hash: a9f0ce063627e38755567400acb0a95bacf2eefa
Deletion Commit Hash: a4cb49131c9db49227f188f9ee25d418f82e3bd3
Time To Complete: P3D; PT-2H-16M-20S

Type: Incomplete
Content:
(stalcup): delete this class, it's redundant with the new change tracking system.
Specificity: 0.847718
Content Structure:
root(ROOT-0, stalcup-2)
ccomp(redundant-11, delete-5)
det(class-7, this-6)
dobj(delete-5, class-7)
nsubj(redundant-11, it-9)
cop(redundant-11, 's-10)
dep(stalcup-2, redundant-11)
case(system-17, with-12)
det(system-17, the-13)
amod(system-17, new-14)
compound(system-17, change-15)
compound(system-17, tracking-16)
nmod:with(redundant-11, system-17)
File Name: /src/com/google/javascript/jscomp/AstChangeProxy.java
Time Of Creation: 2017-06-08T09:49:43-07:00
Time Of Deletion: null
Creation Commit Hash: 7d7aec1bf27e6afc1cd09e9865e19cfc7023effe
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(stalcup): do this better when the change tracking system knows about deleted scopes.
Specificity: 0.842987
Content Structure:
dep(do-5, stalcup-2)
root(ROOT-0, do-5)
nsubj(knows-13, this-6)
dep(knows-13, better-7)
advmod(knows-13, when-8)
det(system-12, the-9)
compound(system-12, change-10)
compound(system-12, tracking-11)
nsubj(knows-13, system-12)
xcomp(do-5, knows-13)
advmod(deleted-15, about-14)
nummod(scopes-16, deleted-15)
dobj(knows-13, scopes-16)
File Name: /src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-06T13:04:57-07:00
Time Of Deletion: 2017-06-08T09:51-07:00
Creation Commit Hash: 82b3ffbb07d3ca023f3c2d45084b5388f83966df
Deletion Commit Hash: 437d1c5c2a96b4802a23fddac1d24f10ea1bd97e
Time To Complete: P2D; PT-3H-13M-57S

Type: Incomplete
Content:
(stalcup): don't gather assignments ourselves, switch to a persistent
DefinitionUseSiteFinder instead.
Specificity: 0.874831
Content Structure:
dep(gather-7, stalcup-2)
aux(gather-7, do-5)
neg(gather-7, n't-6)
root(ROOT-0, gather-7)
advmod(gather-7, assignments-8)
dobj(gather-7, ourselves-9)
dep(gather-7, switch-11)
case(DefinitionUseSiteFinder-15, to-12)
det(DefinitionUseSiteFinder-15, a-13)
amod(DefinitionUseSiteFinder-15, persistent-14)
nmod:to(switch-11, DefinitionUseSiteFinder-15)
advmod(switch-11, instead-16)
File Name: /src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:52-07:00
Time Of Deletion: null
Creation Commit Hash: 318ec5f298cdb25dea7eb6f705409e20a0f27725
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(stalcup): don't gather assignments ourselves, switch to a persistent
Specificity: 0.772917
Content Structure:
nsubj(switch-11, stalcup-2)
aux(gather-7, do-5)
neg(gather-7, n't-6)
dep(stalcup-2, gather-7)
advmod(gather-7, assignments-8)
dobj(gather-7, ourselves-9)
root(ROOT-0, switch-11)
case(persistent-14, to-12)
det(persistent-14, a-13)
nmod:to(switch-11, persistent-14)
File Name: /src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-16T16:51:12-07:00
Time Of Deletion: 2017-06-19T14:34:52-07:00
Creation Commit Hash: a9f0ce063627e38755567400acb0a95bacf2eefa
Deletion Commit Hash: a4cb49131c9db49227f188f9ee25d418f82e3bd3
Time To Complete: P3D; PT-2H-16M-20S

Type: Incomplete
Content:
(stalcup): save memory by unlinking events older than the oldest marked time.
Specificity: 0.824275
Content Structure:
dep(save-5, stalcup-2)
root(ROOT-0, save-5)
dobj(save-5, memory-6)
mark(unlinking-8, by-7)
advcl(save-5, unlinking-8)
nsubj(older-10, events-9)
xcomp(unlinking-8, older-10)
case(time-15, than-11)
det(time-15, the-12)
amod(time-15, oldest-13)
amod(time-15, marked-14)
nmod:than(older-10, time-15)
File Name: ./src/com/google/javascript/jscomp/Timeline.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(stalcup): track useSites in lhs of GET_ELEM nodes as well.
Specificity: 0.897332
Content Structure:
dep(nodes-11, stalcup-2)
compound(useSites-6, track-5)
nsubj(nodes-11, useSites-6)
case(lhs-8, in-7)
nmod:in(useSites-6, lhs-8)
case(GET_ELEM-10, of-9)
nmod:of(lhs-8, GET_ELEM-10)
root(ROOT-0, nodes-11)
advmod(nodes-11, as-12)
mwe(as-12, well-13)
File Name: ./src/com/google/javascript/jscomp/DefinitionUseSiteFinder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(stephshi): rename to "traverse" when the old traverse method is no longer used
Specificity: 0.840569
Content Structure:
root(ROOT-0, stephshi-2)
dep(stephshi-2, rename-5)
case(traverse-8, to-6)
nmod:to(used-18, traverse-8)
advmod(used-18, when-10)
det(method-14, the-11)
amod(method-14, old-12)
compound(method-14, traverse-13)
nsubjpass(used-18, method-14)
auxpass(used-18, is-15)
neg(longer-17, no-16)
advmod(used-18, longer-17)
nmod(stephshi-2, used-18)
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add "const Animal = " before the goog.require and change
world.util.Animal to Animal
Specificity: 0.857711
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Add-5)
compound(=-9, const-7)
compound(=-9, Animal-8)
dobj(Add-5, =-9)
case(goog.require-13, before-11)
det(goog.require-13, the-12)
nmod:before(Add-5, goog.require-13)
cc(Add-5, and-14)
dep(tbreisacher-2, change-15)
conj:and(Add-5, change-15)
xcomp(change-15, world.util.Animal-16)
case(Animal-18, to-17)
nmod:to(world.util.Animal-16, Animal-18)
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add a SuggestedFix for this warning.
Specificity: 0.791377
Content Structure:
dep(Add-5, tbreisacher-2)
root(ROOT-0, Add-5)
det(SuggestedFix-7, a-6)
dobj(Add-5, SuggestedFix-7)
case(warning-10, for-8)
det(warning-10, this-9)
nmod:for(SuggestedFix-7, warning-10)
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add a method for detecting nodes injected as runtime libraries.
Specificity: 0.81951
Content Structure:
dep(Add-5, tbreisacher-2)
root(ROOT-0, Add-5)
det(method-7, a-6)
dobj(Add-5, method-7)
mark(detecting-9, for-8)
advcl(Add-5, detecting-9)
dobj(detecting-9, nodes-10)
acl(nodes-10, injected-11)
case(libraries-14, as-12)
amod(libraries-14, runtime-13)
nmod:as(injected-11, libraries-14)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add a warning because the user probably
intended to type an escape sequence.
Specificity: 0.871925
Content Structure:
dep(Add-5, tbreisacher-2)
root(ROOT-0, Add-5)
det(warning-7, a-6)
dobj(Add-5, warning-7)
mark(intended-12, because-8)
det(user-10, the-9)
nsubj(intended-12, user-10)
nsubj:xsubj(type-14, user-10)
advmod(intended-12, probably-11)
advcl(Add-5, intended-12)
mark(type-14, to-13)
xcomp(intended-12, type-14)
det(sequence-17, an-15)
compound(sequence-17, escape-16)
dobj(type-14, sequence-17)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add a warning if the param is shadowed or reassigned.
Specificity: 0.820763
Content Structure:
dep(Add-5, tbreisacher-2)
root(ROOT-0, Add-5)
det(warning-7, a-6)
dobj(Add-5, warning-7)
mark(shadowed-12, if-8)
det(param-10, the-9)
nsubjpass(shadowed-12, param-10)
nsubjpass(reassigned-14, param-10)
auxpass(shadowed-12, is-11)
advcl(Add-5, shadowed-12)
cc(shadowed-12, or-13)
advcl(Add-5, reassigned-14)
conj:or(shadowed-12, reassigned-14)
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteClass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Add assertions on the message text, line number, etc.

Specificity: 0.813277
Content Structure:
root(ROOT-0, tbreisacher-2)
amod(assertions-6, Add-5)
dep(tbreisacher-2, assertions-6)
case(text-10, on-7)
det(text-10, the-8)
compound(text-10, message-9)
nmod:on(assertions-6, text-10)
compound(number-13, line-12)
appos(text-10, number-13)
dep(text-10, etc.-15)
File Name: ./src/com/google/javascript/jscomp/testing/JSErrorSubject.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Allow inline JSDoc here (but then forbid it in CheckJSDoc)
so that it's clear we don't support annotations like
function f({x: /** string */ y}) {}
Specificity: 0.999094
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Allow-5)
amod(JSDoc-7, inline-6)
dobj(Allow-5, JSDoc-7)
advmod(Allow-5, here-8)
cc(forbid-12, but-10)
advmod(forbid-12, then-11)
parataxis(Allow-5, forbid-12)
dobj(forbid-12, it-13)
case(CheckJSDoc-15, in-14)
nmod:in(forbid-12, CheckJSDoc-15)
mark(clear-21, so-17)
mwe(so-17, that-18)
nsubj(clear-21, it-19)
cop(clear-21, 's-20)
advcl(Allow-5, clear-21)
nsubj(support-25, we-22)
aux(support-25, do-23)
neg(support-25, n't-24)
ccomp(clear-21, support-25)
dobj(support-25, annotations-26)
case(function-28, like-27)
nmod:like(Allow-5, function-28)
dep(function-28, f-29)
dep(-LCB--42, x-32)
dep(string-36, **-35)
dep(-RCB--40, string-36)
nummod(string-36, *-37)
compound(-RCB--40, y-39)
parataxis(x-32, -RCB--40)
dep(Allow-5, -LCB--42)
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Also fix column numbers.
Specificity: 0.711421
Content Structure:
dep(fix-6, tbreisacher-2)
advmod(fix-6, Also-5)
root(ROOT-0, fix-6)
compound(numbers-8, column-7)
dobj(fix-6, numbers-8)
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Apply this fix for JSC_JSDOC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME.
Specificity: 0.996815
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Apply-5)
det(fix-7, this-6)
dep(Apply-5, fix-7)
case(JSC_JSDOC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME-9, for-8)
nmod:for(fix-7, JSC_JSDOC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME-9)
File Name: ./src/com/google/javascript/refactoring/ErrorToFixMapper.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Avoid calling t.getScope() here, so that we aren't creating scopes we
don't need to.
Specificity: 0.953921
Content Structure:
dep(Avoid-5, tbreisacher-2)
root(ROOT-0, Avoid-5)
compound(-LRB--8, calling-6)
compound(-LRB--8, t.getScope-7)
dobj(Avoid-5, -LRB--8)
advmod(Avoid-5, here-10)
mark(creating-17, so-12)
mwe(so-12, that-13)
nsubj(creating-17, we-14)
aux(creating-17, are-15)
neg(creating-17, n't-16)
advcl(Avoid-5, creating-17)
dobj(creating-17, scopes-18)
nsubj(need-22, we-19)
aux(need-22, do-20)
neg(need-22, n't-21)
acl:relcl(scopes-18, need-22)
nmod(need-22, to-23)
File Name: ./src/com/google/javascript/jscomp/HoistVarsOutOfBlocks.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Can we display a more user-friendly name here?
Specificity: 0.771351
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(display-7, Can-5)
nsubj(display-7, we-6)
dep(tbreisacher-2, display-7)
det(name-11, a-8)
amod(name-11, more-9)
amod(name-11, user-friendly-10)
dobj(display-7, name-11)
advmod(display-7, here-12)
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Can we make automatically switch both lines to use 'new C()'?
Specificity: 0.926562
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(make-7, Can-5)
nsubj(make-7, we-6)
dep(tbreisacher-2, make-7)
advmod(make-7, automatically-8)
ccomp(make-7, switch-9)
det(lines-11, both-10)
dobj(switch-9, lines-11)
nsubj:xsubj(use-13, lines-11)
mark(use-13, to-12)
xcomp(switch-9, use-13)
amod(-LRB--17, new-15)
compound(-LRB--17, C-16)
xcomp(use-13, -LRB--17)
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Can we tighten this to allow only ROOT nodes?
Specificity: 0.866063
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(tighten-7, Can-5)
nsubj(tighten-7, we-6)
dep(tbreisacher-2, tighten-7)
dobj(tighten-7, this-8)
nsubj:xsubj(allow-10, this-8)
mark(allow-10, to-9)
xcomp(tighten-7, allow-10)
advmod(nodes-13, only-11)
amod(nodes-13, ROOT-12)
dobj(allow-10, nodes-13)
File Name: ./src/com/google/javascript/jscomp/Scope.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Can we tighten this to just NodeUtil.createsScope?
Specificity: 0.81191
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(tighten-7, Can-5)
nsubj(tighten-7, we-6)
dep(tbreisacher-2, tighten-7)
dobj(tighten-7, this-8)
nsubj:xsubj(NodeUtil.createsScope-11, this-8)
mark(NodeUtil.createsScope-11, to-9)
advmod(NodeUtil.createsScope-11, just-10)
xcomp(tighten-7, NodeUtil.createsScope-11)
File Name: ./src/com/google/javascript/jscomp/Scope.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Change this to "@extends {Animal}"
Specificity: 0.823512
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(this-6, Change-5)
dep(tbreisacher-2, this-6)
case(@extends-9, to-7)
nmod:to(this-6, @extends-9)
appos(this-6, Animal-11)
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Check that the RHS of the assignment is a
function. Note that it can be a FUNCTION node, but it can also be
a call to goog.abstractMethod, goog.functions.constant, etc.
Specificity: 0.996755
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Check-5)
mark(Note-16, that-6)
det(RHS-8, the-7)
nsubj(Note-16, RHS-8)
case(assignment-11, of-9)
det(assignment-11, the-10)
acl(RHS-8, assignment-11)
cop(function-14, is-12)
det(function-14, a-13)
acl:relcl(assignment-11, function-14)
dep(Check-5, Note-16)
mark(node-23, that-17)
nsubj(node-23, it-18)
aux(node-23, can-19)
cop(node-23, be-20)
det(node-23, a-21)
compound(node-23, FUNCTION-22)
ccomp(Note-16, node-23)
cc(node-23, but-25)
nsubj(call-31, it-26)
aux(call-31, can-27)
advmod(call-31, also-28)
cop(call-31, be-29)
det(call-31, a-30)
ccomp(Note-16, call-31)
conj:but(node-23, call-31)
case(goog.functions.constant-35, to-32)
amod(goog.functions.constant-35, goog.abstractMethod-33)
nmod:to(call-31, goog.functions.constant-35)
dep(goog.functions.constant-35, etc.-37)
File Name: ./src/com/google/javascript/jscomp/CheckJSDoc.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Check this in a separate pass, so that users get the error even if
optimizations are not running.
Specificity: 0.942997
Content Structure:
dep(Check-5, tbreisacher-2)
root(ROOT-0, Check-5)
dobj(Check-5, this-6)
case(pass-10, in-7)
det(pass-10, a-8)
amod(pass-10, separate-9)
nmod:in(this-6, pass-10)
mark(get-15, so-12)
mwe(so-12, that-13)
nsubj(get-15, users-14)
advcl(Check-5, get-15)
det(error-17, the-16)
dobj(get-15, error-17)
advmod(running-23, even-18)
mark(running-23, if-19)
nsubj(running-23, optimizations-20)
aux(running-23, are-21)
neg(running-23, not-22)
advcl(get-15, running-23)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider adding externs to 'this' instead of 'window',
for environments where the global object is not called 'window.'
Specificity: 0.973363
Content Structure:
dep(externs-7, tbreisacher-2)
csubj(externs-7, Consider-5)
xcomp(Consider-5, adding-6)
root(ROOT-0, externs-7)
case(this-10, to-8)
nmod:to(externs-7, this-10)
case(window-15, instead-12)
mwe(instead-12, of-13)
nmod:instead_of(this-10, window-15)
case(environments-19, for-18)
nmod:for(externs-7, environments-19)
advmod(called-26, where-20)
det(object-23, the-21)
amod(object-23, global-22)
nsubjpass(called-26, object-23)
auxpass(called-26, is-24)
neg(called-26, not-25)
acl:relcl(environments-19, called-26)
dobj(called-26, window-28)
File Name: ./src/com/google/javascript/jscomp/DeclaredGlobalExternsOnWindow.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider merging this with CheckAccessControls so that all
const-related checks are in the same place.
Specificity: 0.918383
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Consider-5)
xcomp(Consider-5, merging-6)
dobj(merging-6, this-7)
case(CheckAccessControls-9, with-8)
nmod:with(merging-6, CheckAccessControls-9)
mark(place-19, so-10)
mwe(so-10, that-11)
det(checks-14, all-12)
amod(checks-14, const-related-13)
nsubj(place-19, checks-14)
cop(place-19, are-15)
case(place-19, in-16)
det(place-19, the-17)
amod(place-19, same-18)
advcl(Consider-5, place-19)
File Name: ./src/com/google/javascript/jscomp/ConstCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider moving UNUSED_LOCAL_ASSIGNMENT into its own check pass, so
that we can run it after goog.scope processing, and get rid of the inGoogScope check.
Specificity: 0.995191
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Consider-5)
xcomp(Consider-5, moving-6)
dobj(moving-6, UNUSED_LOCAL_ASSIGNMENT-7)
case(pass-12, into-8)
nmod:poss(pass-12, its-9)
amod(pass-12, own-10)
compound(pass-12, check-11)
nmod:into(moving-6, pass-12)
mark(run-18, so-14)
mwe(so-14, that-15)
nsubj(run-18, we-16)
aux(run-18, can-17)
advcl(moving-6, run-18)
dobj(run-18, it-19)
case(processing-22, after-20)
amod(processing-22, goog.scope-21)
nmod:after(run-18, processing-22)
cc(Consider-5, and-24)
dep(tbreisacher-2, get-25)
conj:and(Consider-5, get-25)
xcomp(get-25, rid-26)
case(check-30, of-27)
det(check-30, the-28)
amod(check-30, inGoogScope-29)
nmod:of(Consider-5, check-30)
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider moving the CheckInterfaces warnings into the
checkTypes DiagnosticGroup
Specificity: 0.87464
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Consider-5)
xcomp(Consider-5, moving-6)
det(warnings-9, the-7)
compound(warnings-9, CheckInterfaces-8)
dobj(moving-6, warnings-9)
case(DiagnosticGroup-13, into-10)
det(DiagnosticGroup-13, the-11)
amod(DiagnosticGroup-13, checkTypes-12)
nmod:into(moving-6, DiagnosticGroup-13)
File Name: ./src/com/google/javascript/jscomp/DiagnosticGroups.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider removing this interface, since it now
has only one class implementing it.

Specificity: 0.881452
Content Structure:
dep(Consider-5, tbreisacher-2)
root(ROOT-0, Consider-5)
xcomp(Consider-5, removing-6)
det(interface-8, this-7)
dobj(removing-6, interface-8)
mark(has-13, since-10)
nsubj(has-13, it-11)
advmod(has-13, now-12)
advcl(Consider-5, has-13)
advmod(class-16, only-14)
nummod(class-16, one-15)
dobj(has-13, class-16)
acl(class-16, implementing-17)
dobj(implementing-17, it-18)
File Name: ./src/com/google/javascript/jscomp/deps/SortedDependencies.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Consider warning for this. It's valid but likely indicates a mistake.
Specificity: 0.870203
Content Structure:
dep(valid-12, tbreisacher-2)
parataxis(valid-12, Consider-5)
dobj(Consider-5, warning-6)
case(this-8, for-7)
nmod:for(Consider-5, this-8)
nsubj(valid-12, It-10)
nsubj(indicates-15, It-10)
cop(valid-12, 's-11)
root(ROOT-0, valid-12)
cc(valid-12, but-13)
advmod(indicates-15, likely-14)
conj:but(valid-12, indicates-15)
det(mistake-17, a-16)
dobj(indicates-15, mistake-17)
File Name: ./test/com/google/javascript/jscomp/Es6SuperCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Currently we do two kinds of "empty" checks because
anonymous classes have an EMPTY name node while anonymous functions
have a STRING node with an empty string. Consider making these the same.
Specificity: 0.997764
Content Structure:
dep(Currently-5, tbreisacher-2)
root(ROOT-0, Currently-5)
nsubj(do-7, we-6)
ccomp(Currently-5, do-7)
nummod(kinds-9, two-8)
nsubj(Consider-35, kinds-9)
case(checks-14, of-10)
amod(checks-14, empty-12)
nmod:of(kinds-9, checks-14)
mark(have-18, because-15)
amod(classes-17, anonymous-16)
nsubj(have-18, classes-17)
dep(checks-14, have-18)
det(name-21, an-19)
amod(name-21, EMPTY-20)
dobj(have-18, name-21)
dep(name-21, node-22)
mark(have-26, while-23)
amod(functions-25, anonymous-24)
nsubj(have-26, functions-25)
dep(node-22, have-26)
det(node-29, a-27)
compound(node-29, STRING-28)
dobj(have-26, node-29)
case(string-33, with-30)
det(string-33, an-31)
amod(string-33, empty-32)
nmod:with(have-26, string-33)
ccomp(do-7, Consider-35)
xcomp(Consider-35, making-36)
dobj(making-36, these-37)
det(same-39, the-38)
dep(these-37, same-39)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Delete this hack when strictMissingRequire is
renamed to missingRequire.
Specificity: 0.84812
Content Structure:
dep(Delete-5, tbreisacher-2)
root(ROOT-0, Delete-5)
det(hack-7, this-6)
dobj(Delete-5, hack-7)
advmod(renamed-11, when-8)
nsubjpass(renamed-11, strictMissingRequire-9)
nsubj:xsubj(missingRequire-13, strictMissingRequire-9)
auxpass(renamed-11, is-10)
acl:relcl(hack-7, renamed-11)
mark(missingRequire-13, to-12)
xcomp(renamed-11, missingRequire-13)
File Name: ./src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Deprecate this and keep just the "visibility" group.
Specificity: 0.781647
Content Structure:
dep(Deprecate-5, tbreisacher-2)
root(ROOT-0, Deprecate-5)
dobj(Deprecate-5, this-6)
cc(Deprecate-5, and-7)
conj:and(Deprecate-5, keep-8)
advmod(group-14, just-9)
det(group-14, the-10)
compound(group-14, visibility-12)
dobj(keep-8, group-14)
File Name: ./src/com/google/javascript/jscomp/DiagnosticGroups.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Disallow nullable types here. If someone writes
"@this {Foo}" in their JS we automatically treat it as though they'd written
"@this {!Foo}". But, if the type node is created in the compiler
(e.g. in the WizPass) we should explicitly add the '!'
Specificity: 0.999958
Content Structure:
dep(add-59, tbreisacher-2)
parataxis(add-59, Disallow-5)
amod(types-7, nullable-6)
dobj(Disallow-5, types-7)
advmod(writes-12, here-8)
mark(writes-12, If-10)
nsubj(writes-12, someone-11)
advcl(treat-24, writes-12)
compound(Foo-16, @this-14)
dobj(writes-12, Foo-16)
case(JS-21, in-19)
nmod:poss(JS-21, their-20)
nmod:in(writes-12, JS-21)
nsubj(treat-24, we-22)
advmod(treat-24, automatically-23)
acl:relcl(types-7, treat-24)
dobj(treat-24, it-25)
mark('d-29, as-26)
mark('d-29, though-27)
nsubj('d-29, they-28)
advcl(treat-24, 'd-29)
amod(@this-32, written-30)
dobj('d-29, @this-32)
compound(Foo-35, !-34)
appos(@this-32, Foo-35)
advmod(add-59, But-39)
mark(created-46, if-41)
det(node-44, the-42)
compound(node-44, type-43)
nsubjpass(created-46, node-44)
auxpass(created-46, is-45)
advcl(add-59, created-46)
case(compiler-49, in-47)
det(compiler-49, the-48)
nmod:in(created-46, compiler-49)
dep(compiler-49, e.g.-51)
case(WizPass-54, in-52)
det(WizPass-54, the-53)
nmod:in(e.g.-51, WizPass-54)
nsubj(add-59, we-56)
aux(add-59, should-57)
advmod(add-59, explicitly-58)
root(ROOT-0, add-59)
dobj(add-59, the-60)
case(the-60, '-61)
File Name: ./src/com/google/javascript/rhino/JSDocInfoBuilder.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Do this for all well-known symbols.
Specificity: 0.732138
Content Structure:
dep(Do-5, tbreisacher-2)
root(ROOT-0, Do-5)
dobj(Do-5, this-6)
case(symbols-10, for-7)
det(symbols-10, all-8)
amod(symbols-10, well-known-9)
nmod:for(this-6, symbols-10)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Do we still need this special case?
Specificity: 0.765155
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(need-8, Do-5)
nsubj(need-8, we-6)
advmod(need-8, still-7)
dep(tbreisacher-2, need-8)
det(case-11, this-9)
amod(case-11, special-10)
dobj(need-8, case-11)
File Name: ./src/com/google/javascript/jscomp/AggressiveInlineAliases.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Figure out how to remove this restriction.
Specificity: 0.763969
Content Structure:
dep(Figure-5, tbreisacher-2)
root(ROOT-0, Figure-5)
compound:prt(Figure-5, out-6)
advmod(remove-9, how-7)
mark(remove-9, to-8)
ccomp(Figure-5, remove-9)
det(restriction-11, this-10)
dobj(remove-9, restriction-11)
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Find out if this pass is still actually useful. Delete it if not.
Specificity: 0.892067
Content Structure:
dep(Find-5, tbreisacher-2)
root(ROOT-0, Find-5)
compound:prt(Find-5, out-6)
mark(is-10, if-7)
det(pass-9, this-8)
nsubj(is-10, pass-9)
advcl(Find-5, is-10)
advmod(is-10, still-11)
advmod(is-10, actually-12)
discourse(Delete-15, useful-13)
ccomp(is-10, Delete-15)
nsubj(not-18, it-16)
dep(not-18, if-17)
xcomp(Delete-15, not-18)
File Name: ./src/com/google/javascript/jscomp/CheckEventfulObjectDisposal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Find out why C is removed despite the @export annotation.
Specificity: 0.826432
Content Structure:
dep(Find-5, tbreisacher-2)
root(ROOT-0, Find-5)
compound:prt(Find-5, out-6)
advmod(removed-10, why-7)
nsubjpass(removed-10, C-8)
auxpass(removed-10, is-9)
advcl(Find-5, removed-10)
case(annotation-14, despite-11)
det(annotation-14, the-12)
amod(annotation-14, @export-13)
nmod:despite(removed-10, annotation-14)
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Find out why C is renamed to a despite the @export annotation.
Specificity: 0.86115
Content Structure:
dep(Find-5, tbreisacher-2)
root(ROOT-0, Find-5)
compound:prt(Find-5, out-6)
advmod(renamed-10, why-7)
nsubjpass(renamed-10, C-8)
auxpass(renamed-10, is-9)
advcl(Find-5, renamed-10)
case(a-12, to-11)
nmod:to(renamed-10, a-12)
case(annotation-16, despite-13)
det(annotation-16, the-14)
amod(annotation-16, @export-15)
nmod:despite(renamed-10, annotation-16)
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(tbreisacher): Fix and enable this test.
Specificity: 0.729193
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Fix-5)
cc(Fix-5, and-6)
dep(tbreisacher-2, enable-7)
conj:and(Fix-5, enable-7)
det(test-9, this-8)
dobj(Fix-5, test-9)
File Name: /test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java
Time Of Creation: 2017-06-29T11:52:06-07:00
Time Of Deletion: 2017-07-07T17:41:12-07:00
Creation Commit Hash: 9eedf456101ffdd98d8566fa939f5c288727ed5d
Deletion Commit Hash: 0fd2ddd7486818492dd6e2c9dc40c1c6a93fdcde
Time To Complete: P8D; PT5H49M6S

Type: Incomplete
Content:
(tbreisacher): Fix and re-enable.
Specificity: 0.677245
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Fix-5)
cc(Fix-5, and-6)
dep(tbreisacher-2, re-enable-7)
conj:and(Fix-5, re-enable-7)
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Fix and re-enable.
assertNodeEquality(
parse("x = 1\n;y = 2"),
Specificity: 0.958411
Content Structure:
root(ROOT-0, tbreisacher-2)
compound(assertNodeEquality-9, Fix-5)
cc(Fix-5, and-6)
conj:and(Fix-5, re-enable-7)
compound(assertNodeEquality-9, re-enable-7)
dep(tbreisacher-2, assertNodeEquality-9)
dep(assertNodeEquality-9, parse-11)
nsubj(=-15, x-14)
dep(parse-11, =-15)
nummod(n-18, 1-16)
amod(n-18, \-17)
dobj(=-15, n-18)
acl(n-18, y-20)
dep(2-22, =-21)
ccomp(y-20, 2-22)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Get rid of this null check once all tests pass without it.
Specificity: 0.856712
Content Structure:
dep(Get-5, tbreisacher-2)
root(ROOT-0, Get-5)
xcomp(Get-5, rid-6)
case(check-10, of-7)
det(check-10, this-8)
amod(check-10, null-9)
nmod:of(rid-6, check-10)
mark(pass-14, once-11)
det(tests-13, all-12)
nsubj(pass-14, tests-13)
advcl(Get-5, pass-14)
case(it-16, without-15)
nmod:without(pass-14, it-16)
File Name: ./src/com/google/javascript/jscomp/JSError.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Implement Generator.return:
http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return
Specificity: 0.522258
Content Structure:
root(ROOT-0, tbreisacher-2)
compound(Generator.return-6, Implement-5)
dep(tbreisacher-2, Generator.return-6)
amod(Generator.return-6, http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return-8)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Implement Generator.return:
http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return
Specificity: 0.522258
Content Structure:
root(ROOT-0, tbreisacher-2)
compound(Generator.return-6, Implement-5)
dep(tbreisacher-2, Generator.return-6)
amod(Generator.return-6, http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return-8)
File Name: /src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-07-13T15:20:26-07:00
Time Of Deletion: null
Creation Commit Hash: a3d9303aa2fc8b2719e16d5e4331d80388986c8c
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Investigate and see if we can improve this.
Specificity: 0.783361
Content Structure:
dep(Investigate-5, tbreisacher-2)
root(ROOT-0, Investigate-5)
cc(Investigate-5, and-6)
conj:and(Investigate-5, see-7)
mark(improve-11, if-8)
nsubj(improve-11, we-9)
aux(improve-11, can-10)
advcl(see-7, improve-11)
dobj(improve-11, this-12)
File Name: ./test/com/google/javascript/jscomp/InlineVariablesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Make this package-private by refactoring tests so they
don't need to call it directly.
Specificity: 0.891381
Content Structure:
dep(Make-5, tbreisacher-2)
root(ROOT-0, Make-5)
det(package-private-7, this-6)
dobj(Make-5, package-private-7)
case(tests-10, by-8)
amod(tests-10, refactoring-9)
nmod:by(Make-5, tests-10)
mark(need-15, so-11)
nsubj(need-15, they-12)
nsubj:xsubj(call-17, they-12)
aux(need-15, do-13)
neg(need-15, n't-14)
advcl(Make-5, need-15)
mark(call-17, to-16)
xcomp(need-15, call-17)
dobj(call-17, it-18)
advmod(call-17, directly-19)
File Name: ./src/com/google/javascript/refactoring/RefactoringDriver.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Move this into the compiler itself (i.e. into the jscomp package). This will
make it easier for people adding new warnings to also add fixes for them.

Specificity: 0.992711
Content Structure:
dep(make-21, tbreisacher-2)
parataxis(make-21, Move-5)
dobj(Move-5, this-6)
case(compiler-9, into-7)
det(compiler-9, the-8)
nmod:into(Move-5, compiler-9)
advmod(compiler-9, itself-10)
dep(compiler-9, i.e.-12)
case(package-16, into-13)
det(package-16, the-14)
compound(package-16, jscomp-15)
nmod:into(i.e.-12, package-16)
nsubj(make-21, This-19)
aux(make-21, will-20)
root(ROOT-0, make-21)
nsubj(easier-23, it-22)
xcomp(make-21, easier-23)
case(people-25, for-24)
nmod:for(easier-23, people-25)
acl(people-25, adding-26)
amod(warnings-28, new-27)
dobj(adding-26, warnings-28)
mark(add-31, to-29)
advmod(add-31, also-30)
advcl(adding-26, add-31)
dobj(add-31, fixes-32)
case(them-34, for-33)
nmod:for(fixes-32, them-34)
File Name: ./src/com/google/javascript/refactoring/ErrorToFixMapper.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Re-enable this test when we drop Ant.
Specificity: 0.773204
Content Structure:
root(ROOT-0, tbreisacher-2)
amod(test-7, Re-enable-5)
det(test-7, this-6)
dep(tbreisacher-2, test-7)
advmod(drop-10, when-8)
nsubj(drop-10, we-9)
acl:relcl(test-7, drop-10)
dobj(drop-10, Ant-11)
File Name: ./test/com/google/javascript/jscomp/CommandLineRunnerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove CAST from this list, and disallow
the cryptic case from cl/41958159.
Specificity: 0.899596
Content Structure:
dep(CAST-6, tbreisacher-2)
advmod(CAST-6, Remove-5)
root(ROOT-0, CAST-6)
case(list-9, from-7)
det(list-9, this-8)
nmod:from(CAST-6, list-9)
cc(CAST-6, and-11)
conj:and(CAST-6, disallow-12)
det(case-15, the-13)
amod(case-15, cryptic-14)
dobj(disallow-12, case-15)
case(cl/41958159-17, from-16)
nmod:from(disallow-12, cl/41958159-17)
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove the "if" and add this JSDoc unconditionally.
Specificity: 0.829721
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Remove-5)
dep(if-8, the-6)
xcomp(Remove-5, if-8)
cc(Remove-5, and-10)
dep(tbreisacher-2, add-11)
conj:and(Remove-5, add-11)
det(JSDoc-13, this-12)
dobj(add-11, JSDoc-13)
advmod(add-11, unconditionally-14)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteDestructuring.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this and deprecate the corresponding setter.
Specificity: 0.762443
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Remove-5)
dobj(Remove-5, this-6)
cc(Remove-5, and-7)
dep(tbreisacher-2, deprecate-8)
conj:and(Remove-5, deprecate-8)
det(setter-11, the-9)
amod(setter-11, corresponding-10)
dobj(deprecate-8, setter-11)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this and just use MISSING_REQUIRE_WARNING.
Specificity: 0.985057
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Remove-5)
dobj(Remove-5, this-6)
cc(Remove-5, and-7)
advmod(use-9, just-8)
dep(tbreisacher-2, use-9)
conj:and(Remove-5, use-9)
dobj(use-9, MISSING_REQUIRE_WARNING-10)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: null
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this branch when everything is switched to
Es6SyntacticScopeCreator.
Specificity: 0.86261
Content Structure:
dep(Remove-5, tbreisacher-2)
root(ROOT-0, Remove-5)
det(branch-7, this-6)
dobj(Remove-5, branch-7)
advmod(switched-11, when-8)
nsubjpass(switched-11, everything-9)
auxpass(switched-11, is-10)
acl:relcl(branch-7, switched-11)
case(Es6SyntacticScopeCreator-13, to-12)
nmod:to(switched-11, Es6SyntacticScopeCreator-13)
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this cast if we start returning an actual
Generator object.
Specificity: 0.851521
Content Structure:
dep(Remove-5, tbreisacher-2)
root(ROOT-0, Remove-5)
det(cast-7, this-6)
dobj(Remove-5, cast-7)
mark(start-10, if-8)
nsubj(start-10, we-9)
advcl(Remove-5, start-10)
xcomp(start-10, returning-11)
det(object-15, an-12)
amod(object-15, actual-13)
compound(object-15, Generator-14)
dobj(returning-11, object-15)
File Name: /src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-07-13T15:20:26-07:00
Time Of Deletion: null
Creation Commit Hash: a3d9303aa2fc8b2719e16d5e4331d80388986c8c
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this cast if we start returning an actual Generator object.
Specificity: 0.851521
Content Structure:
dep(Remove-5, tbreisacher-2)
root(ROOT-0, Remove-5)
det(cast-7, this-6)
dobj(Remove-5, cast-7)
mark(start-10, if-8)
nsubj(start-10, we-9)
advcl(Remove-5, start-10)
xcomp(start-10, returning-11)
det(object-15, an-12)
amod(object-15, actual-13)
compound(object-15, Generator-14)
dobj(returning-11, object-15)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this method after ctemplate issues are solved.
Specificity: 0.781819
Content Structure:
dep(Remove-5, tbreisacher-2)
root(ROOT-0, Remove-5)
det(method-7, this-6)
dobj(Remove-5, method-7)
mark(solved-12, after-8)
amod(issues-10, ctemplate-9)
nsubjpass(solved-12, issues-10)
auxpass(solved-12, are-11)
advcl(Remove-5, solved-12)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Remove this once we have implemented transpilation for all the features
we intend to support.
Specificity: 0.900976
Content Structure:
dep(Remove-5, tbreisacher-2)
root(ROOT-0, Remove-5)
dobj(Remove-5, this-6)
mark(implemented-10, once-7)
nsubj(implemented-10, we-8)
aux(implemented-10, have-9)
advcl(Remove-5, implemented-10)
dobj(implemented-10, transpilation-11)
case(features-15, for-12)
det:predet(features-15, all-13)
det(features-15, the-14)
nmod:for(implemented-10, features-15)
nsubj(intend-17, we-16)
nsubj:xsubj(support-19, we-16)
acl:relcl(features-15, intend-17)
mark(support-19, to-18)
xcomp(intend-17, support-19)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Rename Compiler to JsCompiler and remove this suppression.
Specificity: 0.835949
Content Structure:
root(ROOT-0, tbreisacher-2)
compound(Compiler-6, Rename-5)
dep(tbreisacher-2, Compiler-6)
mark(JsCompiler-8, to-7)
acl(Compiler-6, JsCompiler-8)
cc(JsCompiler-8, and-9)
acl(Compiler-6, remove-10)
conj:and(JsCompiler-8, remove-10)
det(suppression-12, this-11)
dobj(JsCompiler-8, suppression-12)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Rename this to Es6TranspilationIntegrationTest since it's really testing
a lot of different passes. Also create a unit test for Es6ToEs3Converter.
Specificity: 0.980273
Content Structure:
dep(create-21, tbreisacher-2)
nsubj(create-21, Rename-5)
dep(Rename-5, this-6)
mark(Es6TranspilationIntegrationTest-8, to-7)
dep(this-6, Es6TranspilationIntegrationTest-8)
mark(testing-13, since-9)
nsubj(testing-13, it-10)
aux(testing-13, 's-11)
advmod(testing-13, really-12)
advcl(Es6TranspilationIntegrationTest-8, testing-13)
det(lot-15, a-14)
dobj(testing-13, lot-15)
case(passes-18, of-16)
amod(passes-18, different-17)
nmod:of(lot-15, passes-18)
advmod(create-21, Also-20)
root(ROOT-0, create-21)
det(test-24, a-22)
compound(test-24, unit-23)
dobj(create-21, test-24)
case(Es6ToEs3Converter-26, for-25)
nmod:for(test-24, Es6ToEs3Converter-26)
File Name: ./test/com/google/javascript/jscomp/Es6ToEs3ConverterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Rewrite direct calls to test() to use rewriteGeneratorBody
or rewriteGeneratorBodyWithVars.
Specificity: 0.941156
Content Structure:
dep(calls-7, tbreisacher-2)
nsubj(calls-7, Rewrite-5)
nsubj:xsubj(test-9, Rewrite-5)
nsubj(rewriteGeneratorBodyWithVars-16, Rewrite-5)
amod(Rewrite-5, direct-6)
root(ROOT-0, calls-7)
mark(test-9, to-8)
xcomp(calls-7, test-9)
nsubj(use-13, -LRB--10)
mark(use-13, to-12)
ccomp(test-9, use-13)
advmod(use-13, rewriteGeneratorBody-14)
cc(calls-7, or-15)
conj:or(calls-7, rewriteGeneratorBodyWithVars-16)
File Name: ./test/com/google/javascript/jscomp/Es6RewriteGeneratorsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Should we also include the filename where ownerType is defined?
Specificity: 0.834775
Content Structure:
root(ROOT-0, tbreisacher-2)
aux(include-8, Should-5)
nsubj(include-8, we-6)
advmod(include-8, also-7)
dep(tbreisacher-2, include-8)
det(filename-10, the-9)
dobj(include-8, filename-10)
advmod(defined-14, where-11)
nsubjpass(defined-14, ownerType-12)
auxpass(defined-14, is-13)
advcl(include-8, defined-14)
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Since the function doesn't reference `this` at all, we could convert
to just "function() { console.log('hello'); }" for non-ES6 code, either in this refactoring,
or possibly as a separate one ("RemoveUnnecessaryGoogBind").
Specificity: 0.999861
Content Structure:
root(ROOT-0, tbreisacher-2)
mark(reference-10, Since-5)
det(function-7, the-6)
nsubj(reference-10, function-7)
aux(reference-10, does-8)
neg(reference-10, n't-9)
advcl(convert-19, reference-10)
dobj(reference-10, this-12)
case(all-15, at-14)
nmod:at(this-12, all-15)
nsubj(convert-19, we-17)
aux(convert-19, could-18)
dep(tbreisacher-2, convert-19)
mark(just-21, to-20)
nmod(convert-19, just-21)
dobj(just-21, function-23)
compound(console.log-27, -RRB--25)
dep(function-23, console.log-27)
dep(function-23, hello-30)
dep(function-23, -RCB--34)
case(code-38, for-36)
amod(code-38, non-ES6-37)
nmod:for(just-21, code-38)
cc:preconj(just-21, either-40)
case(refactoring-43, in-41)
det(refactoring-43, this-42)
nmod(convert-19, refactoring-43)
conj:or(just-21, refactoring-43)
cc(just-21, or-45)
advmod(one-50, possibly-46)
case(one-50, as-47)
det(one-50, a-48)
amod(one-50, separate-49)
nmod(convert-19, one-50)
conj:or(just-21, one-50)
dep(one-50, RemoveUnnecessaryGoogBind-53)
File Name: /test/com/google/javascript/refactoring/examples/GoogBindToArrowTest.java
Time Of Creation: 2017-06-16T16:51:12-07:00
Time Of Deletion: null
Creation Commit Hash: f41b31496b298b045a9572d28089872e15ed4b56
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Support this in ES3 too by not relying on Function.bind.
Specificity: 0.855759
Content Structure:
dep(Support-5, tbreisacher-2)
root(ROOT-0, Support-5)
dobj(Support-5, this-6)
case(ES3-8, in-7)
nmod:in(this-6, ES3-8)
advmod(ES3-8, too-9)
mark(relying-12, by-10)
neg(relying-12, not-11)
advcl(Support-5, relying-12)
case(Function.bind-14, on-13)
nmod:on(relying-12, Function.bind-14)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(tbreisacher): Switch this to ES5 when we drop the skipTranspilationAndCrash flag.
Specificity: 0.887932
Content Structure:
dep(Switch-5, tbreisacher-2)
root(ROOT-0, Switch-5)
dobj(Switch-5, this-6)
case(ES5-8, to-7)
nmod:to(Switch-5, ES5-8)
advmod(drop-11, when-9)
nsubj(drop-11, we-10)
advcl(Switch-5, drop-11)
det(flag-14, the-12)
amod(flag-14, skipTranspilationAndCrash-13)
dobj(drop-11, flag-14)
File Name: /src/com/google/javascript/jscomp/PassFactory.java
Time Of Creation: 2017-06-02T09:28:19-07:00
Time Of Deletion: 2017-06-06T13:05:49-07:00
Creation Commit Hash: 07712f2af8151031e64ea2a7e9e7d5393d0f1ff7
Deletion Commit Hash: 4a7c46f7d8a4e2c09b4a3339f080076d9a197078
Time To Complete: P4D; PT3H37M30S

Type: Complete
Content:
(tbreisacher): Switch this to ES5 when we drop the skipTranspilationAndCrash flag.
Specificity: 0.887932
Content Structure:
dep(Switch-5, tbreisacher-2)
root(ROOT-0, Switch-5)
dobj(Switch-5, this-6)
case(ES5-8, to-7)
nmod:to(Switch-5, ES5-8)
advmod(drop-11, when-9)
nsubj(drop-11, we-10)
advcl(Switch-5, drop-11)
det(flag-14, the-12)
amod(flag-14, skipTranspilationAndCrash-13)
dobj(drop-11, flag-14)
File Name: /src/com/google/javascript/jscomp/PassFactory.java
Time Of Creation: 2017-06-07T08:41:58-07:00
Time Of Deletion: 2017-06-08T09:50:03-07:00
Creation Commit Hash: 021cb18b99390b7138830c0fda897a6d2babe663
Deletion Commit Hash: 95bcd8b28635eedd6e1c233e3535f8b022b92050
Time To Complete: P1D; PT1H8M5S

Type: Complete
Content:
(tbreisacher): Switch this to ES5 when we drop the skipTranspilationAndCrash flag.
Specificity: 0.887932
Content Structure:
dep(Switch-5, tbreisacher-2)
root(ROOT-0, Switch-5)
dobj(Switch-5, this-6)
case(ES5-8, to-7)
nmod:to(Switch-5, ES5-8)
advmod(drop-11, when-9)
nsubj(drop-11, we-10)
advcl(Switch-5, drop-11)
det(flag-14, the-12)
amod(flag-14, skipTranspilationAndCrash-13)
dobj(drop-11, flag-14)
File Name: /src/com/google/javascript/jscomp/PassFactory.java
Time Of Creation: 2017-06-08T09:51:04-07:00
Time Of Deletion: 2017-06-12T17:03:14-07:00
Creation Commit Hash: 12e0f1713053bdc25307e9a0aed397a85f660f7c
Deletion Commit Hash: b9c61075d6596f8ec56db57fbc16d8905eaaed28
Time To Complete: P4D; PT7H12M10S

Type: Incomplete
Content:
(tbreisacher): The 'positive' option could be better:
"x && !((y!==2 && f()) || (y!==3 && h()))",
Specificity: 0.999062
Content Structure:
root(ROOT-0, tbreisacher-2)
det(option-9, The-5)
amod(option-9, positive-7)
dep(tbreisacher-2, option-9)
aux(better-12, could-10)
cop(better-12, be-11)
acl:relcl(option-9, better-12)
compound(-LRB--19, x-15)
cc(x-15, &-16)
conj:&(x-15, &-17)
compound(-LRB--19, &-17)
dep(better-12, -LRB--19)
dep(-LRB--19, y-21)
nsubj(|-31, 2-24)
cc(2-24, &-25)
cc(2-24, &-26)
conj:&(2-24, f-27)
nsubj(|-31, f-27)
appos(f-27, -RRB--29)
acl:relcl(y-21, |-31)
dobj(|-31, |-32)
dep(|-32, y-34)
dep(3-37, ==-36)
acl:relcl(y-34, 3-37)
cc(|-32, &-38)
cc(h-40, &-39)
dobj(|-31, h-40)
conj:&(|-32, h-40)
appos(h-40, -RRB--42)
File Name: ./test/com/google/javascript/jscomp/MinimizedConditionTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): These should be a MISPLACED_ANNOTATION warning instead of silently failing.
Specificity: 0.977085
Content Structure:
root(ROOT-0, tbreisacher-2)
nsubj(warning-10, These-5)
aux(warning-10, should-6)
cop(warning-10, be-7)
det(warning-10, a-8)
compound(warning-10, MISPLACED_ANNOTATION-9)
dep(tbreisacher-2, warning-10)
mark(failing-14, instead-11)
mwe(instead-11, of-12)
advmod(failing-14, silently-13)
advcl(warning-10, failing-14)
File Name: ./test/com/google/javascript/jscomp/CheckJsDocTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): This class does too many things. Break it into smaller passes.
Specificity: 0.861054
Content Structure:
nsubj(Break-12, tbreisacher-2)
det(class-6, This-5)
nsubj(does-7, class-6)
dep(tbreisacher-2, does-7)
advmod(many-9, too-8)
amod(things-10, many-9)
dobj(does-7, things-10)
root(ROOT-0, Break-12)
dobj(Break-12, it-13)
case(passes-16, into-14)
amod(passes-16, smaller-15)
nmod:into(Break-12, passes-16)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): This should be a missing-require error.
Specificity: 0.731399
Content Structure:
root(ROOT-0, tbreisacher-2)
nsubj(error-10, This-5)
aux(error-10, should-6)
cop(error-10, be-7)
det(error-10, a-8)
amod(error-10, missing-require-9)
dep(tbreisacher-2, error-10)
File Name: ./test/com/google/javascript/jscomp/MissingRequireTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
(tbreisacher): This should not produce a warning.
Specificity: 0.746122
Content Structure:
root(ROOT-0, tbreisacher-2)
nsubj(produce-8, This-5)
aux(produce-8, should-6)
neg(produce-8, not-7)
dep(tbreisacher-2, produce-8)
det(warning-10, a-9)
dobj(produce-8, warning-10)
File Name: /test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java
Time Of Creation: 2017-06-08T09:49:02-07:00
Time Of Deletion: 2017-06-12T16:17:44-07:00
Creation Commit Hash: 6c81d230f0e43925beecba5238b0ad01b647162f
Deletion Commit Hash: 72035e581d2deb7bbe517e8907897016e2c4f378
Time To Complete: P4D; PT6H28M42S

Type: Incomplete
Content:
(tbreisacher): Update CodingConvention.extractClassNameIf{Require,Provide} to match this.
Specificity: 0.929879
Content Structure:
root(ROOT-0, tbreisacher-2)
compound(CodingConvention.extractClassNameIf-6, Update-5)
dep(tbreisacher-2, CodingConvention.extractClassNameIf-6)
appos(CodingConvention.extractClassNameIf-6, Require-8)
dep(Require-8, Provide-10)
mark(match-13, to-12)
acl(CodingConvention.extractClassNameIf-6, match-13)
dobj(match-13, this-14)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: null
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Warn for @extends too. We need to distinguish between cases like this
which are totally redundant...
Specificity: 0.917066
Content Structure:
dep(need-11, tbreisacher-2)
parataxis(need-11, Warn-5)
case(@extends-7, for-6)
nmod:for(Warn-5, @extends-7)
advmod(Warn-5, too-8)
nsubj(need-11, We-10)
nsubj:xsubj(distinguish-13, We-10)
root(ROOT-0, need-11)
mark(distinguish-13, to-12)
xcomp(need-11, distinguish-13)
case(cases-15, between-14)
nmod:between(distinguish-13, cases-15)
case(this-17, like-16)
nmod:like(cases-15, this-17)
nsubj(redundant-21, this-17)
ref(this-17, which-18)
cop(redundant-21, are-19)
advmod(redundant-21, totally-20)
acl:relcl(this-17, redundant-21)
File Name: ./test/com/google/javascript/jscomp/lint/CheckJSDocStyleTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): Warn if this is used in code, but not if it's used in a type annotation.
Specificity: 0.931164
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, Warn-5)
mark(used-9, if-6)
nsubjpass(used-9, this-7)
auxpass(used-9, is-8)
dep(Warn-5, used-9)
case(code-11, in-10)
nmod:in(used-9, code-11)
cc(used-9, but-13)
dep(used-18, not-14)
mark(used-18, if-15)
nsubjpass(used-18, it-16)
auxpass(used-18, 's-17)
dep(Warn-5, used-18)
conj:but(used-9, used-18)
case(annotation-22, in-19)
det(annotation-22, a-20)
compound(annotation-22, type-21)
nmod:in(used-18, annotation-22)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: null
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): We can probably nuke this entire class and replace it with
https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html


Specificity: 0.727026
Content Structure:
root(ROOT-0, tbreisacher-2)
dep(tbreisacher-2, We-5)
aux(nuke-8, can-6)
advmod(nuke-8, probably-7)
acl:relcl(We-5, nuke-8)
det(class-11, this-9)
amod(class-11, entire-10)
dobj(nuke-8, class-11)
cc(nuke-8, and-12)
acl:relcl(We-5, replace-13)
conj:and(nuke-8, replace-13)
dobj(replace-13, it-14)
case(https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html-16, with-15)
nmod:with(replace-13, https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html-16)
File Name: ./src/com/google/javascript/jscomp/deps/PathUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): We should still warn for '\$' in a regular string literal.
Specificity: 0.865093
Content Structure:
dep(warn-8, tbreisacher-2)
nsubj(warn-8, We-5)
aux(warn-8, should-6)
advmod(warn-8, still-7)
root(ROOT-0, warn-8)
case('-13, for-9)
dep('-13, $-12)
nmod:for(warn-8, '-13)
case(literal-18, in-14)
det(literal-18, a-15)
amod(literal-18, regular-16)
compound(literal-18, string-17)
nmod:in('-13, literal-18)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tbreisacher): When this is false, report an error if there's a goog.provide
in an externs file.
Specificity: 0.915428
Content Structure:
root(ROOT-0, tbreisacher-2)
advmod(false-8, When-5)
nsubj(false-8, this-6)
cop(false-8, is-7)
advcl(report-10, false-8)
dep(tbreisacher-2, report-10)
det(error-12, an-11)
dobj(report-10, error-12)
mark('s-15, if-13)
expl('s-15, there-14)
advcl(report-10, 's-15)
det(goog.provide-17, a-16)
nsubj('s-15, goog.provide-17)
case(file-21, in-18)
det(file-21, an-19)
amod(file-21, externs-20)
nmod:in(goog.provide-17, file-21)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): Handle absolute urls here.  The compiler needs to come up with a scheme for
properly resolving absolute urls from http:// or the root /some/abs/path/... See b/62544959.
Specificity: 0.993421
Content Structure:
dep(needs-12, tdeegan-2)
parataxis(needs-12, Handle-5)
amod(urls-7, absolute-6)
dobj(Handle-5, urls-7)
advmod(Handle-5, here-8)
det(compiler-11, The-10)
nsubj(needs-12, compiler-11)
nsubj:xsubj(come-14, compiler-11)
root(ROOT-0, needs-12)
mark(come-14, to-13)
xcomp(needs-12, come-14)
compound:prt(come-14, up-15)
case(scheme-18, with-16)
det(scheme-18, a-17)
nmod:with(come-14, scheme-18)
mark(resolving-21, for-19)
advmod(resolving-21, properly-20)
acl(scheme-18, resolving-21)
amod(urls-23, absolute-22)
dobj(resolving-21, urls-23)
case(http-25, from-24)
nmod:from(resolving-21, http-25)
dep(http-25, /-27)
cc(http-25, or-29)
det(root-31, the-30)
nmod:from(resolving-21, root-31)
conj:or(http-25, root-31)
dep(http-25, some/abs/path-33)
dep(come-14, See-36)
dobj(See-36, b/62544959-37)
File Name: /src/com/google/javascript/jscomp/SourceMapResolver.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: fa5af790fc86b8bde261a19152eb222d61458333
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): Handle urls relative to //# sourceURL. See the sourcemap spec.
Specificity: 0.889493
Content Structure:
dep(urls-6, tdeegan-2)
advmod(urls-6, Handle-5)
root(ROOT-0, urls-6)
xcomp(urls-6, relative-7)
case(/-10, to-8)
compound(/-10, /-9)
nmod:to(relative-7, /-10)
dep(sourceURL-12, #-11)
dep(relative-7, sourceURL-12)
dep(sourceURL-12, See-14)
det(sourcemap-16, the-15)
nsubj(spec-17, sourcemap-16)
xcomp(See-14, spec-17)
File Name: /src/com/google/javascript/jscomp/SourceMapResolver.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: fa5af790fc86b8bde261a19152eb222d61458333
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): In the future the type information for getter/setter properties could be stored
in the defineProperties functions.  It would reduce the complexity of this pass significantly.

@author mattloring@google.com (Matthew Loring)
@author tdeegan@google.com (Thomas Deegan)

Specificity: 0.998583
Content Structure:
root(ROOT-0, tdeegan-2)
case(future-7, In-5)
det(future-7, the-6)
nmod:in(information-10, future-7)
det(information-10, the-8)
compound(information-10, type-9)
dep(tdeegan-2, information-10)
case(properties-13, for-11)
compound(properties-13, getter/setter-12)
nmod:for(information-10, properties-13)
aux(stored-16, could-14)
auxpass(stored-16, be-15)
acl:relcl(properties-13, stored-16)
case(functions-20, in-17)
det(functions-20, the-18)
amod(functions-20, defineProperties-19)
nmod:in(stored-16, functions-20)
nsubj(reduce-24, It-22)
aux(reduce-24, would-23)
acl:relcl(properties-13, reduce-24)
det(complexity-26, the-25)
dobj(reduce-24, complexity-26)
case(pass-29, of-27)
det(pass-29, this-28)
nmod:of(complexity-26, pass-29)
advmod(reduce-24, significantly-30)
compound(mattloring@google.com-33, @author-32)
dep(information-10, mattloring@google.com-33)
compound(Loring-36, Matthew-35)
appos(mattloring@google.com-33, Loring-36)
compound(tdeegan@google.com-39, @author-38)
dep(mattloring@google.com-33, tdeegan@google.com-39)
compound(Deegan-42, Thomas-41)
appos(information-10, Deegan-42)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3ClassSideInheritance.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): Not yet. Propagate local object information.
Specificity: 0.77253
Content Structure:
root(ROOT-0, tdeegan-2)
nummod(Propagate-8, Not-5)
advmod(Propagate-8, yet-6)
dep(tdeegan-2, Propagate-8)
amod(information-11, local-9)
compound(information-11, object-10)
dep(Propagate-8, information-11)
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): Revisit this.
Specificity: 0.680799
Content Structure:
root(ROOT-0, tdeegan-2)
dep(tdeegan-2, Revisit-5)
dep(Revisit-5, this-6)
File Name: ./test/com/google/javascript/jscomp/NodeUtilTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): The @GwtIncompatible tree needs to be cleaned up.
Specificity: 0.809349
Content Structure:
root(ROOT-0, tdeegan-2)
det(tree-7, The-5)
amod(tree-7, @GwtIncompatible-6)
nsubj(needs-8, tree-7)
nsubjpass:xsubj(cleaned-11, tree-7)
dep(tdeegan-2, needs-8)
mark(cleaned-11, to-9)
auxpass(cleaned-11, be-10)
xcomp(needs-8, cleaned-11)
compound:prt(cleaned-11, up-12)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tdeegan): updateA is side effect free.
Calling a function of a local object that taints this.
Specificity: 0.917579
Content Structure:
root(ROOT-0, tdeegan-2)
nsubj(effect-8, updateA-5)
cop(effect-8, is-6)
compound(effect-8, side-7)
dep(tdeegan-2, effect-8)
dep(effect-8, free-9)
dep(free-9, Calling-11)
det(function-13, a-12)
dobj(Calling-11, function-13)
case(object-17, of-14)
det(object-17, a-15)
amod(object-17, local-16)
nmod:of(function-13, object-17)
nsubj(taints-19, object-17)
ref(object-17, that-18)
acl:relcl(object-17, taints-19)
dobj(taints-19, this-20)
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tomnguyen) Handle destructuring of objects/classes as cases where the field is used.

@author johnlenz@google.com (John Lenz)

Specificity: 0.93609
Content Structure:
dep(Handle-4, tomnguyen-2)
root(ROOT-0, Handle-4)
dobj(Handle-4, destructuring-5)
case(objects/classes-7, of-6)
nmod:of(destructuring-5, objects/classes-7)
case(cases-9, as-8)
nmod:as(objects/classes-7, cases-9)
advmod(used-14, where-10)
det(field-12, the-11)
nsubjpass(used-14, field-12)
auxpass(used-14, is-13)
acl:relcl(cases-9, used-14)
compound(johnlenz@google.com-17, @author-16)
nsubj(Handle-4, johnlenz@google.com-17)
compound(Lenz-20, John-19)
appos(johnlenz@google.com-17, Lenz-20)
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tylerg) : update these to EasyMock style tests once available
Specificity: 0.796665
Content Structure:
root(ROOT-0, tylerg-2)
dep(tylerg-2, update-5)
nsubj(available-12, these-6)
case(tests-10, to-7)
compound(tests-10, EasyMock-8)
compound(tests-10, style-9)
nmod:to(these-6, tests-10)
advmod(available-12, once-11)
xcomp(update-5, available-12)
File Name: ./test/com/google/javascript/jscomp/ScopedAliasesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(tylerg): handle this for multiple modules at some point.
Specificity: 0.764224
Content Structure:
dep(handle-5, tylerg-2)
root(ROOT-0, handle-5)
dobj(handle-5, this-6)
case(modules-9, for-7)
amod(modules-9, multiple-8)
nmod:for(this-6, modules-9)
case(point-12, at-10)
det(point-12, some-11)
nmod:at(handle-5, point-12)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) - for MAPPED, only the first character is reserved which
can be used to further optimize
Specificity: 0.935878
Content Structure:
nsubjpass(reserved-13, user-2)
case(MAPPED-6, for-5)
nmod:for(user-2, MAPPED-6)
advmod(character-11, only-8)
det(character-11, the-9)
amod(character-11, first-10)
appos(user-2, character-11)
auxpass(reserved-13, is-12)
root(ROOT-0, reserved-13)
nsubjpass(used-17, which-14)
aux(used-17, can-15)
auxpass(used-17, be-16)
ccomp(reserved-13, used-17)
case(optimize-20, to-18)
amod(optimize-20, further-19)
nmod:to(used-17, optimize-20)
File Name: ./src/com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) Fix issue similar to b/2316773: bar should be preserved
but isn't due to missing references between e and foo.a
Specificity: 0.940209
Content Structure:
appos(issue-5, user-2)
amod(issue-5, Fix-4)
root(ROOT-0, issue-5)
amod(b/2316773-8, similar-6)
dep(b/2316773-8, to-7)
amod(issue-5, b/2316773-8)
nsubjpass(preserved-13, bar-10)
aux(preserved-13, should-11)
auxpass(preserved-13, be-12)
dep(issue-5, preserved-13)
cc(due-17, but-14)
cop(due-17, is-15)
neg(due-17, n't-16)
dep(issue-5, due-17)
case(references-20, to-18)
amod(references-20, missing-19)
nmod:to(due-17, references-20)
case(e-22, between-21)
nmod:between(references-20, e-22)
cc(e-22, and-23)
nmod:between(references-20, foo.a-24)
conj:and(e-22, foo.a-24)
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) Make NameAnalyzer smarter so it can remove "Class".
Specificity: 0.822763
Content Structure:
nsubj(Make-4, user-2)
root(ROOT-0, Make-4)
dobj(Make-4, NameAnalyzer-5)
advmod(Make-4, smarter-6)
mark(remove-10, so-7)
nsubj(remove-10, it-8)
aux(remove-10, can-9)
advcl(smarter-6, remove-10)
dobj(remove-10, Class-12)
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) The code only works if there is a single definition associated with a property
name.
Whatever scheme we use should not break stable renaming.
Specificity: 0.977318
Content Structure:
nsubj(break-26, user-2)
det(code-5, The-4)
nsubj(works-7, code-5)
advmod(works-7, only-6)
acl:relcl(user-2, works-7)
mark(is-10, if-8)
expl(is-10, there-9)
advcl(works-7, is-10)
det(definition-13, a-11)
amod(definition-13, single-12)
nsubj(is-10, definition-13)
acl(definition-13, associated-14)
case(name-18, with-15)
det(name-18, a-16)
compound(name-18, property-17)
nmod:with(associated-14, name-18)
nsubj(scheme-21, Whatever-20)
acl:relcl(definition-13, scheme-21)
nsubj(use-23, we-22)
ccomp(scheme-21, use-23)
aux(break-26, should-24)
neg(break-26, not-25)
root(ROOT-0, break-26)
amod(renaming-28, stable-27)
dobj(break-26, renaming-28)
File Name: ./src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) The properties that this pass adds to CALL and NEW
AST nodes increase the AST's in-memory size.  Given that we are
already running close to our memory limits, we could run into
trouble if we end up using the @nosideeffects annotation a lot
or compute @nosideeffects annotations by looking at function
bodies.  It should be easy to propagate @nosideeffects
annotations as part of passes that depend on this property and
store the result outside the AST (which would allow garbage
collection once the pass is done).
Specificity: 1.0
Content Structure:
dep(Given-23, user-2)
det(properties-5, The-4)
nsubj(Given-23, properties-5)
mark(nodes-15, that-6)
det(pass-8, this-7)
nsubj(adds-9, pass-8)
dep(nodes-15, adds-9)
case(AST-14, to-10)
compound(AST-14, CALL-11)
cc(CALL-11, and-12)
conj:and(CALL-11, NEW-13)
compound(AST-14, NEW-13)
nmod:to(adds-9, AST-14)
dep(properties-5, nodes-15)
dobj(nodes-15, increase-16)
det(AST-18, the-17)
nmod:poss(size-21, AST-18)
case(AST-18, 's-19)
amod(size-21, in-memory-20)
nsubj(nodes-15, size-21)
advcl(run-37, Given-23)
mark(running-28, that-24)
nsubj(running-28, we-25)
aux(running-28, are-26)
advmod(running-28, already-27)
ccomp(Given-23, running-28)
case(limits-33, close-29)
mwe(close-29, to-30)
nmod:poss(limits-33, our-31)
compound(limits-33, memory-32)
nmod:close_to(running-28, limits-33)
nsubj(run-37, we-35)
aux(run-37, could-36)
dep(easy-63, run-37)
case(trouble-39, into-38)
nmod:into(run-37, trouble-39)
mark(end-42, if-40)
nsubj(end-42, we-41)
advcl(run-37, end-42)
compound:prt(end-42, up-43)
dep(end-42, using-44)
det(annotation-47, the-45)
amod(annotation-47, @nosideeffects-46)
dobj(using-44, annotation-47)
det(lot-49, a-48)
dep(annotation-47, lot-49)
cc(using-44, or-50)
nummod(@nosideeffects-52, compute-51)
nmod:npmod(annotations-53, @nosideeffects-52)
dep(end-42, annotations-53)
conj:or(using-44, annotations-53)
mark(looking-55, by-54)
advcl(annotations-53, looking-55)
case(bodies-58, at-56)
compound(bodies-58, function-57)
nmod:at(looking-55, bodies-58)
nsubj(easy-63, It-60)
nsubj:xsubj(propagate-65, It-60)
nsubj:xsubj(store-78, It-60)
aux(easy-63, should-61)
cop(easy-63, be-62)
root(ROOT-0, easy-63)
mark(propagate-65, to-64)
xcomp(easy-63, propagate-65)
amod(annotations-67, @nosideeffects-66)
dobj(propagate-65, annotations-67)
case(part-69, as-68)
nmod:as(propagate-65, part-69)
case(passes-71, of-70)
nmod:of(part-69, passes-71)
nsubj(depend-73, passes-71)
ref(passes-71, that-72)
acl:relcl(passes-71, depend-73)
case(property-76, on-74)
det(property-76, this-75)
nmod:on(depend-73, property-76)
cc(propagate-65, and-77)
xcomp(easy-63, store-78)
conj:and(propagate-65, store-78)
det(result-80, the-79)
dobj(store-78, result-80)
case(AST-83, outside-81)
det(AST-83, the-82)
nmod:outside(store-78, AST-83)
nsubj(allow-87, which-85)
aux(allow-87, would-86)
parataxis(store-78, allow-87)
compound(collection-89, garbage-88)
dobj(allow-87, collection-89)
mark(done-94, once-90)
det(pass-92, the-91)
nsubjpass(done-94, pass-92)
auxpass(done-94, is-93)
advcl(allow-87, done-94)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) make the pass smarter about these cases and/or run
this pass and RemoveConstantExpressions together in a loop.
Specificity: 0.92665
Content Structure:
nsubj(make-4, user-2)
nsubj(run-12, user-2)
root(ROOT-0, make-4)
det(pass-6, the-5)
nmod:npmod(smarter-7, pass-6)
advmod(cases-10, smarter-7)
case(cases-10, about-8)
det(cases-10, these-9)
nmod:about(make-4, cases-10)
cc(make-4, and/or-11)
conj:and/or(make-4, run-12)
det(pass-14, this-13)
dobj(run-12, pass-14)
cc(pass-14, and-15)
dobj(run-12, RemoveConstantExpressions-16)
conj:and(pass-14, RemoveConstantExpressions-16)
advmod(run-12, together-17)
case(loop-20, in-18)
det(loop-20, a-19)
nmod:in(run-12, loop-20)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) revisit the dependency scope calculation
logic.
Specificity: 0.71653
Content Structure:
dep(revisit-4, user-2)
root(ROOT-0, revisit-4)
det(logic-9, the-5)
amod(logic-9, dependency-6)
compound(logic-9, scope-7)
compound(logic-9, calculation-8)
dobj(revisit-4, logic-9)
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) revisit: object literal definitions are an example
of definitions whose LHS doesn't correspond to a node that
exists in the AST.  We will have to change the return type of
getLValue sooner or later in order to provide this added
flexibility.
Specificity: 0.999379
Content Structure:
compound(revisit-4, user-2)
nsubj(have-30, revisit-4)
nsubj:xsubj(change-32, revisit-4)
parataxis(have-30, object-6)
amod(definitions-8, literal-7)
nsubj(example-11, definitions-8)
cop(example-11, are-9)
det(example-11, an-10)
ccomp(object-6, example-11)
case(definitions-13, of-12)
nmod:of(example-11, definitions-13)
dep(correspond-18, definitions-13)
ref(definitions-13, whose-14)
nsubj(correspond-18, LHS-15)
aux(correspond-18, does-16)
neg(correspond-18, n't-17)
acl:relcl(definitions-13, correspond-18)
case(node-21, to-19)
det(node-21, a-20)
nmod:to(correspond-18, node-21)
nsubj(exists-23, node-21)
ref(node-21, that-22)
acl:relcl(node-21, exists-23)
case(AST-26, in-24)
det(AST-26, the-25)
nmod:in(exists-23, AST-26)
nsubj(have-30, We-28)
nsubj:xsubj(change-32, We-28)
aux(have-30, will-29)
root(ROOT-0, have-30)
mark(change-32, to-31)
xcomp(have-30, change-32)
det(type-35, the-33)
compound(type-35, return-34)
dobj(change-32, type-35)
case(getLValue-37, of-36)
nmod:of(type-35, getLValue-37)
advmod(change-32, sooner-38)
cc(sooner-38, or-39)
advmod(change-32, later-40)
conj:or(sooner-38, later-40)
mark(provide-44, in-41)
mwe(in-41, order-42)
mark(provide-44, to-43)
advcl(have-30, provide-44)
det(flexibility-47, this-45)
amod(flexibility-47, added-46)
dobj(provide-44, flexibility-47)
File Name: ./src/com/google/javascript/jscomp/DefinitionsRemover.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user) to prevent orphan goog.provide calls, the pass would have to
account for enums, static functions and constants
Specificity: 0.915732
Content Structure:
dep(calls-8, user-2)
mark(prevent-5, to-4)
csubj(calls-8, prevent-5)
amod(goog.provide-7, orphan-6)
dobj(prevent-5, goog.provide-7)
advcl(have-13, calls-8)
det(pass-11, the-10)
nsubj(have-13, pass-11)
nsubj:xsubj(account-15, pass-11)
aux(have-13, would-12)
root(ROOT-0, have-13)
mark(account-15, to-14)
xcomp(have-13, account-15)
case(enums-17, for-16)
nmod:for(account-15, enums-17)
amod(functions-20, static-19)
nmod:for(account-15, functions-20)
conj:and(enums-17, functions-20)
cc(enums-17, and-21)
nmod:for(account-15, constants-22)
conj:and(enums-17, constants-22)
File Name: ./test/com/google/javascript/jscomp/CheckProvidesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): A constructor which doesn't have an instance type
(e.g. it's missing the @constructor annotation) should be an invalidating
type which doesn't reach this code path.
Specificity: 0.991415
Content Structure:
dep(type-27, user-2)
det(constructor-6, A-5)
nsubj(have-10, constructor-6)
nsubj(type-27, constructor-6)
ref(constructor-6, which-7)
aux(have-10, does-8)
neg(have-10, n't-9)
acl:relcl(constructor-6, have-10)
det(type-13, an-11)
compound(type-13, instance-12)
dobj(have-10, type-13)
dep(type-13, e.g.-15)
nsubj(missing-18, it-16)
aux(missing-18, 's-17)
acl:relcl(e.g.-15, missing-18)
det(annotation-21, the-19)
compound(annotation-21, @constructor-20)
dobj(missing-18, annotation-21)
aux(type-27, should-23)
cop(type-27, be-24)
det(type-27, an-25)
amod(type-27, invalidating-26)
root(ROOT-0, type-27)
nsubj(reach-31, type-27)
ref(type-27, which-28)
aux(reach-31, does-29)
neg(reach-31, n't-30)
acl:relcl(type-27, reach-31)
det(path-34, this-32)
compound(path-34, code-33)
dobj(reach-31, path-34)
File Name: ./src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Add tests for these after typecheck supports class.
Specificity: 0.783207
Content Structure:
dep(supports-11, user-2)
amod(tests-6, Add-5)
nsubj(supports-11, tests-6)
case(these-8, for-7)
nmod:for(tests-6, these-8)
case(typecheck-10, after-9)
nmod:after(these-8, typecheck-10)
root(ROOT-0, supports-11)
dobj(supports-11, class-12)
File Name: ./test/com/google/javascript/jscomp/StrictModeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): All functionality for removing nodes and edges.


@param <N> Value type that the graph node stores.
@param <E> Value type that the graph edge stores.

Specificity: 0.98483
Content Structure:
root(ROOT-0, user-2)
det(functionality-6, All-5)
dep(user-2, functionality-6)
mark(edge-30, functionality-6)
mark(removing-8, for-7)
dep(@param-13, removing-8)
dobj(removing-8, nodes-9)
cc(nodes-9, and-10)
dobj(removing-8, edges-11)
conj:and(nodes-9, edges-11)
parataxis(@param-23, @param-13)
compound(Value-15, <N>-14)
nsubj(type-16, Value-15)
xcomp(@param-13, type-16)
mark(node-20, that-17)
det(graph-19, the-18)
nsubj(node-20, graph-19)
dep(@param-13, node-20)
dobj(node-20, stores-21)
acl:relcl(functionality-6, @param-23)
compound(Value-25, <E>-24)
nsubj(type-26, Value-25)
xcomp(@param-23, type-26)
ref(functionality-6, that-27)
det(graph-29, the-28)
nsubj(edge-30, graph-29)
ccomp(@param-23, edge-30)
dobj(edge-30, stores-31)
File Name: ./src/com/google/javascript/jscomp/graph/Graph.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Alternatively, we could experiment with using a local
name to shadow a global variable.
Specificity: 0.896863
Content Structure:
root(ROOT-0, user-2)
advmod(experiment-9, Alternatively-5)
nsubj(experiment-9, we-7)
aux(experiment-9, could-8)
dep(user-2, experiment-9)
mark(using-11, with-10)
advcl(experiment-9, using-11)
det(name-14, a-12)
amod(name-14, local-13)
dobj(using-11, name-14)
mark(shadow-16, to-15)
advcl(using-11, shadow-16)
det(variable-19, a-17)
amod(variable-19, global-18)
dobj(shadow-16, variable-19)
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): An instance of this class should be used during
compilation. We also want to make all types' constructors package private
and force usage of this registry instead. This will allow us to evolve the
types without being tied by an open API.
Specificity: 0.999497
Content Structure:
nsubj(allow-37, user-2)
det(instance-6, An-5)
nsubjpass(used-12, instance-6)
case(class-9, of-7)
det(class-9, this-8)
nmod:of(instance-6, class-9)
aux(used-12, should-10)
auxpass(used-12, be-11)
dep(user-2, used-12)
case(compilation-14, during-13)
nmod:during(used-12, compilation-14)
nsubj(want-18, We-16)
nsubj:xsubj(make-20, We-16)
nsubj:xsubj(force-28, We-16)
advmod(want-18, also-17)
parataxis(allow-37, want-18)
mark(make-20, to-19)
xcomp(want-18, make-20)
det(types-22, all-21)
nmod:poss(package-25, types-22)
case(types-22, '-23)
compound(package-25, constructors-24)
nsubj(private-26, package-25)
xcomp(make-20, private-26)
cc(make-20, and-27)
xcomp(want-18, force-28)
conj:and(make-20, force-28)
dobj(force-28, usage-29)
case(registry-32, of-30)
det(registry-32, this-31)
nmod:of(usage-29, registry-32)
advmod(force-28, instead-33)
nsubj(allow-37, This-35)
aux(allow-37, will-36)
root(ROOT-0, allow-37)
dobj(allow-37, us-38)
nsubj:xsubj(evolve-40, us-38)
mark(evolve-40, to-39)
xcomp(allow-37, evolve-40)
det(types-42, the-41)
dobj(evolve-40, types-42)
mark(tied-45, without-43)
auxpass(tied-45, being-44)
advcl(evolve-40, tied-45)
case(API-49, by-46)
det(API-49, an-47)
amod(API-49, open-48)
nmod:agent(tied-45, API-49)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Better source information.
Specificity: 0.695054
Content Structure:
root(ROOT-0, user-2)
compound(information-7, Better-5)
compound(information-7, source-6)
dep(user-2, information-7)
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Calling clear doesn't deallocate the memory in a
LinkedHashSet. Consider creating a new work set if we plan to repeatedly
call analyze.
Specificity: 0.979924
Content Structure:
root(ROOT-0, user-2)
csubj(deallocate-9, Calling-5)
xcomp(Calling-5, clear-6)
aux(deallocate-9, does-7)
neg(deallocate-9, n't-8)
dep(user-2, deallocate-9)
det(memory-11, the-10)
nsubj(Consider-16, memory-11)
case(LinkedHashSet-14, in-12)
det(LinkedHashSet-14, a-13)
nmod:in(memory-11, LinkedHashSet-14)
ccomp(deallocate-9, Consider-16)
xcomp(Consider-16, creating-17)
det(set-21, a-18)
amod(set-21, new-19)
compound(set-21, work-20)
dobj(creating-17, set-21)
mark(plan-24, if-22)
nsubj(plan-24, we-23)
nsubj:xsubj(call-27, we-23)
advcl(Consider-16, plan-24)
mark(call-27, to-25)
advmod(call-27, repeatedly-26)
xcomp(plan-24, call-27)
ccomp(call-27, analyze-28)
File Name: ./src/com/google/javascript/jscomp/DataFlowAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Certain cases we can still inline.
Specificity: 0.74742
Content Structure:
root(ROOT-0, user-2)
amod(cases-6, Certain-5)
dep(user-2, cases-6)
nsubj(inline-10, we-7)
aux(inline-10, can-8)
advmod(inline-10, still-9)
acl:relcl(cases-6, inline-10)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Check to to see if AliasExterns is on
The gain we get per prototype declaration. Assuming it can be
aliased.
Specificity: 0.969114
Content Structure:
dep(aliased-25, user-2)
nsubjpass(aliased-25, Check-5)
acl(Check-5, to-6)
mark(see-8, to-7)
xcomp(to-6, see-8)
mark(gain-14, if-9)
nsubj(gain-14, AliasExterns-10)
cop(gain-14, is-11)
case(gain-14, on-12)
det(gain-14, The-13)
advcl(see-8, gain-14)
nsubj(get-16, we-15)
acl:relcl(gain-14, get-16)
case(declaration-19, per-17)
compound(declaration-19, prototype-18)
nmod:per(get-16, declaration-19)
acl(gain-14, Assuming-21)
dobj(Assuming-21, it-22)
aux(aliased-25, can-23)
auxpass(aliased-25, be-24)
root(ROOT-0, aliased-25)
File Name: ./src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Copy type information.
Specificity: 0.69604
Content Structure:
dep(Copy-5, user-2)
root(ROOT-0, Copy-5)
compound(information-7, type-6)
dobj(Copy-5, information-7)
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Each instance should support named type creation using
interning.
Specificity: 0.800771
Content Structure:
root(ROOT-0, user-2)
det(instance-6, Each-5)
nsubj(support-8, instance-6)
aux(support-8, should-7)
dep(user-2, support-8)
amod(creation-11, named-9)
compound(creation-11, type-10)
dobj(support-8, creation-11)
acl(creation-11, using-12)
advcl(using-12, interning-13)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Figure out why this increase code size most of the time.
inFunction("function x() {}; x(); var y = 1; y",
inFunction("x(); var y = 1; y; function x() {}",
inFunction("x(); var y = 1; function x() {}; y",
// Can't merge because of possible escape.
inFunction("function x() {return x}; x(); var y = 1; y",

inFunction("var y = 1; y; x; function x() {}",
inFunction("var y = 1; y; function x() {}; x",
inFunction("var y = 1; y; function x() {}; x = 1; x",
inFunction("var y = 1; y; x = 1; function x() {}; x",
Specificity: 1.0
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Figure-5)
mark(function-73, out-6)
advmod(function-73, why-7)
det(increase-9, this-8)
dep(most-12, increase-9)
compound(size-11, code-10)
dep(increase-9, size-11)
dep(function-20, most-12)
case(time-15, of-13)
det(time-15, the-14)
nmod:of(most-12, time-15)
compound(-LRB--18, inFunction-17)
nsubj(function-20, -LRB--18)
dep(function-73, function-20)
nsubj(function-53, x-21)
compound(-RCB--25, -RRB--23)
dep(x-21, -RCB--25)
compound(-LRB--28, x-27)
dep(-RCB--25, -LRB--28)
compound(y-32, var-31)
dep(x-21, y-32)
dep(1-34, =-33)
acl:relcl(y-32, 1-34)
dep(x-21, y-36)
appos(y-36, inFunction-39)
dep(inFunction-39, x-42)
dep(x-42, -LRB--43)
compound(y-47, var-46)
dep(x-21, y-47)
dep(1-49, =-48)
acl:relcl(y-47, 1-49)
dep(x-21, y-51)
ccomp(function-20, function-53)
dobj(function-53, x-54)
compound(-LCB--57, -RRB--56)
appos(x-54, -LCB--57)
nsubj(function-73, inFunction-61)
dep(inFunction-61, x-64)
dep(x-64, -LRB--65)
compound(y-69, var-68)
dep(inFunction-61, y-69)
dep(1-71, =-70)
acl:relcl(y-69, 1-71)
acl(Figure-5, function-73)
dobj(function-73, x-74)
compound(-LCB--77, -RRB--76)
appos(x-74, -LCB--77)
dep(x-74, y-80)
compound(/-84, /-83)
nsubj(merge-87, /-84)
aux(merge-87, Ca-85)
neg(merge-87, n't-86)
parataxis(function-73, merge-87)
advmod(escape-91, because-88)
case(escape-91, of-89)
amod(escape-91, possible-90)
advcl(merge-87, escape-91)
dobj(merge-87, inFunction-93)
dep(inFunction-93, function-96)
amod(x-102, x-97)
amod(x-102, -RRB--99)
amod(x-102, return-101)
dep(function-96, x-102)
compound(-LRB--106, x-105)
dep(x-102, -LRB--106)
compound(y-110, var-109)
dep(inFunction-93, y-110)
dep(1-112, =-111)
acl:relcl(y-110, 1-112)
dep(inFunction-93, y-114)
appos(y-114, inFunction-117)
amod(y-121, var-120)
dep(inFunction-117, y-121)
dep(1-123, =-122)
acl:relcl(y-121, 1-123)
dep(inFunction-93, y-125)
dep(y-125, x-127)
dep(inFunction-93, function-129)
dep(function-129, x-130)
compound(-LCB--133, -RRB--132)
appos(inFunction-93, -LCB--133)
nsubj(function-147, inFunction-137)
dep(inFunction-137, var-140)
nsubj(1-143, y-141)
dep(1-143, =-142)
ccomp(var-140, 1-143)
dep(var-140, y-145)
parataxis(function-73, function-147)
dobj(function-147, x-148)
compound(-LCB--151, -RRB--150)
appos(x-148, -LCB--151)
dep(x-148, x-154)
appos(Figure-5, inFunction-157)
compound(y-161, var-160)
dep(inFunction-157, y-161)
dep(1-163, =-162)
acl:relcl(y-161, 1-163)
dep(y-161, y-165)
dep(y-165, function-167)
dep(function-167, x-168)
compound(-LCB--171, -RRB--170)
appos(x-168, -LCB--171)
dep(y-161, x-174)
case(1-176, =-175)
nmod:=(x-174, 1-176)
dep(1-176, x-178)
dep(y-161, inFunction-181)
dep(y-161, -LRB--182)
compound(-LRB--182, var-184)
dep(-LRB--182, y-185)
dep(1-187, =-186)
acl:relcl(-LRB--182, 1-187)
nsubj(function-195, y-189)
dep(y-189, x-191)
dep(1-193, =-192)
acl:relcl(x-191, 1-193)
acl:relcl(inFunction-157, function-195)
dobj(function-195, x-196)
compound(-LCB--199, -RRB--198)
appos(x-196, -LCB--199)
dep(x-196, x-202)
File Name: ./test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Handle more complicated expression like true == true,
etc....
Specificity: 0.761678
Content Structure:
root(ROOT-0, user-2)
advmod(complicated-7, Handle-5)
advmod(complicated-7, more-6)
amod(expression-8, complicated-7)
dep(user-2, expression-8)
case(==-11, like-9)
amod(==-11, true-10)
nmod:like(expression-8, ==-11)
amod(==-11, true-12)
appos(user-2, etc.-14)
File Name: ./src/com/google/javascript/jscomp/CheckUnreachableCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Handle more complicated expression like true == true,
etc....
Specificity: 0.761678
Content Structure:
root(ROOT-0, user-2)
advmod(complicated-7, Handle-5)
advmod(complicated-7, more-6)
amod(expression-8, complicated-7)
dep(user-2, expression-8)
case(==-11, like-9)
amod(==-11, true-10)
nmod:like(expression-8, ==-11)
amod(==-11, true-12)
appos(user-2, etc.-14)
File Name: /src/com/google/javascript/jscomp/CheckUnreachableCode.java
Time Of Creation: 2017-06-06T13:04:44-07:00
Time Of Deletion: null
Creation Commit Hash: 021e134885e7c15bc6371ceec437793d0b804631
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Have a infinite loop warning instead.
Specificity: 0.746864
Content Structure:
dep(Have-5, user-2)
root(ROOT-0, Have-5)
det(loop-8, a-6)
amod(loop-8, infinite-7)
dobj(Have-5, loop-8)
acl(loop-8, warning-9)
advmod(warning-9, instead-10)
File Name: ./test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): If we want to support this syntax we have to warn about
the invalid type of the interface member.
public void testWarnDataPropertyOnInterface1() throws Exception {
testTypes("/** @interface */ u.T = function () {};\n" +
"/** @type {number} */u.T.prototype.x;",
}
Specificity: 0.999978
Content Structure:
nsubj(-RRB--3, user-2)
root(ROOT-0, -RRB--3)
mark(want-7, If-5)
nsubj(want-7, we-6)
nsubj:xsubj(support-9, we-6)
advcl(have-13, want-7)
mark(support-9, to-8)
xcomp(want-7, support-9)
det(syntax-11, this-10)
dobj(support-9, syntax-11)
nsubj(have-13, we-12)
nsubj:xsubj(warn-15, we-12)
ccomp(-RRB--3, have-13)
mark(warn-15, to-14)
xcomp(have-13, warn-15)
case(type-19, about-16)
det(type-19, the-17)
amod(type-19, invalid-18)
nmod:about(warn-15, type-19)
case(member-23, of-20)
det(member-23, the-21)
amod(member-23, interface-22)
nmod:of(type-19, member-23)
amod(-LRB--28, public-25)
amod(-LRB--28, void-26)
amod(-LRB--28, testWarnDataPropertyOnInterface1-27)
dep(member-23, -LRB--28)
acl:relcl(member-23, throws-30)
amod(-LRB--34, Exception-31)
amod(-LRB--34, testTypes-33)
dobj(throws-30, -LRB--34)
dep(@interface-38, **-37)
dep(-LRB--34, @interface-38)
dep(u.T-41, *-39)
dep(-LRB--34, u.T-41)
advmod(function-43, =-42)
dep(u.T-41, function-43)
compound(-LCB--46, -RRB--45)
dobj(function-43, -LCB--46)
compound(+-52, n-50)
dep(-LCB--46, +-52)
dep(*-60, **-55)
nmod:poss(number-58, @type-56)
nsubj(*-60, number-58)
dep(-LRB--34, *-60)
dep(-LRB--34, u.T.prototype.x-62)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): If we want to support this syntax we should warn about the
mismatching types in the two tests below.
public void testErrorMismatchingPropertyOnInterface1() throws Exception {
testTypes("/** @interface */ u.T = function () {};\n" +
"/** @param {Number} foo */u.T.prototype.x =\n" +
"/** @param {String} foo */function(foo) {};",
"found   : \n" +
}

public void testErrorMismatchingPropertyOnInterface2() throws Exception {
testTypes("/** @interface */ function T() {};\n" +
"/** @return {number} */T.prototype.x =\n" +
"/** @return {string} */function() {};",
"found   : \n" +
}
Specificity: 1.0
Content Structure:
nsubj(found-89, user-2)
mark(want-7, If-5)
nsubj(want-7, we-6)
nsubj:xsubj(support-9, we-6)
acl:relcl(user-2, want-7)
mark(support-9, to-8)
xcomp(want-7, support-9)
det(syntax-11, this-10)
dobj(support-9, syntax-11)
nsubj(warn-14, we-12)
aux(warn-14, should-13)
acl:relcl(syntax-11, warn-14)
case(types-18, about-15)
det(types-18, the-16)
amod(types-18, mismatching-17)
nmod:about(throws-30, types-18)
case(testErrorMismatchingPropertyOnInterface1-27, in-19)
det(tests-22, the-20)
nummod(tests-22, two-21)
compound(testErrorMismatchingPropertyOnInterface1-27, tests-22)
advmod(testErrorMismatchingPropertyOnInterface1-27, below-23)
dep(void-26, public-25)
amod(testErrorMismatchingPropertyOnInterface1-27, void-26)
nmod:in(types-18, testErrorMismatchingPropertyOnInterface1-27)
nsubj(throws-30, -RRB--29)
ccomp(warn-14, throws-30)
dobj(throws-30, Exception-31)
dep(Exception-31, testTypes-33)
dep(testTypes-33, ''-35)
dep(@interface-38, **-37)
dep(-LRB--44, @interface-38)
nummod(@interface-38, *-39)
compound(-LRB--44, u.T-41)
compound(-LRB--44, =-42)
compound(-LRB--44, function-43)
parataxis(''-35, -LRB--44)
dep(testTypes-33, -LCB--46)
compound(+-52, n-50)
dep(Exception-31, +-52)
dep(@param-56, **-55)
dep(Number-58, @param-56)
dep(-LCB--83, Number-58)
compound(=-64, foo-60)
compound(=-64, *-61)
compound(=-64, /-62)
compound(=-64, u.T.prototype.x-63)
dep(Number-58, =-64)
compound(+-68, n-66)
dep(=-64, +-68)
dep(@param-72, **-71)
dep(=-64, @param-72)
dep(=-64, String-74)
case(function-79, foo-76)
dep(function-79, *-77)
acl(String-74, function-79)
discourse(String-74, foo-81)
dep(+-52, -LCB--83)
root(ROOT-0, found-89)
nsubj(+-94, n-92)
parataxis(found-89, +-94)
xcomp(+-94, -RCB--95)
dep(void-97, public-96)
amod(testErrorMismatchingPropertyOnInterface2-98, void-97)
dobj(-RCB--95, testErrorMismatchingPropertyOnInterface2-98)
nsubj(throws-101, -RRB--100)
parataxis(-RCB--95, throws-101)
amod(-LRB--105, Exception-102)
amod(-LRB--105, testTypes-104)
nsubj(function-112, -LRB--105)
dep(*-110, **-108)
nsubj(*-110, @interface-109)
dep(-LRB--105, *-110)
ccomp(throws-101, function-112)
compound:prt(function-112, T-113)
compound(-LCB--116, -RRB--115)
dobj(function-112, -LCB--116)
compound(+-122, n-120)
dep(-LCB--116, +-122)
dep(number-128, **-125)
amod(number-128, @return-126)
dep(-LCB--150, number-128)
compound(=-133, *-130)
compound(=-133, /-131)
compound(=-133, T.prototype.x-132)
dep(number-128, =-133)
compound(+-137, n-135)
dep(=-133, +-137)
dep(string-143, **-140)
amod(string-143, @return-141)
dep(-LRB--148, string-143)
appos(string-143, *-145)
compound(-LRB--148, function-147)
dep(+-137, -LRB--148)
dep(+-122, -LCB--150)
dep(function-112, found-156)
nsubj(+-161, n-159)
ccomp(found-156, +-161)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): If you look outside of just liveness, x = {} is dead.
That probably requires value numbering or SSA to detect that case.
Specificity: 0.988198
Content Structure:
nsubj(requires-22, user-2)
mark(look-7, If-5)
nsubj(look-7, you-6)
advcl(dead-18, look-7)
case(liveness-11, outside-8)
mwe(outside-8, of-9)
amod(liveness-11, just-10)
nmod:outside_of(look-7, liveness-11)
compound(-LCB--15, x-13)
compound(-LCB--15, =-14)
nsubj(dead-18, -LCB--15)
cop(dead-18, is-17)
dep(user-2, dead-18)
dep(user-2, That-20)
advmod(requires-22, probably-21)
root(ROOT-0, requires-22)
compound(numbering-24, value-23)
dobj(requires-22, numbering-24)
nsubj:xsubj(detect-28, numbering-24)
cc(numbering-24, or-25)
dobj(requires-22, SSA-26)
conj:or(numbering-24, SSA-26)
nsubj:xsubj(detect-28, SSA-26)
mark(detect-28, to-27)
xcomp(requires-22, detect-28)
det(case-30, that-29)
dobj(detect-28, case-30)
File Name: ./test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): In theory, we CAN coalesce function names just like
any variables. Our Liveness analysis captures this just like it as
described in the specification. However, we saw some zipped and
and unzipped size increase after this. We are not totally sure why
that is but, for now, we will respect the dead functions and not play
around with it.
Specificity: 0.999989
Content Structure:
root(ROOT-0, user-2)
case(theory-6, In-5)
nmod:in(captures-21, theory-6)
dep(names-12, we-8)
appos(we-8, CAN-9)
amod(names-12, coalesce-10)
compound(names-12, function-11)
dep(captures-21, names-12)
advmod(variables-16, just-13)
case(variables-16, like-14)
det(variables-16, any-15)
nmod:like(names-12, variables-16)
nmod:poss(analysis-20, Our-18)
compound(analysis-20, Liveness-19)
nsubj(captures-21, analysis-20)
dep(user-2, captures-21)
det(just-23, this-22)
dobj(captures-21, just-23)
case(it-25, like-24)
nmod:like(captures-21, it-25)
mark(saw-35, as-26)
advcl(saw-35, described-27)
case(specification-30, in-28)
det(specification-30, the-29)
nmod:in(described-27, specification-30)
advmod(described-27, However-32)
nsubj(saw-35, we-34)
advcl(captures-21, saw-35)
nsubj(zipped-37, some-36)
ccomp(saw-35, zipped-37)
cc(saw-35, and-38)
cc(increase-42, and-39)
amod(increase-42, unzipped-40)
compound(increase-42, size-41)
dep(sure-50, increase-42)
case(this-44, after-43)
nmod:after(increase-42, this-44)
nsubj(sure-50, We-46)
cop(sure-50, are-47)
neg(sure-50, not-48)
advmod(sure-50, totally-49)
advcl(captures-21, sure-50)
conj:and(saw-35, sure-50)
advmod(is-53, why-51)
nsubj(is-53, that-52)
advcl(sure-50, is-53)
cc(respect-61, but-54)
case(now-57, for-56)
nmod:for(respect-61, now-57)
nsubj(respect-61, we-59)
nsubj(play-67, we-59)
aux(respect-61, will-60)
ccomp(is-53, respect-61)
det(functions-64, the-62)
amod(functions-64, dead-63)
dobj(respect-61, functions-64)
cc(respect-61, and-65)
neg(play-67, not-66)
ccomp(is-53, play-67)
conj:but(respect-61, play-67)
compound:prt(play-67, around-68)
case(it-70, with-69)
nmod:with(play-67, it-70)
File Name: ./src/com/google/javascript/jscomp/CoalesceVariableNames.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Investigate how we should handle the case where
we have a very complex expression inside the FOR-IN header.
Specificity: 0.954841
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Investigate-5)
advmod(handle-9, how-6)
nsubj(handle-9, we-7)
aux(handle-9, should-8)
dep(Investigate-5, handle-9)
det(case-11, the-10)
dobj(handle-9, case-11)
advmod(have-14, where-12)
nsubj(have-14, we-13)
advcl(handle-9, have-14)
det(expression-18, a-15)
advmod(complex-17, very-16)
amod(expression-18, complex-17)
dobj(have-14, expression-18)
case(header-22, inside-19)
det(header-22, the-20)
compound(header-22, FOR-IN-21)
nmod:inside(expression-18, header-22)
File Name: ./src/com/google/javascript/jscomp/ControlFlowGraph.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Investigate whether it is really necessary to keep two
different mechanisms for resolving named types, and if so, which order
makes more sense. Now, resolution via registry is first in order to
avoid triggering the warnings built into the resolution via properties.
Specificity: 0.999492
Content Structure:
dep(first-37, user-2)
parataxis(first-37, Investigate-5)
mark(necessary-10, whether-6)
nsubj(necessary-10, it-7)
nsubj:xsubj(keep-12, it-7)
cop(necessary-10, is-8)
advmod(necessary-10, really-9)
ccomp(Investigate-5, necessary-10)
mark(keep-12, to-11)
xcomp(necessary-10, keep-12)
nummod(mechanisms-15, two-13)
amod(mechanisms-15, different-14)
dobj(keep-12, mechanisms-15)
mark(resolving-17, for-16)
dep(keep-12, resolving-17)
amod(types-19, named-18)
dobj(resolving-17, types-19)
cc(resolving-17, and-21)
dep(so-23, if-22)
dep(keep-12, so-23)
conj:and(resolving-17, so-23)
dobj(makes-27, which-25)
nsubj(makes-27, order-26)
ccomp(necessary-10, makes-27)
amod(sense-29, more-28)
dobj(makes-27, sense-29)
advmod(first-37, Now-31)
nsubj(first-37, resolution-33)
case(registry-35, via-34)
nmod:via(resolution-33, registry-35)
cop(first-37, is-36)
root(ROOT-0, first-37)
mark(avoid-41, in-38)
mwe(in-38, order-39)
mark(avoid-41, to-40)
advcl(first-37, avoid-41)
xcomp(avoid-41, triggering-42)
det(warnings-44, the-43)
dobj(triggering-42, warnings-44)
acl(warnings-44, built-45)
case(resolution-48, into-46)
det(resolution-48, the-47)
nmod:into(built-45, resolution-48)
case(properties-50, via-49)
nmod:via(resolution-48, properties-50)
File Name: ./src/com/google/javascript/rhino/jstype/NamedType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): It doesn't look like the user can do much in this
case right now.
Specificity: 0.898326
Content Structure:
root(ROOT-0, user-2)
nsubj(look-8, It-5)
aux(look-8, does-6)
neg(look-8, n't-7)
dep(user-2, look-8)
mark(do-13, like-9)
det(user-11, the-10)
nsubj(do-13, user-11)
aux(do-13, can-12)
advcl(look-8, do-13)
advmod(do-13, much-14)
case(right-18, in-15)
det(case-17, this-16)
nmod:npmod(right-18, case-17)
advcl(much-14, right-18)
advmod(do-13, now-19)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): It is much cleaner to have two algorithms depending
on favorsCommaOverSemiColon. If we decided the less aggressive one is
no longer useful, delete it.
Specificity: 0.986449
Content Structure:
root(ROOT-0, user-2)
nsubj(cleaner-8, It-5)
nsubj:xsubj(have-10, It-5)
cop(cleaner-8, is-6)
advmod(cleaner-8, much-7)
dep(user-2, cleaner-8)
mark(have-10, to-9)
xcomp(cleaner-8, have-10)
nummod(algorithms-12, two-11)
dobj(have-10, algorithms-12)
case(favorsCommaOverSemiColon-15, depending-13)
case(favorsCommaOverSemiColon-15, on-14)
advcl(have-10, favorsCommaOverSemiColon-15)
mark(decided-19, If-17)
nsubj(decided-19, we-18)
advcl(delete-29, decided-19)
det(one-23, the-20)
advmod(aggressive-22, less-21)
amod(one-23, aggressive-22)
nsubj(useful-27, one-23)
cop(useful-27, is-24)
neg(longer-26, no-25)
advmod(useful-27, longer-26)
ccomp(decided-19, useful-27)
acl:relcl(favorsCommaOverSemiColon-15, delete-29)
dobj(delete-29, it-30)
File Name: ./src/com/google/javascript/jscomp/StatementFusion.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): It is possible to cover this case with the same algorithm
as the missing return check.
Specificity: 0.914943
Content Structure:
root(ROOT-0, user-2)
nsubj(possible-7, It-5)
nsubj:xsubj(cover-9, It-5)
cop(possible-7, is-6)
dep(user-2, possible-7)
mark(cover-9, to-8)
xcomp(possible-7, cover-9)
det(case-11, this-10)
dobj(cover-9, case-11)
case(algorithm-15, with-12)
det(algorithm-15, the-13)
amod(algorithm-15, same-14)
nmod:with(cover-9, algorithm-15)
case(check-20, as-16)
det(check-20, the-17)
amod(check-20, missing-18)
compound(check-20, return-19)
nmod:as(algorithm-15, check-20)
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): It is possible to get more information if curNode or
its parent is missing. We still have the scope stack in which it is still
very useful to find out at least which function caused the exception.
Specificity: 0.998097
Content Structure:
root(ROOT-0, user-2)
nsubj(possible-7, It-5)
nsubj:xsubj(get-9, It-5)
cop(possible-7, is-6)
dep(user-2, possible-7)
mark(get-9, to-8)
xcomp(possible-7, get-9)
amod(information-11, more-10)
dobj(get-9, information-11)
mark(missing-18, if-12)
nsubj(missing-18, curNode-13)
cc(curNode-13, or-14)
nmod:poss(parent-16, its-15)
conj:or(curNode-13, parent-16)
nsubj(missing-18, parent-16)
cop(missing-18, is-17)
advcl(get-9, missing-18)
nmod:in(useful-32, missing-18)
nsubj(have-22, We-20)
advmod(have-22, still-21)
acl:relcl(missing-18, have-22)
det(stack-25, the-23)
compound(stack-25, scope-24)
dobj(have-22, stack-25)
nmod:in(useful-32, stack-25)
case(which-27, in-26)
ref(missing-18, which-27)
ref(stack-25, which-27)
nsubj(useful-32, it-28)
nsubj:xsubj(find-34, it-28)
cop(useful-32, is-29)
advmod(useful-32, still-30)
advmod(useful-32, very-31)
acl:relcl(stack-25, useful-32)
mark(find-34, to-33)
xcomp(useful-32, find-34)
compound:prt(find-34, out-35)
advmod(find-34, at-36)
mwe(at-36, least-37)
det(function-39, which-38)
nsubj(caused-40, function-39)
advcl(at-36, caused-40)
det(exception-42, the-41)
dobj(caused-40, exception-42)
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): It would be nice to warn for using 'this' here
Specificity: 0.832511
Content Structure:
root(ROOT-0, user-2)
dep(user-2, It-5)
aux(nice-8, would-6)
cop(nice-8, be-7)
acl:relcl(It-5, nice-8)
mark(warn-10, to-9)
xcomp(nice-8, warn-10)
mark(using-12, for-11)
advcl(warn-10, using-12)
dobj(using-12, this-14)
advmod(nice-8, here-16)
File Name: ./test/com/google/javascript/jscomp/CheckGlobalThisTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Its possible not to give up just yet. The type
inference did a 'semi value propagation'. If we know that string
is never a subclass of the type of the index. We'd know that
it is never 'callee'.
return false; // Give up.
Specificity: 0.999878
Content Structure:
dep(return-52, user-2)
nmod:poss(possible-6, Its-5)
mark(callee-49, possible-6)
nsubj(return-52, possible-6)
neg(give-9, not-7)
mark(give-9, to-8)
dep(possible-6, give-9)
compound:prt(give-9, up-10)
advmod(yet-12, just-11)
advcl(give-9, yet-12)
det(inference-16, The-14)
compound(inference-16, type-15)
dobj(give-9, inference-16)
acl:relcl(inference-16, did-17)
det(propagation-22, a-18)
amod(propagation-22, semi-20)
compound(propagation-22, value-21)
dobj(did-17, propagation-22)
mark(know-27, If-25)
nsubj(know-27, we-26)
advcl(know-43, know-27)
mark(subclass-33, that-28)
nsubj(subclass-33, string-29)
cop(subclass-33, is-30)
neg(subclass-33, never-31)
det(subclass-33, a-32)
ccomp(know-27, subclass-33)
case(type-36, of-34)
det(type-36, the-35)
nmod:of(subclass-33, type-36)
case(index-39, of-37)
det(index-39, the-38)
nmod:of(type-36, index-39)
nsubj(know-43, We-41)
aux(know-43, 'd-42)
acl:relcl(possible-6, know-43)
ref(possible-6, that-44)
nsubj(callee-49, it-45)
cop(callee-49, is-46)
neg(callee-49, never-47)
ccomp(know-43, callee-49)
root(ROOT-0, return-52)
xcomp(return-52, false-53)
compound(/-56, /-55)
nsubj(Give-57, /-56)
ccomp(return-52, Give-57)
compound:prt(Give-57, up-58)
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Its possible to fold this better.
Specificity: 0.747606
Content Structure:
root(ROOT-0, user-2)
nmod:poss(possible-6, Its-5)
dep(user-2, possible-6)
mark(fold-8, to-7)
acl(possible-6, fold-8)
det(better-10, this-9)
dobj(fold-8, better-10)
File Name: ./test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Make CollapseProperties even more aggressive so that
a$b.z gets collapsed. Right now, it doesn't get collapsed because the
expression (a.b && a.b.c) could return a.b. But since it returns a.b iff
a.b *is* safely collapsible, the Boolean logic should be smart enough to
only consider the right side of the && as aliasing.
Specificity: 0.999986
Content Structure:
dep(collapsed-25, user-2)
parataxis(collapsed-25, Make-5)
nsubj(aggressive-9, CollapseProperties-6)
advmod(aggressive-9, even-7)
advmod(aggressive-9, more-8)
xcomp(Make-5, aggressive-9)
mark(collapsed-16, so-10)
mwe(so-10, that-11)
det(b.z-14, a-12)
dep(b.z-14, $-13)
nsubj(collapsed-16, b.z-14)
dep(b.z-14, gets-15)
advcl(Make-5, collapsed-16)
advmod(now-19, Right-18)
advmod(collapsed-25, now-19)
nsubjpass(collapsed-25, it-21)
aux(collapsed-25, does-22)
neg(collapsed-25, n't-23)
auxpass(collapsed-25, get-24)
root(ROOT-0, collapsed-25)
mark(return-36, because-26)
det(expression-28, the-27)
nsubj(return-36, expression-28)
dep(expression-28, a.b-30)
cc(a.b-30, &-31)
cc(a.b.c-33, &-32)
dep(expression-28, a.b.c-33)
conj:&(a.b-30, a.b.c-33)
aux(return-36, could-35)
advcl(collapsed-25, return-36)
dep(return-36, a.b.-37)
cc(return-36, But-39)
mark(returns-42, since-40)
nsubj(returns-42, it-41)
advcl(smart-57, returns-42)
compound(a.b-45, a.b-43)
compound(a.b-45, iff-44)
dobj(returns-42, a.b-45)
dep(collapsible-50, *-46)
cop(collapsible-50, is-47)
advmod(collapsible-50, *-48)
advmod(collapsible-50, safely-49)
dep(a.b-45, collapsible-50)
det(logic-54, the-52)
compound(logic-54, Boolean-53)
nsubj(smart-57, logic-54)
nsubj:xsubj(consider-61, logic-54)
aux(smart-57, should-55)
cop(smart-57, be-56)
advcl(collapsed-25, smart-57)
conj:but(return-36, smart-57)
advmod(smart-57, enough-58)
mark(consider-61, to-59)
advmod(consider-61, only-60)
xcomp(smart-57, consider-61)
det(side-64, the-62)
amod(side-64, right-63)
dobj(consider-61, side-64)
case(the-66, of-65)
nmod:of(side-64, the-66)
cc(side-64, &-67)
dobj(consider-61, &-68)
conj:&(side-64, &-68)
case(aliasing-70, as-69)
nmod:as(&-68, aliasing-70)
File Name: ./test/com/google/javascript/jscomp/CollapsePropertiesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Make a constructor which doesn't have an instance type
(e.g. it's missing the @constructor annotation) an invalidating type which
doesn't reach this code path.
Specificity: 0.989758
Content Structure:
dep(Make-5, user-2)
root(ROOT-0, Make-5)
det(constructor-7, a-6)
nsubj(have-11, constructor-7)
nsubj(type-26, constructor-7)
ref(constructor-7, which-8)
aux(have-11, does-9)
neg(have-11, n't-10)
acl:relcl(constructor-7, have-11)
det(type-14, an-12)
compound(type-14, instance-13)
dobj(have-11, type-14)
dep(type-14, e.g.-16)
nsubj(missing-19, it-17)
aux(missing-19, 's-18)
acl:relcl(e.g.-16, missing-19)
det(annotation-22, the-20)
compound(annotation-22, @constructor-21)
dobj(missing-19, annotation-22)
det(type-26, an-24)
amod(type-26, invalidating-25)
xcomp(Make-5, type-26)
nsubj(reach-30, which-27)
aux(reach-30, does-28)
neg(reach-30, n't-29)
ccomp(type-26, reach-30)
det(path-33, this-31)
compound(path-33, code-32)
dobj(reach-30, path-33)
File Name: /src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Make this save to file OR output to the application
Specificity: 0.845566
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Make-5)
nsubj(save-7, this-6)
nsubj:xsubj(file-9, this-6)
ccomp(Make-5, save-7)
mark(file-9, to-8)
xcomp(save-7, file-9)
compound(output-11, OR-10)
dobj(file-9, output-11)
case(application-14, to-12)
det(application-14, the-13)
nmod:to(file-9, application-14)
File Name: ./src/com/google/javascript/jscomp/AliasStrings.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Maps scope to string instead of Node to string.
Make sure of scope memorization to minimize scope creation cost.
Specificity: 0.957939
Content Structure:
dep(Make-15, user-2)
nsubj(Make-15, Maps-5)
acl(Maps-5, scope-6)
case(string-8, to-7)
nmod:to(scope-6, string-8)
case(Node-11, instead-9)
mwe(instead-9, of-10)
nmod:instead_of(string-8, Node-11)
case(string-13, to-12)
nmod:to(scope-6, string-13)
root(ROOT-0, Make-15)
xcomp(Make-15, sure-16)
case(memorization-19, of-17)
compound(memorization-19, scope-18)
nmod:of(sure-16, memorization-19)
mark(minimize-21, to-20)
xcomp(sure-16, minimize-21)
compound(cost-24, scope-22)
compound(cost-24, creation-23)
dobj(minimize-21, cost-24)
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Maybe compute it somewhere else and re-use the escape
local set here.
Specificity: 0.848886
Content Structure:
dep(compute-6, user-2)
advmod(compute-6, Maybe-5)
root(ROOT-0, compute-6)
dobj(compute-6, it-7)
advmod(else-9, somewhere-8)
advmod(compute-6, else-9)
cc(compute-6, and-10)
conj:and(compute-6, re-use-11)
det(set-15, the-12)
compound(set-15, escape-13)
amod(set-15, local-14)
dobj(re-use-11, set-15)
advmod(re-use-11, here-16)
File Name: ./src/com/google/javascript/jscomp/MaybeReachingVariableUse.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Maybe we don't need a HashMap to look up.
I started writing a skip-list like data-structure that would let us
have O(1) favors() and O(1) reset() but the code got very messy.
Lets start with a logical implementation first until performance becomes
a problem.
Specificity: 0.999964
Content Structure:
dep(started-17, user-2)
parataxis(started-17, Maybe-5)
nsubj(need-9, we-6)
aux(need-9, do-7)
neg(need-9, n't-8)
ccomp(Maybe-5, need-9)
det(HashMap-11, a-10)
dobj(need-9, HashMap-11)
nsubj:xsubj(look-13, HashMap-11)
mark(look-13, to-12)
xcomp(need-9, look-13)
compound:prt(look-13, up-14)
nsubj(started-17, I-16)
root(ROOT-0, started-17)
xcomp(started-17, writing-18)
det(skip-list-20, a-19)
dobj(writing-18, skip-list-20)
nsubj(let-25, skip-list-20)
case(data-structure-22, like-21)
nmod:like(skip-list-20, data-structure-22)
ref(skip-list-20, that-23)
aux(let-25, would-24)
acl:relcl(skip-list-20, let-25)
nsubj(have-27, us-26)
ccomp(let-25, have-27)
dobj(have-27, O-28)
appos(O-28, 1-30)
acl:relcl(O-28, favors-32)
parataxis(favors-32, -RRB--34)
cc(-RRB--34, and-35)
parataxis(favors-32, O-36)
conj:and(-RRB--34, O-36)
appos(-LRB--41, 1-38)
amod(-LRB--41, reset-40)
dobj(O-36, -LRB--41)
cc(got-46, but-43)
det(code-45, the-44)
nsubj(got-46, code-45)
ccomp(favors-32, got-46)
advmod(messy-48, very-47)
amod(Lets-50, messy-48)
nsubj(start-51, Lets-50)
ccomp(got-46, start-51)
case(implementation-55, with-52)
det(implementation-55, a-53)
amod(implementation-55, logical-54)
nmod:with(start-51, implementation-55)
advmod(start-51, first-56)
mark(becomes-59, until-57)
nsubj(becomes-59, performance-58)
advcl(have-27, becomes-59)
det(problem-61, a-60)
xcomp(becomes-59, problem-61)
File Name: ./src/com/google/javascript/jscomp/DefaultNameGenerator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): More accuracy can be introduced
i.e. We know exactly what arguments[x] is if x is a constant
number.
Specificity: 0.972463
Content Structure:
root(ROOT-0, user-2)
amod(accuracy-6, More-5)
nsubjpass(introduced-9, accuracy-6)
aux(introduced-9, can-7)
auxpass(introduced-9, be-8)
dep(user-2, introduced-9)
dobj(introduced-9, i.e.-10)
dep(-LSB--17, i.e.-10)
nsubj(know-13, We-12)
acl:relcl(i.e.-10, know-13)
advmod(what-15, exactly-14)
ref(i.e.-10, what-15)
nsubj(-LSB--17, arguments-16)
ccomp(know-13, -LSB--17)
nsubj(is-20, x-18)
advmod(is-20, -RSB--19)
ccomp(-LSB--17, is-20)
mark(number-26, if-21)
nsubj(number-26, x-22)
cop(number-26, is-23)
det(number-26, a-24)
amod(number-26, constant-25)
advcl(is-20, number-26)
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Move this into the lexer/parser.
Remove the string literal characters around a field name,
if any.
Specificity: 0.932445
Content Structure:
dep(literal-14, user-2)
parataxis(literal-14, Move-5)
dobj(Move-5, this-6)
case(lexer/parser-9, into-7)
det(lexer/parser-9, the-8)
nmod:into(Move-5, lexer/parser-9)
amod(string-13, Remove-11)
det(string-13, the-12)
nsubj(literal-14, string-13)
root(ROOT-0, literal-14)
dobj(literal-14, characters-15)
case(name-19, around-16)
det(name-19, a-17)
compound(name-19, field-18)
nmod:around(literal-14, name-19)
case(any-22, if-21)
advmod(literal-14, any-22)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Move this method to the SemanticRAI and use the visit
method of types to get the restricted type.

Specificity: 0.953671
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Move-5)
det(method-7, this-6)
dobj(Move-5, method-7)
case(SemanticRAI-10, to-8)
det(SemanticRAI-10, the-9)
nmod:to(Move-5, SemanticRAI-10)
cc(Move-5, and-11)
dep(user-2, use-12)
conj:and(Move-5, use-12)
det(method-15, the-13)
compound(method-15, visit-14)
dobj(use-12, method-15)
case(types-17, of-16)
nmod:of(method-15, types-17)
mark(get-19, to-18)
advcl(use-12, get-19)
det(type-22, the-20)
amod(type-22, restricted-21)
dobj(get-19, type-22)
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Only traverse the function's body. The function's
name and arguments are traversed by the scope creator, and ideally
should not be traversed by the type checker.
Specificity: 0.990755
Content Structure:
dep('s-14, user-2)
advmod(traverse-6, Only-5)
parataxis('s-14, traverse-6)
det(function-8, the-7)
nmod:poss(body-10, function-8)
case(function-8, 's-9)
dobj(traverse-6, body-10)
det(function-13, The-12)
nsubj('s-14, function-13)
root(ROOT-0, 's-14)
nsubjpass(traversed-19, name-15)
nsubjpass(traversed-30, name-15)
cc(name-15, and-16)
conj:and(name-15, arguments-17)
nsubjpass(traversed-19, arguments-17)
auxpass(traversed-19, are-18)
ccomp('s-14, traversed-19)
case(creator-23, by-20)
det(creator-23, the-21)
compound(creator-23, scope-22)
nmod:agent(traversed-19, creator-23)
cc(traversed-19, and-25)
advmod(traversed-30, ideally-26)
aux(traversed-30, should-27)
neg(traversed-30, not-28)
auxpass(traversed-30, be-29)
ccomp('s-14, traversed-30)
conj:and(traversed-19, traversed-30)
case(checker-34, by-31)
det(checker-34, the-32)
compound(checker-34, type-33)
nmod:agent(traversed-30, checker-34)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Optimize this.
Specificity: 0.681353
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Optimize-5)
dep(Optimize-5, this-6)
File Name: ./test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Pass needs to be updated for listenable interfaces.
Specificity: 0.783207
Content Structure:
dep(needs-6, user-2)
advmod(needs-6, Pass-5)
root(ROOT-0, needs-6)
mark(updated-9, to-7)
auxpass(updated-9, be-8)
xcomp(needs-6, updated-9)
case(interfaces-12, for-10)
amod(interfaces-12, listenable-11)
nmod:for(updated-9, interfaces-12)
File Name: ./src/com/google/javascript/jscomp/CheckEventfulObjectDisposal.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Push every local type name out of namesToTypes so that
NamedType#resolve is correct.
Specificity: 0.915978
Content Structure:
dep(Push-5, user-2)
root(ROOT-0, Push-5)
det(name-9, every-6)
amod(name-9, local-7)
compound(name-9, type-8)
dobj(Push-5, name-9)
case(namesToTypes-12, out-10)
mwe(out-10, of-11)
nmod:out_of(name-9, namesToTypes-12)
mark(correct-18, so-13)
mwe(so-13, that-14)
compound(#resolve-16, NamedType-15)
nsubj(correct-18, #resolve-16)
cop(correct-18, is-17)
advcl(Push-5, correct-18)
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Rename this pass to PeepholeReorderConstantExpression
to follow our naming convention.
Specificity: 0.874542
Content Structure:
dep(Rename-5, user-2)
root(ROOT-0, Rename-5)
det(pass-7, this-6)
dobj(Rename-5, pass-7)
case(PeepholeReorderConstantExpression-9, to-8)
nmod:to(Rename-5, PeepholeReorderConstantExpression-9)
mark(follow-11, to-10)
advcl(Rename-5, follow-11)
nmod:poss(convention-14, our-12)
compound(convention-14, naming-13)
dobj(follow-11, convention-14)
File Name: ./src/com/google/javascript/jscomp/ReorderConstantExpression.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Reverse this logic to make it correct instead of generous.
Specificity: 0.821014
Content Structure:
dep(Reverse-5, user-2)
root(ROOT-0, Reverse-5)
det(logic-7, this-6)
dobj(Reverse-5, logic-7)
nsubj:xsubj(make-9, logic-7)
mark(make-9, to-8)
xcomp(Reverse-5, make-9)
nsubj(correct-11, it-10)
xcomp(make-9, correct-11)
case(generous-14, instead-12)
mwe(instead-12, of-13)
advcl(correct-11, generous-14)
File Name: ./src/com/google/javascript/rhino/jstype/UnionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Revisit all of this logic.<p>

The existing typing logic is hacky.  Unresolved types should get processed
in a more consistent way, but with the Rhino merge coming, there will be
much that has to be changed.<p>


Specificity: 0.998937
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Revisit-5)
nsubj(has-42, Revisit-5)
nsubjpass:xsubj(changed-45, Revisit-5)
nsubj(<p>-11, all-6)
case(logic-9, of-7)
det(logic-9, this-8)
nmod:of(all-6, logic-9)
advcl(much-40, <p>-11)
det(logic-15, The-12)
amod(logic-15, existing-13)
compound(logic-15, typing-14)
nsubj(hacky-17, logic-15)
cop(hacky-17, is-16)
ccomp(<p>-11, hacky-17)
compound(types-20, Unresolved-19)
nsubj(get-22, types-20)
aux(get-22, should-21)
dep(<p>-11, get-22)
xcomp(get-22, processed-23)
case(way-28, in-24)
det(way-28, a-25)
advmod(consistent-27, more-26)
amod(way-28, consistent-27)
nmod:in(get-22, way-28)
cc(<p>-11, but-30)
mark(merge-34, with-31)
det(Rhino-33, the-32)
nsubj(merge-34, Rhino-33)
conj:but(<p>-11, merge-34)
advcl(much-40, merge-34)
xcomp(merge-34, coming-35)
expl(much-40, there-37)
aux(much-40, will-38)
cop(much-40, be-39)
acl:relcl(Revisit-5, much-40)
ref(Revisit-5, that-41)
ccomp(much-40, has-42)
mark(changed-45, to-43)
auxpass(changed-45, be-44)
xcomp(has-42, changed-45)
advmod(much-40, <p>-47)
File Name: ./src/com/google/javascript/rhino/jstype/NamedType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Revisit this for ES4, which is stricter.
Specificity: 0.810974
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Revisit-5)
dep(Revisit-5, this-6)
case(ES4-8, for-7)
nmod:for(Revisit-5, ES4-8)
nsubj(stricter-12, ES4-8)
ref(ES4-8, which-10)
cop(stricter-12, is-11)
acl:relcl(ES4-8, stricter-12)
File Name: ./src/com/google/javascript/rhino/jstype/BooleanType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Revisit this for ES4, which is stricter.
Specificity: 0.810974
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Revisit-5)
dep(Revisit-5, this-6)
case(ES4-8, for-7)
nmod:for(Revisit-5, ES4-8)
nsubj(stricter-12, ES4-8)
ref(ES4-8, which-10)
cop(stricter-12, is-11)
acl:relcl(ES4-8, stricter-12)
File Name: ./src/com/google/javascript/rhino/jstype/NumberType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Revisit this for ES4, which is stricter.
Specificity: 0.810974
Content Structure:
root(ROOT-0, user-2)
dep(user-2, Revisit-5)
dep(Revisit-5, this-6)
case(ES4-8, for-7)
nmod:for(Revisit-5, ES4-8)
nsubj(stricter-12, ES4-8)
ref(ES4-8, which-10)
cop(stricter-12, is-11)
acl:relcl(ES4-8, stricter-12)
File Name: ./src/com/google/javascript/rhino/jstype/StringType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Side-effect is OK sometimes. As long as there are no
side-effect function down all paths to the use. Once we have all the
side-effect analysis tool.
Specificity: 0.988597
Content Structure:
root(ROOT-0, user-2)
nsubj(OK-7, Side-effect-5)
cop(OK-7, is-6)
dep(user-2, OK-7)
dep(As-10, sometimes-8)
dep(OK-7, As-10)
advmod(are-14, long-11)
mark(are-14, as-12)
expl(are-14, there-13)
dep(OK-7, are-14)
neg(function-17, no-15)
amod(function-17, side-effect-16)
nsubj(are-14, function-17)
case(all-19, down-18)
advmod(paths-20, all-19)
acl(function-17, paths-20)
case(use-23, to-21)
det(use-23, the-22)
nmod:to(paths-20, use-23)
advmod(have-27, Once-25)
nsubj(have-27, we-26)
ccomp(OK-7, have-27)
det:predet(tool-32, all-28)
det(tool-32, the-29)
amod(tool-32, side-effect-30)
compound(tool-32, analysis-31)
dobj(have-27, tool-32)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): The current algorithm will not detect this case. It is
still computable in most cases.
Specificity: 0.917579
Content Structure:
dep(computable-17, user-2)
det(algorithm-7, The-5)
amod(algorithm-7, current-6)
parataxis(computable-17, algorithm-7)
aux(detect-10, will-8)
neg(detect-10, not-9)
acl:relcl(algorithm-7, detect-10)
det(case-12, this-11)
dobj(detect-10, case-12)
nsubj(computable-17, It-14)
cop(computable-17, is-15)
advmod(computable-17, still-16)
root(ROOT-0, computable-17)
case(cases-20, in-18)
amod(cases-20, most-19)
nmod:in(computable-17, cases-20)
File Name: ./test/com/google/javascript/jscomp/CheckMissingReturnTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): These should be inlinable after the REGEX checks.
Specificity: 0.870181
Content Structure:
root(ROOT-0, user-2)
nsubj(inlinable-8, These-5)
aux(inlinable-8, should-6)
cop(inlinable-8, be-7)
dep(user-2, inlinable-8)
case(checks-12, after-9)
det(checks-12, the-10)
compound(checks-12, REGEX-11)
nmod:after(inlinable-8, checks-12)
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): These should be inlinable.
Specificity: 0.712536
Content Structure:
root(ROOT-0, user-2)
nsubj(inlinable-8, These-5)
aux(inlinable-8, should-6)
cop(inlinable-8, be-7)
dep(user-2, inlinable-8)
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This branch indicates a compiler bug, not worthy of
halting the compilation but we should log this and analyze to track
down why it happens. This is not critical and will be resolved over
time as the type checker is extended.
Specificity: 0.99917
Content Structure:
dep(critical-35, user-2)
det(branch-6, This-5)
parataxis(critical-35, branch-6)
acl:relcl(branch-6, indicates-7)
det(bug-10, a-8)
compound(bug-10, compiler-9)
dobj(indicates-7, bug-10)
neg(worthy-13, not-12)
amod(bug-10, worthy-13)
mark(halting-15, of-14)
advcl(worthy-13, halting-15)
det(compilation-17, the-16)
dobj(halting-15, compilation-17)
cc(log-21, but-18)
nsubj(log-21, we-19)
nsubj(analyze-24, we-19)
nsubj:xsubj(track-26, we-19)
aux(log-21, should-20)
dep(halting-15, log-21)
dobj(log-21, this-22)
cc(log-21, and-23)
dep(halting-15, analyze-24)
conj:and(log-21, analyze-24)
mark(track-26, to-25)
xcomp(analyze-24, track-26)
compound:prt(track-26, down-27)
advmod(happens-30, why-28)
nsubj(happens-30, it-29)
advcl(track-26, happens-30)
nsubj(critical-35, This-32)
nsubjpass(resolved-39, This-32)
cop(critical-35, is-33)
neg(critical-35, not-34)
root(ROOT-0, critical-35)
cc(critical-35, and-36)
aux(resolved-39, will-37)
auxpass(resolved-39, be-38)
conj:and(critical-35, resolved-39)
case(time-41, over-40)
nmod:over(resolved-39, time-41)
mark(extended-47, as-42)
det(checker-45, the-43)
compound(checker-45, type-44)
nsubjpass(extended-47, checker-45)
auxpass(extended-47, is-46)
advcl(resolved-39, extended-47)
File Name: ./src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This branch indicates a compiler bug, not worthy of
halting the compilation but we should log this and analyze to track
down why it happens. This is not critical and will be resolved over
time as the type checker is extended.
Specificity: 0.99917
Content Structure:
dep(critical-35, user-2)
det(branch-6, This-5)
parataxis(critical-35, branch-6)
acl:relcl(branch-6, indicates-7)
det(bug-10, a-8)
compound(bug-10, compiler-9)
dobj(indicates-7, bug-10)
neg(worthy-13, not-12)
amod(bug-10, worthy-13)
mark(halting-15, of-14)
advcl(worthy-13, halting-15)
det(compilation-17, the-16)
dobj(halting-15, compilation-17)
cc(log-21, but-18)
nsubj(log-21, we-19)
nsubj(analyze-24, we-19)
nsubj:xsubj(track-26, we-19)
aux(log-21, should-20)
dep(halting-15, log-21)
dobj(log-21, this-22)
cc(log-21, and-23)
dep(halting-15, analyze-24)
conj:and(log-21, analyze-24)
mark(track-26, to-25)
xcomp(analyze-24, track-26)
compound:prt(track-26, down-27)
advmod(happens-30, why-28)
nsubj(happens-30, it-29)
advcl(track-26, happens-30)
nsubj(critical-35, This-32)
nsubjpass(resolved-39, This-32)
cop(critical-35, is-33)
neg(critical-35, not-34)
root(ROOT-0, critical-35)
cc(critical-35, and-36)
aux(resolved-39, will-37)
auxpass(resolved-39, be-38)
conj:and(critical-35, resolved-39)
case(time-41, over-40)
nmod:over(resolved-39, time-41)
mark(extended-47, as-42)
det(checker-45, the-43)
compound(checker-45, type-44)
nsubjpass(extended-47, checker-45)
auxpass(extended-47, is-46)
advcl(resolved-39, extended-47)
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This forces a first crack at crossModuleCodeMotion
before devirtualization. Once certain functions are devirtualized,
it confuses crossModuleCodeMotion ability to recognized that
it is recursive.
Specificity: 0.987791
Content Structure:
root(ROOT-0, user-2)
nsubj(forces-6, This-5)
dep(user-2, forces-6)
det(crack-9, a-7)
amod(crack-9, first-8)
dobj(forces-6, crack-9)
case(crossModuleCodeMotion-11, at-10)
nmod:at(forces-6, crossModuleCodeMotion-11)
mark(confuses-22, before-12)
dep(devirtualized-19, devirtualization-13)
mark(devirtualized-19, Once-15)
amod(functions-17, certain-16)
nsubjpass(devirtualized-19, functions-17)
auxpass(devirtualized-19, are-18)
advcl(confuses-22, devirtualized-19)
nsubj(confuses-22, it-21)
advcl(forces-6, confuses-22)
compound(ability-24, crossModuleCodeMotion-23)
dobj(confuses-22, ability-24)
mark(recognized-26, to-25)
advcl(confuses-22, recognized-26)
mark(recursive-30, that-27)
nsubj(recursive-30, it-28)
cop(recursive-30, is-29)
ccomp(recognized-26, recursive-30)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This implementation currently does not make use of the column
parameter.
Specificity: 0.838086
Content Structure:
root(ROOT-0, user-2)
det(implementation-6, This-5)
nsubj(make-10, implementation-6)
advmod(make-10, currently-7)
aux(make-10, does-8)
neg(make-10, not-9)
dep(user-2, make-10)
dobj(make-10, use-11)
case(parameter-15, of-12)
det(parameter-15, the-13)
compound(parameter-15, column-14)
nmod:of(use-11, parameter-15)
File Name: ./src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This is a problem with removeNoOpStatements.
Every expression in a FOR-IN header looks side effect free on its own.
Specificity: 0.974034
Content Structure:
nsubj(looks-18, user-2)
dep(user-2, This-5)
cop(problem-8, is-6)
det(problem-8, a-7)
acl:relcl(This-5, problem-8)
case(removeNoOpStatements-10, with-9)
nmod:with(problem-8, removeNoOpStatements-10)
det(expression-13, Every-12)
dep(This-5, expression-13)
case(header-17, in-14)
det(header-17, a-15)
compound(header-17, FOR-IN-16)
nmod:in(expression-13, header-17)
root(ROOT-0, looks-18)
compound(effect-20, side-19)
nsubj(free-21, effect-20)
xcomp(looks-18, free-21)
case(own-24, on-22)
nmod:poss(own-24, its-23)
nmod:on(free-21, own-24)
File Name: ./src/com/google/javascript/jscomp/UnreachableCodeElimination.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This is meant for a temporary quick win.
In the future, we might want to improve our analysis in
CrossModuleCodeMotion so we don't need to do this.
Specificity: 0.992935
Content Structure:
ccomp(want-20, user-2)
nsubjpass(meant-7, This-5)
auxpass(meant-7, is-6)
acl:relcl(user-2, meant-7)
case(win-12, for-8)
det(win-12, a-9)
amod(win-12, temporary-10)
amod(win-12, quick-11)
nmod:for(meant-7, win-12)
case(future-16, In-14)
det(future-16, the-15)
dep(user-2, future-16)
nsubj(want-20, we-18)
nsubj:xsubj(improve-22, we-18)
aux(want-20, might-19)
root(ROOT-0, want-20)
mark(improve-22, to-21)
xcomp(want-20, improve-22)
nmod:poss(analysis-24, our-23)
dobj(improve-22, analysis-24)
case(CrossModuleCodeMotion-26, in-25)
nmod:in(improve-22, CrossModuleCodeMotion-26)
mark(need-31, so-27)
nsubj(need-31, we-28)
nsubj:xsubj(do-33, we-28)
aux(need-31, do-29)
neg(need-31, n't-30)
advcl(improve-22, need-31)
mark(do-33, to-32)
xcomp(need-31, do-33)
dobj(do-33, this-34)
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This is temporary. Once flow sensitive inlining is stable
Remove this.
Specificity: 0.872598
Content Structure:
nsubj(flow-10, user-2)
nsubj(temporary-7, This-5)
cop(temporary-7, is-6)
dep(user-2, temporary-7)
advmod(flow-10, Once-9)
root(ROOT-0, flow-10)
amod(inlining-12, sensitive-11)
nsubj(stable-14, inlining-12)
cop(stable-14, is-13)
ccomp(flow-10, stable-14)
ccomp(stable-14, Remove-15)
dobj(Remove-15, this-16)
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This must know about ON_EX edges but it should handle
it better than what we did in liveness. Because we are in a forward mode,
we can used the branched forward analysis.
Specificity: 0.996469
Content Structure:
root(ROOT-0, user-2)
nsubj(know-7, This-5)
aux(know-7, must-6)
dep(user-2, know-7)
advmod(ON_EX-9, about-8)
nummod(edges-10, ON_EX-9)
dobj(know-7, edges-10)
cc(handle-14, but-11)
nsubj(handle-14, it-12)
aux(handle-14, should-13)
dep(know-7, handle-14)
nsubj(better-16, it-15)
xcomp(handle-14, better-16)
mark(did-20, than-17)
dobj(did-20, what-18)
nsubj(did-20, we-19)
advcl(better-16, did-20)
case(liveness-22, in-21)
nmod:in(did-20, liveness-22)
mark(mode-30, Because-24)
nsubj(mode-30, we-25)
cop(mode-30, are-26)
case(mode-30, in-27)
det(mode-30, a-28)
amod(mode-30, forward-29)
advcl(used-34, mode-30)
nsubj(used-34, we-32)
aux(used-34, can-33)
acl:relcl(liveness-22, used-34)
det(analysis-38, the-35)
amod(analysis-38, branched-36)
amod(analysis-38, forward-37)
dobj(used-34, analysis-38)
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This pass currently runs just before the variable and
property renaming near the end of the optimization pass.  I think
Mark put it there to minimize the difference between the code
generated with/without instrumentation; instrumentation makes
several optimization passes do less, for example inline functions.

My opinion is that we want utilization/profiling information for
all function.  This pass should run before most passes that modify
the AST (exception being the localization pass, which makes
assumptions about the structure of the AST).  We should move the
pass up, list inlined functions or give clients the option to
instrument before or after optimization.


Specificity: 1.0
Content Structure:
dep(think-25, user-2)
det(pass-6, This-5)
parataxis(think-25, pass-6)
advmod(runs-8, currently-7)
dep(pass-6, runs-8)
advmod(runs-8, just-9)
case(renaming-15, before-10)
det(renaming-15, the-11)
compound(renaming-15, variable-12)
cc(variable-12, and-13)
conj:and(variable-12, property-14)
compound(renaming-15, property-14)
nmod:before(runs-8, renaming-15)
case(end-18, near-16)
det(end-18, the-17)
nmod:near(renaming-15, end-18)
case(pass-22, of-19)
det(pass-22, the-20)
compound(pass-22, optimization-21)
nmod:of(end-18, pass-22)
nsubj(think-25, I-24)
root(ROOT-0, think-25)
nsubj(put-27, Mark-26)
ccomp(think-25, put-27)
dobj(put-27, it-28)
advmod(put-27, there-29)
mark(minimize-31, to-30)
advcl(put-27, minimize-31)
det(difference-33, the-32)
dobj(minimize-31, difference-33)
case(code-36, between-34)
det(code-36, the-35)
nmod:between(difference-33, code-36)
acl(code-36, generated-37)
amod(instrumentation-39, with/without-38)
dobj(generated-37, instrumentation-39)
nsubj(makes-42, instrumentation-41)
parataxis(put-27, makes-42)
amod(passes-45, several-43)
compound(passes-45, optimization-44)
nsubj(do-46, passes-45)
ccomp(makes-42, do-46)
xcomp(do-46, less-47)
case(functions-52, for-49)
compound(functions-52, example-50)
compound(functions-52, inline-51)
nmod:for(do-46, functions-52)
nmod:poss(opinion-55, My-54)
nsubj(is-56, opinion-55)
parataxis(makes-42, is-56)
mark(want-59, that-57)
nsubj(want-59, we-58)
ccomp(is-56, want-59)
xcomp(want-59, utilization/profiling-60)
dobj(utilization/profiling-60, information-61)
case(function-64, for-62)
det(function-64, all-63)
nmod:for(utilization/profiling-60, function-64)
det(pass-67, This-66)
nsubj(run-69, pass-67)
aux(run-69, should-68)
parataxis(makes-42, run-69)
mark(passes-72, before-70)
nsubj(passes-72, most-71)
advcl(run-69, passes-72)
nsubj(modify-74, that-73)
ccomp(passes-72, modify-74)
det(AST-76, the-75)
dobj(modify-74, AST-76)
dep(AST-76, exception-78)
case(pass-82, being-79)
det(pass-82, the-80)
compound(pass-82, localization-81)
nmod:being(exception-78, pass-82)
nsubj(makes-85, pass-82)
ref(pass-82, which-84)
acl:relcl(pass-82, makes-85)
dobj(makes-85, assumptions-86)
case(structure-89, about-87)
det(structure-89, the-88)
nmod:about(assumptions-86, structure-89)
case(AST-92, of-90)
det(AST-92, the-91)
nmod:of(structure-89, AST-92)
nsubj(move-97, We-95)
nsubj(list-102, We-95)
nsubj(give-106, We-95)
aux(move-97, should-96)
parataxis(makes-42, move-97)
det(pass-99, the-98)
dobj(move-97, pass-99)
compound:prt(move-97, up-100)
parataxis(makes-42, list-102)
conj:or(move-97, list-102)
amod(functions-104, inlined-103)
dobj(list-102, functions-104)
cc(move-97, or-105)
parataxis(makes-42, give-106)
conj:or(move-97, give-106)
conj:or(move-97, give-106')
conj:or(give-106, give-106')
iobj(give-106, clients-107)
det(option-109, the-108)
dobj(give-106, option-109)
case(instrument-111, to-110)
nmod:to(option-109, instrument-111)
case(optimization-115, before-112)
cc(before-112, or-113)
conj:or(before-112, after-114)
nmod:after(give-106', optimization-115)
nmod:before(give-106, optimization-115)
File Name: ./src/com/google/javascript/jscomp/InstrumentFunctions.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This should be detected as an error. Even if we enforce
that A cannot be used in the assignment, we should still detect the
inheritance chain as invalid.
Specificity: 0.993202
Content Structure:
nsubjpass(detected-8, user-2)
dep(user-2, This-5)
aux(detected-8, should-6)
auxpass(detected-8, be-7)
ccomp(detect-30, detected-8)
case(error-11, as-9)
det(error-11, an-10)
nmod:as(detected-8, error-11)
advmod(enforce-16, Even-13)
mark(enforce-16, if-14)
nsubj(enforce-16, we-15)
dep(detected-8, enforce-16)
mark(used-22, that-17)
nsubjpass(used-22, A-18)
aux(used-22, can-19)
neg(used-22, not-20)
auxpass(used-22, be-21)
ccomp(enforce-16, used-22)
case(assignment-25, in-23)
det(assignment-25, the-24)
nmod:in(used-22, assignment-25)
nsubj(detect-30, we-27)
aux(detect-30, should-28)
advmod(detect-30, still-29)
root(ROOT-0, detect-30)
det(chain-33, the-31)
compound(chain-33, inheritance-32)
nsubj(invalid-35, chain-33)
advmod(invalid-35, as-34)
xcomp(detect-30, invalid-35)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): This should work for undirected graphs when
FixedPointGraphTraversal accepts them.
Specificity: 0.87495
Content Structure:
root(ROOT-0, user-2)
nsubj(work-7, This-5)
aux(work-7, should-6)
dep(user-2, work-7)
case(graphs-10, for-8)
amod(graphs-10, undirected-9)
nmod:for(work-7, graphs-10)
advmod(accepts-13, when-11)
nsubj(accepts-13, FixedPointGraphTraversal-12)
advcl(work-7, accepts-13)
dobj(accepts-13, them-14)
File Name: ./src/com/google/javascript/jscomp/graph/GraphReachability.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Try eliminating the need for a list of strip names by instead
recording which field names are assigned to debug types in each JS input.
Specificity: 0.982135
Content Structure:
dep(Try-5, user-2)
root(ROOT-0, Try-5)
xcomp(Try-5, eliminating-6)
det(need-8, the-7)
dobj(eliminating-6, need-8)
case(list-11, for-9)
det(list-11, a-10)
nmod:for(need-8, list-11)
case(names-14, of-12)
compound(names-14, strip-13)
nmod:of(list-11, names-14)
mark(recording-17, by-15)
advmod(recording-17, instead-16)
advcl(eliminating-6, recording-17)
dobj(assigned-22, which-18)
compound(names-20, field-19)
nsubjpass(assigned-22, names-20)
auxpass(assigned-22, are-21)
ccomp(recording-17, assigned-22)
case(types-25, to-23)
amod(types-25, debug-24)
nmod:to(assigned-22, types-25)
case(input-29, in-26)
det(input-29, each-27)
compound(input-29, JS-28)
nmod:in(types-25, input-29)
File Name: ./src/com/google/javascript/jscomp/StripCode.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Use bit vector instead of maps might get better
performance. Change it after this is tested to be fully functional.
Specificity: 0.961445
Content Structure:
nsubj(Change-16, user-2)
compound(vector-7, Use-5)
compound(vector-7, bit-6)
nsubj(get-12, vector-7)
case(maps-10, instead-8)
mwe(instead-8, of-9)
nmod:instead_of(vector-7, maps-10)
aux(get-12, might-11)
dep(user-2, get-12)
amod(performance-14, better-13)
dobj(get-12, performance-14)
root(ROOT-0, Change-16)
dobj(Change-16, it-17)
mark(tested-21, after-18)
nsubjpass(tested-21, this-19)
nsubj:xsubj(functional-25, this-19)
auxpass(tested-21, is-20)
advcl(Change-16, tested-21)
mark(functional-25, to-22)
cop(functional-25, be-23)
advmod(functional-25, fully-24)
xcomp(tested-21, functional-25)
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Use isPrivate method below to recognize all functions.
Specificity: 0.80165
Content Structure:
dep(Use-5, user-2)
root(ROOT-0, Use-5)
amod(method-7, isPrivate-6)
dobj(Use-5, method-7)
advmod(Use-5, below-8)
mark(recognize-10, to-9)
advcl(Use-5, recognize-10)
det(functions-12, all-11)
dobj(recognize-10, functions-12)
File Name: ./src/com/google/javascript/jscomp/CheckProvides.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): Very good place to store this information somewhere.
Specificity: 0.783053
Content Structure:
root(ROOT-0, user-2)
amod(place-7, Very-5)
amod(place-7, good-6)
dep(user-2, place-7)
mark(store-9, to-8)
acl(place-7, store-9)
det(information-11, this-10)
dobj(store-9, information-11)
advmod(store-9, somewhere-12)
File Name: ./src/com/google/javascript/jscomp/DataFlowAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We CAN do this in the global scope, just need to be
careful when something is exported. Liveness uses bit-vector for live
sets so I don't see compilation time will be a problem for running this
pass in the global scope.
Specificity: 0.999386
Content Structure:
dep(problem-40, user-2)
nsubj(problem-40, We-5)
nsubj(do-7, CAN-6)
acl:relcl(We-5, do-7)
nsubj(need-15, this-8)
nsubj:xsubj(careful-18, this-8)
case(scope-12, in-9)
det(scope-12, the-10)
amod(scope-12, global-11)
nmod:in(this-8, scope-12)
advmod(scope-12, just-14)
ccomp(do-7, need-15)
mark(careful-18, to-16)
cop(careful-18, be-17)
xcomp(need-15, careful-18)
advmod(exported-22, when-19)
nsubjpass(exported-22, something-20)
auxpass(exported-22, is-21)
ccomp(careful-18, exported-22)
nsubj(uses-25, Liveness-24)
acl:relcl(We-5, uses-25)
dobj(uses-25, bit-vector-26)
case(sets-29, for-27)
amod(sets-29, live-28)
nmod:for(uses-25, sets-29)
mark(see-34, so-30)
nsubj(see-34, I-31)
aux(see-34, do-32)
neg(see-34, n't-33)
advcl(uses-25, see-34)
compound(time-36, compilation-35)
dobj(see-34, time-36)
aux(problem-40, will-37)
cop(problem-40, be-38)
det(problem-40, a-39)
root(ROOT-0, problem-40)
mark(running-42, for-41)
acl(problem-40, running-42)
det(pass-44, this-43)
dobj(running-42, pass-44)
case(scope-48, in-45)
det(scope-48, the-46)
amod(scope-48, global-47)
nmod:in(running-42, scope-48)
File Name: ./src/com/google/javascript/jscomp/CoalesceVariableNames.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We CAN make this bit smarter just looking at
constants. We DO have a full blown ReverseAbstractInterupter and
type system that can evaluate some impressions' boolean value but
for now we will keep this pass lightweight.
Specificity: 0.998579
Content Structure:
root(ROOT-0, user-2)
nsubj(make-7, We-5)
advmod(make-7, CAN-6)
dep(user-2, make-7)
det(bit-9, this-8)
dobj(make-7, bit-9)
advmod(just-11, smarter-10)
advmod(make-7, just-11)
xcomp(make-7, looking-12)
dep(constants-14, at-13)
dep(have-18, constants-14)
nsubj(have-18, We-16)
advmod(have-18, DO-17)
advcl(looking-12, have-18)
det(ReverseAbstractInterupter-22, a-19)
amod(ReverseAbstractInterupter-22, full-20)
amod(ReverseAbstractInterupter-22, blown-21)
dobj(have-18, ReverseAbstractInterupter-22)
nsubj(evaluate-28, ReverseAbstractInterupter-22)
cc(ReverseAbstractInterupter-22, and-23)
compound(system-25, type-24)
dobj(have-18, system-25)
conj:and(ReverseAbstractInterupter-22, system-25)
nsubj(evaluate-28, system-25)
ref(ReverseAbstractInterupter-22, that-26)
aux(evaluate-28, can-27)
acl:relcl(ReverseAbstractInterupter-22, evaluate-28)
det(impressions-30, some-29)
nmod:poss(value-33, impressions-30)
case(impressions-30, '-31)
compound(value-33, boolean-32)
dobj(evaluate-28, value-33)
cc(have-18, but-34)
mark(keep-39, for-35)
advmod(keep-39, now-36)
nsubj(keep-39, we-37)
aux(keep-39, will-38)
advcl(looking-12, keep-39)
conj:but(have-18, keep-39)
det(pass-41, this-40)
nsubj(lightweight-42, pass-41)
xcomp(keep-39, lightweight-42)
File Name: ./src/com/google/javascript/jscomp/CheckMissingReturn.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We are doing a straight copy from input to output. There
might be some opportunities to cut down overhead.
Specificity: 0.95487
Content Structure:
nsubj(opportunities-20, user-2)
nsubj(doing-7, We-5)
aux(doing-7, are-6)
dep(user-2, doing-7)
det(copy-10, a-8)
amod(copy-10, straight-9)
dobj(doing-7, copy-10)
case(input-12, from-11)
nmod:from(doing-7, input-12)
case(output-14, to-13)
nmod:to(doing-7, output-14)
advmod(opportunities-20, There-16)
aux(opportunities-20, might-17)
cop(opportunities-20, be-18)
det(opportunities-20, some-19)
root(ROOT-0, opportunities-20)
mark(cut-22, to-21)
acl(opportunities-20, cut-22)
compound:prt(cut-22, down-23)
advmod(cut-22, overhead-24)
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We can consider using .call() if aliasing that
argument allows shorter alias for other arguments.
Specificity: 0.949477
Content Structure:
root(ROOT-0, user-2)
nsubj(consider-7, We-5)
aux(consider-7, can-6)
dep(user-2, consider-7)
xcomp(consider-7, using-8)
amod(-LRB--11, .-9)
compound(-LRB--11, call-10)
dobj(using-8, -LRB--11)
mark(allows-17, if-13)
csubj(allows-17, aliasing-14)
det(argument-16, that-15)
dobj(aliasing-14, argument-16)
advcl(consider-7, allows-17)
amod(alias-19, shorter-18)
dobj(allows-17, alias-19)
case(arguments-22, for-20)
amod(arguments-22, other-21)
nmod:for(alias-19, arguments-22)
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We can use DefinitionsRemover and UseSite here. Then all
we need to do is call getDefinition() and we'll magically know everything
about the definition.
Specificity: 0.992651
Content Structure:
nsubj(need-16, user-2)
nsubj(use-7, We-5)
aux(use-7, can-6)
dep(user-2, use-7)
dobj(use-7, DefinitionsRemover-8)
cc(DefinitionsRemover-8, and-9)
dobj(use-7, UseSite-10)
conj:and(DefinitionsRemover-8, UseSite-10)
advmod(use-7, here-11)
advmod(user-2, Then-13)
advmod(need-16, all-14)
nsubj(need-16, we-15)
root(ROOT-0, need-16)
mark(do-18, to-17)
csubj(-LRB--22, do-18)
cop(-LRB--22, is-19)
compound(-LRB--22, call-20)
compound(-LRB--22, getDefinition-21)
dep(need-16, -LRB--22)
cc(-LRB--22, and-24)
nsubj(know-28, we-25)
aux(know-28, 'll-26)
advmod(know-28, magically-27)
dep(need-16, know-28)
conj:and(-LRB--22, know-28)
dobj(know-28, everything-29)
case(definition-32, about-30)
det(definition-32, the-31)
nmod:about(know-28, definition-32)
File Name: ./src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We could get more accuracy by looking more in-detail
what j is and what x is trying to into to.
Specificity: 0.951772
Content Structure:
root(ROOT-0, user-2)
nsubj(get-7, We-5)
aux(get-7, could-6)
dep(user-2, get-7)
amod(accuracy-9, more-8)
dobj(get-7, accuracy-9)
mark(looking-11, by-10)
advcl(get-7, looking-11)
amod(in-detail-13, more-12)
dobj(looking-11, in-detail-13)
dobj(is-16, what-14)
nsubj(is-16, j-15)
dep(looking-11, is-16)
cc(is-16, and-17)
dobj(trying-21, what-18)
nsubj(trying-21, x-19)
aux(trying-21, is-20)
dep(looking-11, trying-21)
conj:and(is-16, trying-21)
case(to-24, to-22)
case(to-24, into-23)
advcl(trying-21, to-24)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We could inline all the uses if the expression is short.
Specificity: 0.839868
Content Structure:
root(ROOT-0, user-2)
nsubj(inline-7, We-5)
aux(inline-7, could-6)
dep(user-2, inline-7)
det:predet(uses-10, all-8)
det(uses-10, the-9)
dobj(inline-7, uses-10)
mark(short-15, if-11)
det(expression-13, the-12)
nsubj(short-15, expression-13)
cop(short-15, is-14)
advcl(inline-7, short-15)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We might not need to bail out all the time, there might
be more cases that we can cover.
Specificity: 0.951942
Content Structure:
root(ROOT-0, user-2)
nsubj(need-8, We-5)
nsubj:xsubj(bail-10, We-5)
aux(need-8, might-6)
neg(need-8, not-7)
ccomp(cases-20, need-8)
mark(bail-10, to-9)
xcomp(need-8, bail-10)
compound:prt(bail-10, out-11)
det:predet(time-14, all-12)
det(time-14, the-13)
dobj(bail-10, time-14)
expl(cases-20, there-16)
aux(cases-20, might-17)
cop(cases-20, be-18)
amod(cases-20, more-19)
dep(user-2, cases-20)
mark(cover-24, that-21)
nsubj(cover-24, we-22)
aux(cover-24, can-23)
ccomp(cases-20, cover-24)
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We need more fine grain CFA or we need to keep track
of GEN sets when we recurse here.
Specificity: 0.966092
Content Structure:
root(ROOT-0, user-2)
nsubj(need-6, We-5)
dep(user-2, need-6)
advmod(fine-8, more-7)
amod(CFA-10, fine-8)
compound(CFA-10, grain-9)
dobj(need-6, CFA-10)
cc(need-6, or-11)
nsubj(need-13, we-12)
nsubj:xsubj(keep-15, we-12)
dep(user-2, need-13)
conj:or(need-6, need-13)
mark(keep-15, to-14)
xcomp(need-13, keep-15)
dobj(keep-15, track-16)
case(sets-19, of-17)
compound(sets-19, GEN-18)
nmod:of(track-16, sets-19)
advmod(recurse-22, when-20)
nsubj(recurse-22, we-21)
advcl(keep-15, recurse-22)
advmod(recurse-22, here-23)
File Name: ./src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We only care about calls to functions that
passes one of the dependent variable to a non-side-effect free
function.
Specificity: 0.94003
Content Structure:
root(ROOT-0, user-2)
nsubj(care-7, We-5)
advmod(care-7, only-6)
dep(user-2, care-7)
case(calls-9, about-8)
nmod:about(care-7, calls-9)
case(functions-11, to-10)
nmod:to(calls-9, functions-11)
nsubj(passes-13, functions-11)
ref(functions-11, that-12)
acl:relcl(functions-11, passes-13)
dobj(passes-13, one-14)
case(variable-18, of-15)
det(variable-18, the-16)
amod(variable-18, dependent-17)
nmod:of(one-14, variable-18)
case(function-23, to-19)
det(function-23, a-20)
amod(function-23, non-side-effect-21)
amod(function-23, free-22)
nmod:to(passes-13, function-23)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We only care about calls to functions that
passes one of the dependent variable to a non-side-effect free
function.
Specificity: 0.94003
Content Structure:
root(ROOT-0, user-2)
nsubj(care-7, We-5)
advmod(care-7, only-6)
dep(user-2, care-7)
case(calls-9, about-8)
nmod:about(care-7, calls-9)
case(functions-11, to-10)
nmod:to(calls-9, functions-11)
nsubj(passes-13, functions-11)
ref(functions-11, that-12)
acl:relcl(functions-11, passes-13)
dobj(passes-13, one-14)
case(variable-18, of-15)
det(variable-18, the-16)
amod(variable-18, dependent-17)
nmod:of(one-14, variable-18)
case(function-23, to-19)
det(function-23, a-20)
amod(function-23, non-side-effect-21)
amod(function-23, free-22)
nmod:to(passes-13, function-23)
File Name: /src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-27T10:58:06-07:00
Time Of Deletion: null
Creation Commit Hash: f07f6a22314d14577f2c4e44688b355577e11c41
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We probably need to test this more. The current compiler
assumes that there are more ;'s than ,'s in a real program. However,
this assumption may be incorrect. We can probably do a quick traverse
to check this assumption if that's necessary.
Specificity: 0.999699
Content Structure:
nsubj(do-42, user-2)
nsubj(need-7, We-5)
nsubj:xsubj(test-9, We-5)
advmod(need-7, probably-6)
dep(user-2, need-7)
mark(test-9, to-8)
xcomp(need-7, test-9)
det(more-11, this-10)
dobj(test-9, more-11)
det(compiler-15, The-13)
amod(compiler-15, current-14)
nsubj(assumes-16, compiler-15)
ccomp('s-25, assumes-16)
mark(are-19, that-17)
expl(are-19, there-18)
ccomp(assumes-16, are-19)
nsubj(are-19, more-20)
dep(than-23, 's-22)
dep(more-20, than-23)
parataxis(do-42, 's-25)
dep(program-29, in-26)
det(program-29, a-27)
amod(program-29, real-28)
dep(incorrect-37, program-29)
advmod(incorrect-37, However-31)
det(assumption-34, this-33)
nsubj(incorrect-37, assumption-34)
aux(incorrect-37, may-35)
cop(incorrect-37, be-36)
dep('s-25, incorrect-37)
nsubj(do-42, We-39)
aux(do-42, can-40)
advmod(do-42, probably-41)
root(ROOT-0, do-42)
det(traverse-45, a-43)
amod(traverse-45, quick-44)
dobj(do-42, traverse-45)
mark(check-47, to-46)
advcl(do-42, check-47)
det(assumption-49, this-48)
dobj(check-47, assumption-49)
mark(necessary-53, if-50)
nsubj(necessary-53, that-51)
cop(necessary-53, 's-52)
advcl(check-47, necessary-53)
File Name: ./src/com/google/javascript/jscomp/StatementFusion.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We should flag these as invalid. This will probably happen
when we make sure the interface is never referenced outside of its
definition. We might want more specific and helpful error messages.
public void testWarningOnInterfacePrototype() throws Exception {
testTypes("/** @interface */ u.T = function() {};\n" +
"/** @return {number} */ u.T.prototype = function() { };",
}

public void testBadPropertyOnInterface1() throws Exception {
testTypes("/** @interface */ u.T = function() {};\n" +
"/** @return {number} */ u.T.f = function() { return 1;};",
}

public void testBadPropertyOnInterface2() throws Exception {
testTypes("/** @interface */ function T() {};\n" +
"/** @return {number} */ T.f = function() { return 1;};",
}

public void testBadPropertyOnInterface3() throws Exception {
testTypes("/** @interface */ u.T = function() {}; u.T.x",
}

public void testBadPropertyOnInterface4() throws Exception {
testTypes("/** @interface */ function T() {}; T.x;",
}
Specificity: 1.0
Content Structure:
root(ROOT-0, user-2)
dep(user-2, We-5)
aux(flag-7, should-6)
acl:relcl(We-5, flag-7)
det(testBadPropertyOnInterface4-219, these-8)
advmod(invalid-10, as-9)
amod(testBadPropertyOnInterface4-219, invalid-10)
advmod(happen-15, .-11)
nsubj(happen-15, This-12)
aux(happen-15, will-13)
advmod(happen-15, probably-14)
ccomp(invalid-10, happen-15)
advmod(make-18, when-16)
nsubj(make-18, we-17)
advcl(want-32, make-18)
dep(make-18, sure-19)
det(interface-21, the-20)
nsubjpass(referenced-24, interface-21)
auxpass(referenced-24, is-22)
neg(referenced-24, never-23)
dep(sure-19, referenced-24)
case(definition-28, outside-25)
mwe(outside-25, of-26)
nmod:poss(definition-28, its-27)
nmod:outside_of(referenced-24, definition-28)
nsubj(want-32, We-30)
aux(want-32, might-31)
ccomp(happen-15, want-32)
advmod(specific-34, more-33)
amod(messages-38, specific-34)
cc(specific-34, and-35)
conj:and(specific-34, helpful-36)
amod(messages-38, helpful-36)
compound(messages-38, error-37)
dobj(want-32, messages-38)
compound(testBadPropertyOnInterface4-219, public-40)
nmod:npmod(testWarningOnInterfacePrototype-42, void-41)
amod(testBadPropertyOnInterface4-219, testWarningOnInterfacePrototype-42)
nsubj(throws-45, -RRB--44)
dep(testWarningOnInterfacePrototype-42, throws-45)
dobj(throws-45, Exception-46)
dep(Exception-46, testTypes-48)
dep(testTypes-48, ''-50)
dep(@interface-53, **-52)
dep(-LRB--59, @interface-53)
nummod(@interface-53, *-54)
compound(-LRB--59, u.T-56)
compound(-LRB--59, =-57)
compound(-LRB--59, function-58)
parataxis(''-50, -LRB--59)
dep(testTypes-48, -LCB--61)
compound(+-67, n-65)
dep(Exception-46, +-67)
parataxis(throws-45, **-70)
dobj(**-70, @return-71)
dep(@return-71, number-73)
dep(@return-71, *-75)
dep(throws-45, u.T.prototype-77)
amod(function-79, =-78)
dobj(u.T.prototype-77, function-79)
compound(-LCB--82, -RRB--81)
appos(function-79, -LCB--82)
compound(testBadPropertyOnInterface4-219, public-88)
nmod:npmod(testBadPropertyOnInterface1-90, void-89)
amod(testBadPropertyOnInterface4-219, testBadPropertyOnInterface1-90)
nsubj(throws-93, -RRB--92)
dep(testBadPropertyOnInterface1-90, throws-93)
amod(-LRB--97, Exception-94)
amod(-LRB--97, testTypes-96)
dobj(throws-93, -LRB--97)
dep(@interface-101, **-100)
dep(-LRB--97, @interface-101)
dep(-LRB--97, *-102)
case(function-106, /-103)
compound(function-106, u.T-104)
compound(function-106, =-105)
nmod:/(throws-93, function-106)
compound(-LCB--109, -RRB--108)
appos(function-106, -LCB--109)
compound(+-115, n-113)
dep(function-106, +-115)
dep(number-121, **-118)
amod(number-121, @return-119)
dep(-LRB--128, number-121)
appos(number-121, *-123)
compound(-LRB--128, u.T.f-125)
compound(-LRB--128, =-126)
compound(-LRB--128, function-127)
dep(+-115, -LRB--128)
case(1-132, return-131)
nmod:return(+-115, 1-132)
compound(testBadPropertyOnInterface4-219, public-139)
nmod:npmod(testBadPropertyOnInterface2-141, void-140)
amod(testBadPropertyOnInterface4-219, testBadPropertyOnInterface2-141)
nsubj(throws-144, -RRB--143)
nsubj(function-155, -RRB--143)
dep(testBadPropertyOnInterface2-141, throws-144)
amod(-LRB--148, Exception-145)
amod(-LRB--148, testTypes-147)
dobj(throws-144, -LRB--148)
dep(@interface-152, **-151)
dep(-LRB--148, @interface-152)
dep(-LRB--148, *-153)
cc(throws-144, /-154)
dep(testBadPropertyOnInterface2-141, function-155)
conj:/(throws-144, function-155)
compound:prt(function-155, T-156)
compound(-LCB--159, -RRB--158)
dobj(function-155, -LCB--159)
compound(+-165, n-163)
dep(-LCB--159, +-165)
dep(number-171, **-168)
amod(number-171, @return-169)
dep(-LRB--178, number-171)
appos(number-171, *-173)
compound(-LRB--178, T.f-175)
compound(-LRB--178, =-176)
compound(-LRB--178, function-177)
dep(+-165, -LRB--178)
case(1-182, return-181)
nmod:return(+-165, 1-182)
compound(testBadPropertyOnInterface4-219, public-189)
nmod:npmod(testBadPropertyOnInterface3-191, void-190)
amod(testBadPropertyOnInterface4-219, testBadPropertyOnInterface3-191)
nsubj(throws-194, -RRB--193)
dep(testBadPropertyOnInterface3-191, throws-194)
dobj(throws-194, Exception-195)
dep(Exception-195, testTypes-197)
dep(testTypes-197, ''-199)
dep(@interface-202, **-201)
dep(-LRB--208, @interface-202)
nummod(@interface-202, *-203)
compound(-LRB--208, u.T-205)
compound(-LRB--208, =-206)
compound(-LRB--208, function-207)
parataxis(''-199, -LRB--208)
dep(testTypes-197, -LCB--210)
dep(Exception-195, u.T.x-213)
dep(void-218, public-217)
amod(testBadPropertyOnInterface4-219, void-218)
dobj(flag-7, testBadPropertyOnInterface4-219)
nsubj(throws-222, -RRB--221)
dep(testBadPropertyOnInterface4-219, throws-222)
dobj(throws-222, Exception-223)
dep(Exception-223, testTypes-225)
dep(testTypes-225, ''-227)
dep(@interface-230, **-229)
dep(-LRB--235, @interface-230)
nummod(@interface-230, *-231)
compound(-LRB--235, function-233)
compound(-LRB--235, T-234)
parataxis(''-227, -LRB--235)
dep(testTypes-225, -LCB--237)
dep(Exception-223, T.x-240)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): We should warn about this (bar is missing an annotation). We
probably don't want to warn about all missing parameter annotations, but
we should be as strict as possible regarding interfaces.
public void testErrorMismatchingPropertyOnInterface3() throws Exception {
testTypes("/** @interface */ u.T = function () {};\n" +
"/** @param {Number} foo */u.T.prototype.x =\n" +
"function(foo, bar) {};",
"found   : \n" +
}
Specificity: 1.0
Content Structure:
root(ROOT-0, user-2)
nsubj(warn-7, We-5)
aux(warn-7, should-6)
acl:relcl(user-2, warn-7)
case(this-9, about-8)
nmod:about(warn-7, this-9)
nsubj(missing-13, bar-11)
aux(missing-13, is-12)
dep(this-9, missing-13)
det(annotation-15, an-14)
dobj(missing-13, annotation-15)
nsubj(want-22, We-18)
nsubj:xsubj(warn-24, We-18)
advmod(want-22, probably-19)
aux(want-22, do-20)
neg(want-22, n't-21)
acl:relcl(user-2, want-22)
mark(warn-24, to-23)
xcomp(want-22, warn-24)
advmod(annotations-29, about-25)
advmod(missing-27, all-26)
amod(annotations-29, missing-27)
compound(annotations-29, parameter-28)
dobj(warn-24, annotations-29)
cc(want-22, but-31)
nsubj(strict-36, we-32)
aux(strict-36, should-33)
cop(strict-36, be-34)
advmod(strict-36, as-35)
acl:relcl(user-2, strict-36)
conj:but(want-22, strict-36)
advmod(possible-38, as-37)
amod(strict-36, possible-38)
case(interfaces-40, regarding-39)
nmod:regarding(strict-36, interfaces-40)
nmod:npmod(testErrorMismatchingPropertyOnInterface3-44, public-42)
nmod:npmod(testErrorMismatchingPropertyOnInterface3-44, void-43)
amod(interfaces-40, testErrorMismatchingPropertyOnInterface3-44)
nsubj(throws-47, -RRB--46)
parataxis(strict-36, throws-47)
amod(-LRB--51, Exception-48)
amod(-LRB--51, testTypes-50)
dobj(throws-47, -LRB--51)
dep(@interface-55, **-54)
dep(-LRB--51, @interface-55)
dep(u.T-58, *-56)
dep(-LRB--51, u.T-58)
advmod(function-60, =-59)
dep(u.T-58, function-60)
compound(-LCB--63, -RRB--62)
dobj(function-60, -LCB--63)
compound(+-69, n-67)
dep(-LCB--63, +-69)
dep(found-99, **-72)
nsubj(found-99, @param-73)
appos(@param-73, Number-75)
compound(n-83, foo-77)
compound(n-83, *-78)
compound(n-83, /-79)
compound(n-83, u.T.prototype.x-80)
compound(n-83, =-81)
compound(n-83, \-82)
dep(@param-73, n-83)
case(function-87, +-85)
nmod:+(@param-73, function-87)
dep(@param-73, foo-89)
appos(foo-89, bar-91)
compound(;-95, -RCB--94)
dep(@param-73, ;-95)
dep(-LRB--51, found-99)
compound(+-104, n-102)
dep(-LRB--51, +-104)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): While the helpers do a subtree traversal on the AST, the
compiler pass itself only traverse the AST to look for function
declarations to perform dataflow analysis on. We could combine
the traversal in DataFlowAnalysis's computeEscaped later to save some
time.
Specificity: 0.999526
Content Structure:
nsubjpass(computeEscaped-43, user-2)
nsubj:xsubj(save-46, user-2)
mark(do-8, While-5)
det(helpers-7, the-6)
nsubj(do-8, helpers-7)
advcl(pass-18, do-8)
det(traversal-11, a-9)
amod(traversal-11, subtree-10)
dobj(do-8, traversal-11)
case(AST-14, on-12)
det(AST-14, the-13)
nmod:on(traversal-11, AST-14)
det(compiler-17, the-16)
nsubj(pass-18, compiler-17)
dep(user-2, pass-18)
nsubj(traverse-21, itself-19)
advmod(traverse-21, only-20)
ccomp(pass-18, traverse-21)
det(AST-23, the-22)
dobj(traverse-21, AST-23)
nsubj:xsubj(look-25, AST-23)
mark(look-25, to-24)
xcomp(traverse-21, look-25)
case(declarations-28, for-26)
compound(declarations-28, function-27)
nmod:for(look-25, declarations-28)
mark(perform-30, to-29)
xcomp(look-25, perform-30)
compound(analysis-32, dataflow-31)
dobj(perform-30, analysis-32)
compound:prt(perform-30, on-33)
nsubj(combine-37, We-35)
aux(combine-37, could-36)
parataxis(computeEscaped-43, combine-37)
det(traversal-39, the-38)
dobj(combine-37, traversal-39)
case(DataFlowAnalysis-41, in-40)
nmod:in(traversal-39, DataFlowAnalysis-41)
auxpass(computeEscaped-43, 's-42)
root(ROOT-0, computeEscaped-43)
advmod(computeEscaped-43, later-44)
mark(save-46, to-45)
xcomp(computeEscaped-43, save-46)
det(time-48, some-47)
dobj(save-46, time-48)
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): a deterministic warning should be generated for this
case since x && x is always false. The implementation of this requires
a more precise handling of a null value within a variable's type.
Currently, a null value defaults to ? which passes every check.
Specificity: 0.999689
Content Structure:
dep(requires-27, user-2)
det(warning-7, a-5)
amod(warning-7, deterministic-6)
nsubj(requires-27, warning-7)
aux(generated-10, should-8)
auxpass(generated-10, be-9)
acl:relcl(warning-7, generated-10)
case(case-13, for-11)
det(case-13, this-12)
nmod:for(generated-10, case-13)
case(x-15, since-14)
nmod:since(generated-10, x-15)
cc(x-15, &-16)
nmod:since(generated-10, &-17)
conj:&(x-15, &-17)
nsubj(false-21, x-18)
cop(false-21, is-19)
advmod(false-21, always-20)
acl:relcl(&-17, false-21)
det(implementation-24, The-23)
dep(&-17, implementation-24)
case(this-26, of-25)
nmod:of(implementation-24, this-26)
root(ROOT-0, requires-27)
det(handling-31, a-28)
advmod(precise-30, more-29)
amod(handling-31, precise-30)
dobj(requires-27, handling-31)
case(value-35, of-32)
det(value-35, a-33)
amod(value-35, null-34)
acl(handling-31, value-35)
case(type-40, within-36)
det(variable-38, a-37)
nmod:poss(type-40, variable-38)
case(variable-38, 's-39)
nmod:within(value-35, type-40)
dep(defaults-47, Currently-42)
det(defaults-47, a-44)
amod(defaults-47, null-45)
compound(defaults-47, value-46)
dep(handling-31, defaults-47)
acl(defaults-47, to-48)
nsubj(passes-51, which-50)
dep(requires-27, passes-51)
det(check-53, every-52)
dobj(passes-51, check-53)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): check that hash code collisions are handled.
Specificity: 0.743726
Content Structure:
dep(check-5, user-2)
root(ROOT-0, check-5)
mark(handled-11, that-6)
amod(collisions-9, hash-7)
compound(collisions-9, code-8)
nsubjpass(handled-11, collisions-9)
auxpass(handled-11, are-10)
ccomp(check-5, handled-11)
File Name: ./test/com/google/javascript/jscomp/AliasStringsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): checkTreeEqual is overkill. I am in process of rewriting
these functions.
Specificity: 0.872324
Content Structure:
dep(process-12, user-2)
parataxis(process-12, checkTreeEqual-5)
cop(overkill-7, is-6)
ccomp(checkTreeEqual-5, overkill-7)
nsubj(process-12, I-9)
cop(process-12, am-10)
case(process-12, in-11)
root(ROOT-0, process-12)
mark(rewriting-14, of-13)
acl(process-12, rewriting-14)
det(functions-16, these-15)
dobj(rewriting-14, functions-16)
File Name: ./src/com/google/javascript/jscomp/ReplaceMessages.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): extend this class with more tests, as JSTypeRegistry is
now much larger
Specificity: 0.889842
Content Structure:
root(ROOT-0, user-2)
dep(user-2, extend-5)
det(class-7, this-6)
dobj(extend-5, class-7)
case(tests-10, with-8)
amod(tests-10, more-9)
nmod:with(extend-5, tests-10)
mark(larger-17, as-12)
nsubj(larger-17, JSTypeRegistry-13)
cop(larger-17, is-14)
advmod(larger-17, now-15)
advmod(larger-17, much-16)
advcl(extend-5, larger-17)
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): regex literals as well.
Specificity: 0.686018
Content Structure:
root(ROOT-0, user-2)
compound(literals-6, regex-5)
dep(user-2, literals-6)
case(well-8, as-7)
acl(literals-6, well-8)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): remove custom toString.
Specificity: 0.695793
Content Structure:
root(ROOT-0, user-2)
amod(toString-7, remove-5)
compound(toString-7, custom-6)
dep(user-2, toString-7)
File Name: ./src/com/google/javascript/jscomp/JSError.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): remove extra conditions when type annotations
in the code base have adapted to the change in the compiler.
Specificity: 0.931157
Content Structure:
root(ROOT-0, user-2)
dep(user-2, remove-5)
amod(conditions-7, extra-6)
dobj(remove-5, conditions-7)
advmod(adapted-16, when-8)
compound(annotations-10, type-9)
nsubj(adapted-16, annotations-10)
case(base-14, in-11)
det(base-14, the-12)
compound(base-14, code-13)
nmod:in(annotations-10, base-14)
aux(adapted-16, have-15)
advcl(remove-5, adapted-16)
case(change-19, to-17)
det(change-19, the-18)
nmod:to(adapted-16, change-19)
case(compiler-22, in-20)
det(compiler-22, the-21)
nmod:in(change-19, compiler-22)
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): remove this short-circuiting in favor of a
pre order traversal of the FUNCTION, CATCH, PARAM_LIST and VAR nodes.
Specificity: 0.99122
Content Structure:
root(ROOT-0, user-2)
dep(user-2, remove-5)
det(short-circuiting-7, this-6)
dobj(remove-5, short-circuiting-7)
case(favor-9, in-8)
nmod:in(remove-5, favor-9)
case(traversal-14, of-10)
det(traversal-14, a-11)
compound(traversal-14, pre-12)
compound(traversal-14, order-13)
nmod:of(favor-9, traversal-14)
case(nodes-24, of-15)
det(nodes-24, the-16)
compound(nodes-24, FUNCTION-17)
conj:and(FUNCTION-17, CATCH-19)
compound(nodes-24, CATCH-19)
conj:and(FUNCTION-17, PARAM_LIST-21)
compound(nodes-24, PARAM_LIST-21)
cc(FUNCTION-17, and-22)
conj:and(FUNCTION-17, VAR-23)
compound(nodes-24, VAR-23)
nmod:of(remove-5, nodes-24)
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): suppress {duplicate} currently also silence the
redefining type error in the TypeValidator. Maybe it needs
a new suppress name instead?
Specificity: 0.979545
Content Structure:
root(ROOT-0, user-2)
dep(user-2, suppress-5)
dobj(suppress-5, duplicate-7)
advmod(suppress-5, currently-9)
advmod(silence-11, also-10)
dep(suppress-5, silence-11)
det(error-15, the-12)
amod(error-15, redefining-13)
compound(error-15, type-14)
dobj(silence-11, error-15)
case(TypeValidator-18, in-16)
det(TypeValidator-18, the-17)
nmod:in(silence-11, TypeValidator-18)
advmod(TypeValidator-18, Maybe-20)
nsubj(needs-22, it-21)
dep(silence-11, needs-22)
det(name-26, a-23)
amod(name-26, new-24)
amod(name-26, suppress-25)
dobj(needs-22, name-26)
advmod(needs-22, instead-27)
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(user): {1} and {2} are not exactly useful for most people.
Specificity: 0.935517
Content Structure:
dep(useful-15, user-2)
nsubj(useful-15, 1-6)
cc(1-6, and-8)
conj:and(1-6, 2-10)
nsubj(useful-15, 2-10)
cop(useful-15, are-12)
neg(useful-15, not-13)
advmod(useful-15, exactly-14)
root(ROOT-0, useful-15)
case(people-18, for-16)
amod(people-18, most-17)
nmod:for(useful-15, people-18)
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
(vitalyp): Check namespace name for validity here. It should be a valid chain of
identifiers.
Specificity: 0.905037
Content Structure:
dep(chain-17, vitalyp-2)
parataxis(chain-17, Check-5)
amod(name-7, namespace-6)
dobj(Check-5, name-7)
case(validity-9, for-8)
nmod:for(name-7, validity-9)
advmod(Check-5, here-10)
nsubj(chain-17, It-12)
aux(chain-17, should-13)
cop(chain-17, be-14)
det(chain-17, a-15)
amod(chain-17, valid-16)
root(ROOT-0, chain-17)
case(identifiers-19, of-18)
nmod:of(chain-17, identifiers-19)
File Name: ./src/com/google/javascript/jscomp/ChromePass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
+ "(function(x) {\n"  // TODO(tomnguyen): This should print as an => function.
Specificity: 0.976991
Content Structure:
nsubj(print-21, +-1)
dep(+-1, function-4)
dep(function-4, x-6)
amod(/-12, \-9)
compound(/-12, n-10)
dep(function-4, /-12)
compound(tomnguyen-16, TODO-14)
dep(+-1, tomnguyen-16)
dep(tomnguyen-16, This-19)
aux(print-21, should-20)
root(ROOT-0, print-21)
case(function-26, as-22)
det(function-26, an-23)
compound(function-26, =-24)
compound(function-26, >-25)
nmod:as(print-21, function-26)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
+ "var $jscomp$this = this;\n" // TODO(tomnguyen): Avoid printing this line.
Specificity: 0.942272
Content Structure:
nsubj(var-3, +-1)
root(ROOT-0, var-3)
dep(jscomp-5, $-4)
dobj(var-3, jscomp-5)
dep(=-8, $-6)
advmod(=-8, this-7)
nmod(jscomp-5, =-8)
det(TODO-16, this-9)
amod(n-12, \-11)
dep(TODO-16, n-12)
compound(TODO-16, /-15)
dep(=-8, TODO-16)
appos(TODO-16, tomnguyen-18)
dep(TODO-16, Avoid-21)
acl(Avoid-21, printing-22)
det(line-24, this-23)
dobj(printing-22, line-24)
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
- could probably do a better job encoding these
Specificity: 0.614016
Content Structure:
aux(do-4, could-2)
advmod(do-4, probably-3)
root(ROOT-0, do-4)
det(job-7, a-5)
amod(job-7, better-6)
dobj(do-4, job-7)
acl(job-7, encoding-8)
dobj(encoding-8, these-9)
File Name: ./test/com/google/javascript/jscomp/NameAnonymousFunctionsMappedTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
// TODO(dimvar): fix
typeCheck(LINE_JOINER.join(
"/** @constructor */",
"function High() {}",
"/**",
" * @param {number} x",
" * @final",
" */",
"High.prototype.method = function(x) {};",
"/** @constructor @extends {High} */",
"function Mid() {}",
"/** @constructor @extends {Mid} */",
"function Low() {}",
"Low.prototype.method = function(x) {};"),
Specificity: 1.0
Content Structure:
root(ROOT-0, /-1)
compound(dimvar-5, TODO-3)
dep(/-1, dimvar-5)
compound(typeCheck-9, fix-8)
dep(dimvar-5, typeCheck-9)
compound(-LRB--14, LINE_JOINER-11)
compound(-LRB--14, join-13)
acl:relcl(typeCheck-9, -LRB--14)
dep(/-1, **-17)
xcomp(**-17, @constructor-18)
dep(function-24, *-19)
dep(function-24, /-20)
ccomp(@constructor-18, function-24)
dobj(function-24, High-25)
compound(-LCB--28, -RRB--27)
appos(High-25, -LCB--28)
amod(**-34, /-33)
dobj(**-17, **-34)
dep(x-43, *-38)
nsubj(x-43, @param-39)
dep(@param-39, number-41)
dep(**-34, x-43)
advmod(@final-48, *-47)
amod(**-34, @final-48)
case(/-53, *-52)
nmod:*(**-70, /-53)
compound(=-58, High.prototype.method-57)
dep(/-53, =-58)
dep(=-58, function-59)
dep(function-59, x-61)
amod(function-59, -RCB--64)
nsubj(**-70, /-69)
dep(@final-48, **-70)
compound(@extends-72, @constructor-71)
iobj(**-70, @extends-72)
dobj(**-70, High-74)
dep(function-81, *-76)
dep(function-81, /-77)
dep(function-102, function-81)
compound(-LRB--83, Mid-82)
dep(,-88, -LRB--83)
compound(,-88, -RCB--86)
xcomp(function-81, ,-88)
parataxis(function-81, **-91)
compound(@extends-93, @constructor-92)
dobj(**-91, @extends-93)
dep(@extends-93, Mid-95)
dep(@extends-93, *-97)
acl:relcl(High-74, function-102)
dobj(function-102, Low-103)
compound(-LCB--106, -RRB--105)
appos(Low-103, -LCB--106)
compound(function-113, Low.prototype.method-111)
compound(function-113, =-112)
dobj(**-70, function-113)
dep(function-113, x-115)
dep(function-113, -RCB--118)
dep(-RCB--118, ;-119)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
// TODO(dimvar): fix passes that run after type checking but falsely assume ES6 input
Specificity: 0.923562
Content Structure:
compound(TODO-3, /-1)
compound(TODO-3, /-2)
root(ROOT-0, TODO-3)
appos(TODO-3, dimvar-5)
nsubj(passes-9, fix-8)
parataxis(TODO-3, passes-9)
mark(run-11, that-10)
ccomp(passes-9, run-11)
case(checking-14, after-12)
compound(checking-14, type-13)
nmod:after(run-11, checking-14)
cc(run-11, but-15)
advmod(assume-17, falsely-16)
ccomp(passes-9, assume-17)
conj:but(run-11, assume-17)
compound(input-19, ES6-18)
dobj(assume-17, input-19)
File Name: /src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-07-05T11:56:35-07:00
Time Of Deletion: 2017-07-05T11:56:37-07:00
Creation Commit Hash: 9de868f031c98e18a3b5c01a644cc4f4dd2324b3
Deletion Commit Hash: d117b9b16c94307f58daa3296230a9f5fe11fd66
Time To Complete: P0D; PT2S

Type: Incomplete
Content:
: A way to get the processed value, rather than the raw value.

Specificity: 0.754013
Content Structure:
det(way-3, A-2)
root(ROOT-0, way-3)
mark(get-5, to-4)
acl(way-3, get-5)
det(value-8, the-6)
amod(value-8, processed-7)
dobj(get-5, value-8)
cc(value-8, rather-10)
mwe(rather-10, than-11)
det(value-14, the-12)
amod(value-14, raw-13)
dobj(get-5, value-14)
conj:negcc(value-8, value-14)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LiteralToken.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: Either remove, fix this, or document it as a limitation of advanced mode optimizations.
Specificity: 0.815405
Content Structure:
nsubj(remove-3, Either-2)
nsubj(fix-5, Either-2)
nsubj(document-9, Either-2)
root(ROOT-0, remove-3)
conj:or(remove-3, fix-5)
dobj(fix-5, this-6)
cc(remove-3, or-8)
conj:or(remove-3, document-9)
dobj(document-9, it-10)
case(limitation-13, as-11)
det(limitation-13, a-12)
nmod:as(document-9, limitation-13)
case(optimizations-17, of-14)
amod(optimizations-17, advanced-15)
compound(optimizations-17, mode-16)
nmod:of(limitation-13, optimizations-17)
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedClassPropertiesTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: Need tuple types (heterogeneous arrays) to be able to catch this error.
Specificity: 0.838978
Content Structure:
nsubj(tuple-3, Need-2)
root(ROOT-0, tuple-3)
dobj(tuple-3, types-4)
nsubj:xsubj(able-11, types-4)
amod(arrays-7, heterogeneous-6)
appos(types-4, arrays-7)
mark(able-11, to-9)
cop(able-11, be-10)
xcomp(tuple-3, able-11)
mark(catch-13, to-12)
xcomp(able-11, catch-13)
det(error-15, this-14)
dobj(catch-13, error-15)
File Name: /test/com/google/javascript/jscomp/NewTypeInferenceWithTranspilationTest.java
Time Of Creation: 2017-06-16T09:34:52-07:00
Time Of Deletion: null
Creation Commit Hash: 69d4ed079ab24b27a0e5c8c359e64b33b7690211
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: Regexp literals should have their own token type.
Specificity: 0.644399
Content Structure:
compound(literals-3, Regexp-2)
nsubj(have-5, literals-3)
aux(have-5, should-4)
root(ROOT-0, have-5)
nmod:poss(type-9, their-6)
amod(type-9, own-7)
amod(type-9, token-8)
dobj(have-5, type-9)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LiteralToken.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: Switch this to the filename + property name heuristic which is less brittle.
Specificity: 0.751972
Content Structure:
root(ROOT-0, Switch-2)
dobj(Switch-2, this-3)
case(heuristic-10, to-4)
det(heuristic-10, the-5)
amod(heuristic-10, filename-6)
amod(heuristic-10, +-7)
compound(heuristic-10, property-8)
compound(heuristic-10, name-9)
nmod:to(Switch-2, heuristic-10)
nsubj(brittle-14, heuristic-10)
ref(heuristic-10, which-11)
cop(brittle-14, is-12)
advmod(brittle-14, less-13)
acl:relcl(heuristic-10, brittle-14)
File Name: ./src/com/google/javascript/jscomp/J2clPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: This could be greatly improved.

@return Whether the jstype is something known to be a local value.

Specificity: 0.868284
Content Structure:
nsubjpass(improved-6, This-2)
aux(improved-6, could-3)
auxpass(improved-6, be-4)
advmod(improved-6, greatly-5)
dep(something-13, improved-6)
compound(Whether-9, @return-8)
nsubj(something-13, Whether-9)
det(jstype-11, the-10)
dep(Whether-9, jstype-11)
cop(something-13, is-12)
root(ROOT-0, something-13)
acl(something-13, known-14)
mark(value-19, to-15)
cop(value-19, be-16)
det(value-19, a-17)
amod(value-19, local-18)
xcomp(known-14, value-19)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: This logic can probably be replaced with @nosideeffects annotations in externs.
Specificity: 0.70048
Content Structure:
det(logic-3, This-2)
nsubjpass(replaced-7, logic-3)
aux(replaced-7, can-4)
advmod(replaced-7, probably-5)
auxpass(replaced-7, be-6)
root(ROOT-0, replaced-7)
case(annotations-10, with-8)
amod(annotations-10, @nosideeffects-9)
nmod:with(replaced-7, annotations-10)
case(externs-12, in-11)
nmod:in(annotations-10, externs-12)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: This may be more expensive than necessary.
Specificity: 0.622716
Content Structure:
nsubj(expensive-6, This-2)
aux(expensive-6, may-3)
cop(expensive-6, be-4)
advmod(expensive-6, more-5)
root(ROOT-0, expensive-6)
case(necessary-8, than-7)
advcl(expensive-6, necessary-8)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: UnicodeLetter also includes Letter Number (NI)
Specificity: 0.858385
Content Structure:
nsubj(includes-4, UnicodeLetter-2)
advmod(includes-4, also-3)
root(ROOT-0, includes-4)
compound(Number-6, Letter-5)
dobj(includes-4, Number-6)
appos(Number-6, NI-8)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: add NumberToken
Specificity: 0.502117
Content Structure:
root(ROOT-0, add-2)
dobj(add-2, NumberToken-3)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: add test cases for isMovableDeclarationStatement()
Specificity: 0.772598
Content Structure:
amod(cases-4, :-1)
amod(cases-4, add-2)
compound(cases-4, test-3)
root(ROOT-0, cases-4)
case(-LRB--7, for-5)
amod(-LRB--7, isMovableDeclarationStatement-6)
nmod:for(cases-4, -LRB--7)
File Name: /test/com/google/javascript/jscomp/CrossModuleReferenceCollectorTest.java
Time Of Creation: 2017-06-14T13:45:27-07:00
Time Of Deletion: null
Creation Commit Hash: eed83c1596fd42fb99f051d6a22ecd0a7ea62b14
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: character following NumericLiteral must not be an IdentifierStart or DecimalDigit
Specificity: 0.787775
Content Structure:
root(ROOT-0, character-2)
case(NumericLiteral-4, following-3)
nmod:following(character-2, NumericLiteral-4)
aux(IdentifierStart-9, must-5)
neg(IdentifierStart-9, not-6)
cop(IdentifierStart-9, be-7)
det(IdentifierStart-9, an-8)
acl:relcl(NumericLiteral-4, IdentifierStart-9)
cc(IdentifierStart-9, or-10)
acl:relcl(NumericLiteral-4, DecimalDigit-11)
conj:or(IdentifierStart-9, DecimalDigit-11)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: identifier part character classes
CombiningMark
Non-Spacing mark (Mn)
Combining spacing mark(Mc)
Connector punctuation (Pc)
Zero Width Non-Joiner
Zero Width Joiner
Specificity: 0.993557
Content Structure:
dep(classes-5, identifier-2)
compound(classes-5, part-3)
compound(classes-5, character-4)
root(ROOT-0, classes-5)
compound(Non-Spacing-7, CombiningMark-6)
nmod:poss(Joiner-28, Non-Spacing-7)
case(Non-Spacing-7, mark-8)
appos(Joiner-28, Mn-10)
compound(Joiner-28, Combining-12)
compound(Joiner-28, spacing-13)
compound(Joiner-28, mark-14)
appos(Joiner-28, Mc-16)
compound(Joiner-28, Connector-18)
compound(Joiner-28, punctuation-19)
appos(Joiner-28, Pc-21)
compound(Joiner-28, Zero-23)
compound(Joiner-28, Width-24)
compound(Joiner-28, Non-Joiner-25)
compound(Joiner-28, Zero-26)
compound(Joiner-28, Width-27)
dep(classes-5, Joiner-28)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: maybe pull out common prefix or suffix
Specificity: 0.592343
Content Structure:
dep(pull-3, maybe-2)
root(ROOT-0, pull-3)
case(prefix-6, out-4)
amod(prefix-6, common-5)
nmod:out(pull-3, prefix-6)
cc(prefix-6, or-7)
nmod:out(pull-3, suffix-8)
conj:or(prefix-6, suffix-8)
File Name: ./src/com/google/javascript/jscomp/regex/RegExpTree.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: stack timers to get inclusive/exclusive times
Specificity: 0.556713
Content Structure:
root(ROOT-0, stack-2)
dobj(stack-2, timers-3)
nsubj:xsubj(get-5, timers-3)
mark(get-5, to-4)
xcomp(stack-2, get-5)
amod(times-7, inclusive/exclusive-6)
dobj(get-5, times-7)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/util/Timer.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: straighten this out
Specificity: 0.481967
Content Structure:
root(ROOT-0, straighten-2)
dobj(straighten-2, this-3)
compound:prt(straighten-2, out-4)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/TokenType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
: there are other Unicode Category 'Zs' chars that should go here.
Specificity: 0.77687
Content Structure:
expl(are-3, there-2)
root(ROOT-0, are-3)
amod(chars-10, other-4)
compound(chars-10, Unicode-5)
compound(chars-10, Category-6)
compound(chars-10, Zs-8)
nsubj(are-3, chars-10)
nsubj(go-13, chars-10)
ref(chars-10, that-11)
aux(go-13, should-12)
acl:relcl(chars-10, go-13)
advmod(go-13, here-14)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
:@BellaShim get this test to pass
Specificity: 0.602091
Content Structure:
nsubj(get-3, @BellaShim-2)
root(ROOT-0, get-3)
det(test-5, this-4)
dobj(get-3, test-5)
nsubj:xsubj(pass-7, test-5)
mark(pass-7, to-6)
xcomp(get-3, pass-7)
File Name: /test/com/google/javascript/jscomp/FunctionArgumentInjectorTest.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: 2017-06-26T10:13:08-07:00
Creation Commit Hash: e27df64602114c539e787fea7a4895e4fc250436
Deletion Commit Hash: 24703f9fd91d42778a5a83c49db8b5d58078154e
Time To Complete: P4D; PT-23M-47S

Type: Incomplete
Content:
<p>TODO(anatol): Add stream hashing functionality.

Specificity: 0.80882
Content Structure:
compound(TODO-2, <p>-1)
root(ROOT-0, TODO-2)
dep(TODO-2, anatol-4)
amod(stream-8, Add-7)
dep(TODO-2, stream-8)
acl(stream-8, hashing-9)
advmod(hashing-9, functionality-10)
File Name: ./src/com/google/javascript/jscomp/JsMessage.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(bradfordcsmith): Rename this to parse()

Specificity: 0.891965
Content Structure:
root(ROOT-0, <p>-1)
dep(<p>-1, TODO-2)
appos(TODO-2, bradfordcsmith-4)
advmod(this-8, Rename-7)
dep(<p>-1, this-8)
case(-LRB--11, to-9)
amod(-LRB--11, parse-10)
nmod:to(this-8, -LRB--11)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(bradfordcsmith): Rename this to parseIndependentOfCompilation() or similar.

Specificity: 0.930336
Content Structure:
compound(TODO-2, <p>-1)
root(ROOT-0, TODO-2)
appos(TODO-2, bradfordcsmith-4)
advmod(this-8, Rename-7)
dep(TODO-2, this-8)
mark(parseIndependentOfCompilation-10, to-9)
acl(this-8, parseIndependentOfCompilation-10)
dep(this-8, -RRB--12)
cc(-RRB--12, or-13)
dep(this-8, similar-14)
conj:or(-RRB--12, similar-14)
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(moz): Let ES6, CommonJS and goog.provide live happily together.

Specificity: 0.91444
Content Structure:
compound(TODO-2, <p>-1)
root(ROOT-0, TODO-2)
appos(TODO-2, moz-4)
parataxis(TODO-2, Let-7)
nsubj(live-13, ES6-8)
conj:and(ES6-8, CommonJS-10)
nsubj(live-13, CommonJS-10)
cc(ES6-8, and-11)
conj:and(ES6-8, goog.provide-12)
nsubj(live-13, goog.provide-12)
ccomp(Let-7, live-13)
advmod(live-13, happily-14)
advmod(live-13, together-15)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(ochafik): Add support for `super.x++` (and --, pre/post variants).

@author ochafik@google.com (Olivier Chafik)

Specificity: 0.979361
Content Structure:
root(ROOT-0, <p>-1)
dobj(<p>-1, TODO-2)
appos(TODO-2, ochafik-4)
dep(<p>-1, Add-7)
dobj(Add-7, support-8)
case(+-13, for-9)
amod(+-13, super.x-11)
compound(+-13, +-12)
nmod:for(Add-7, +-13)
dep(+-13, and-16)
amod(variants-20, pre/post-19)
dep(and-16, variants-20)
compound(ochafik@google.com-24, @author-23)
nsubj(<p>-1, ochafik@google.com-24)
compound(Chafik-27, Olivier-26)
appos(ochafik@google.com-24, Chafik-27)
File Name: ./src/com/google/javascript/jscomp/DartSuperAccessorsPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(sdh): is there a reason not to build this optimization directly
into JSType#substituteGenerics?

Specificity: 0.93646
Content Structure:
compound(TODO-2, <p>-1)
root(ROOT-0, TODO-2)
appos(TODO-2, sdh-4)
parataxis(TODO-2, is-7)
expl(is-7, there-8)
det(reason-10, a-9)
nsubj(is-7, reason-10)
neg(build-13, not-11)
mark(build-13, to-12)
acl(reason-10, build-13)
det(optimization-15, this-14)
dobj(build-13, optimization-15)
advmod(build-13, directly-16)
case(#substituteGenerics-19, into-17)
compound(#substituteGenerics-19, JSType-18)
nmod:into(build-13, #substituteGenerics-19)
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(user) revisit. it would be helpful to at least use fully qualified names in the case of
namespaces. Might not matter as much if this pass runs after {@link CollapseProperties}.

Specificity: 0.997107
Content Structure:
compound(revisit-6, <p>-1)
compound(revisit-6, TODO-2)
appos(revisit-6, user-4)
nsubj(matter-27, revisit-6)
nsubj(helpful-11, it-8)
nsubj:xsubj(use-15, it-8)
aux(helpful-11, would-9)
cop(helpful-11, be-10)
acl:relcl(revisit-6, helpful-11)
mark(use-15, to-12)
advmod(use-15, at-13)
mwe(at-13, least-14)
xcomp(helpful-11, use-15)
advmod(qualified-17, fully-16)
amod(names-18, qualified-17)
dobj(use-15, names-18)
case(case-21, in-19)
det(case-21, the-20)
nmod:in(names-18, case-21)
case(namespaces-23, of-22)
nmod:of(case-21, namespaces-23)
aux(matter-27, Might-25)
neg(matter-27, not-26)
root(ROOT-0, matter-27)
advmod(much-29, as-28)
advmod(matter-27, much-29)
mark(runs-33, if-30)
det(pass-32, this-31)
nsubj(runs-33, pass-32)
advcl(much-29, runs-33)
case(CollapseProperties-37, after-34)
compound(CollapseProperties-37, @link-36)
nmod:after(runs-33, CollapseProperties-37)
File Name: ./src/com/google/javascript/jscomp/NameBasedDefinitionProvider.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO(user):
This combined pass is currently limited in the type of callbacks it can
combine due to the difficulty of handling NodeTraversal's methods that
initiate more recursion (e.g., {@link NodeTraversal#traverse(Node)} and
{@link NodeTraversal#traverseInnerNode(Node, Node, Scope)}). The
{@link NodeTraversal} object passed to the individual callbacks should
be instrumented to emulate the correct behavior. For instance,
one could create a {@link NodeTraversal} whose
{@link NodeTraversal#traverseInnerNode(Node, Node, Scope)} ties
back into this compiler pass to give it context about what combined
passes are doing.</p>


Specificity: 1.0
Content Structure:
root(ROOT-0, <p>-1)
dobj(<p>-1, TODO-2)
appos(TODO-2, user-4)
det(pass-9, This-7)
amod(pass-9, combined-8)
nsubjpass(limited-12, pass-9)
auxpass(limited-12, is-10)
advmod(limited-12, currently-11)
parataxis(<p>-1, limited-12)
case(type-15, in-13)
det(type-15, the-14)
nmod:in(limited-12, type-15)
case(callbacks-17, of-16)
nmod:of(type-15, callbacks-17)
nsubj(combine-20, it-18)
aux(combine-20, can-19)
parataxis(limited-12, combine-20)
xcomp(combine-20, due-21)
case(difficulty-24, to-22)
det(difficulty-24, the-23)
nmod:to(due-21, difficulty-24)
mark(handling-26, of-25)
acl(difficulty-24, handling-26)
nmod:poss(methods-29, NodeTraversal-27)
case(NodeTraversal-27, 's-28)
dobj(handling-26, methods-29)
nsubj(initiate-31, that-30)
ccomp(due-21, initiate-31)
advmod(recursion-33, more-32)
xcomp(initiate-31, recursion-33)
dep(recursion-33, e.g.-35)
compound(NodeTraversal-39, @link-38)
appos(e.g.-35, NodeTraversal-39)
amod(NodeTraversal-39, #traverse-40)
appos(NodeTraversal-39, Node-42)
cc(NodeTraversal-39, and-45)
compound(NodeTraversal-48, @link-47)
appos(e.g.-35, NodeTraversal-48)
conj:and(NodeTraversal-39, NodeTraversal-48)
amod(NodeTraversal-48, #traverseInnerNode-49)
appos(NodeTraversal-48, Node-51)
dep(Node-51, Node-53)
dep(Node-51, Scope-55)
det(NodeTraversal-63, The-60)
compound(NodeTraversal-63, @link-62)
nsubj(object-65, NodeTraversal-63)
parataxis(limited-12, object-65)
csubjpass(instrumented-73, passed-66)
case(callbacks-70, to-67)
det(callbacks-70, the-68)
amod(callbacks-70, individual-69)
nmod:to(passed-66, callbacks-70)
aux(instrumented-73, should-71)
auxpass(instrumented-73, be-72)
ccomp(object-65, instrumented-73)
mark(emulate-75, to-74)
xcomp(instrumented-73, emulate-75)
det(behavior-78, the-76)
amod(behavior-78, correct-77)
dobj(emulate-75, behavior-78)
case(instance-81, For-80)
nmod:for(create-85, instance-81)
nsubj(create-85, one-83)
aux(create-85, could-84)
parataxis(limited-12, create-85)
det(NodeTraversal-89, a-86)
compound(NodeTraversal-89, @link-88)
dobj(create-85, NodeTraversal-89)
dep(ties-104, NodeTraversal-89)
ref(NodeTraversal-89, whose-91)
compound(#traverseInnerNode-95, @link-93)
compound(#traverseInnerNode-95, NodeTraversal-94)
nsubj(ties-104, #traverseInnerNode-95)
appos(#traverseInnerNode-95, Node-97)
dep(Node-97, Node-99)
dep(Node-97, Scope-101)
acl:relcl(NodeTraversal-89, ties-104)
compound:prt(ties-104, back-105)
case(compiler-108, into-106)
det(compiler-108, this-107)
nmod:into(ties-104, compiler-108)
dep(ties-104, pass-109)
mark(give-111, to-110)
xcomp(pass-109, give-111)
iobj(give-111, it-112)
dobj(give-111, context-113)
dep(context-113, about-114)
dobj(doing-119, what-115)
amod(passes-117, combined-116)
nsubj(doing-119, passes-117)
aux(doing-119, are-118)
dep(about-114, doing-119)
nsubj(<p>-1, </p>-121)
File Name: ./src/com/google/javascript/jscomp/CombinedCompilerPass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO: This hack is mostly for the purpose of preventing untyped stubs from showing up in the
{@link PureFunctionIdentifier} and causing unkown side effects from propagating everywhere.
This should probably be solved in one of the following ways instead:

<p>a) Have a pass ealier in the compiler that goes in and removes these stub definitions.

<p>b) Fix all extern files so that there are no untyped stubs mixed with typed ones and add a
restriction to the compiler to prevent this.

<p>c) Drop these stubs in the {@link PureFunctionIdentifier} instead. This "DefinitionProvider"
should not have to drop definitions itself.

Specificity: 1.0
Content Structure:
compound(TODO-2, <p>-1)
nsubj(have-114, TODO-2)
nsubj:xsubj(drop-116, TODO-2)
det(hack-5, This-4)
nsubj(purpose-10, hack-5)
cop(purpose-10, is-6)
advmod(purpose-10, mostly-7)
case(purpose-10, for-8)
det(purpose-10, the-9)
dep(TODO-2, purpose-10)
mark(preventing-12, of-11)
acl(purpose-10, preventing-12)
amod(stubs-14, untyped-13)
dobj(preventing-12, stubs-14)
mark(showing-16, from-15)
advcl(preventing-12, showing-16)
compound:prt(showing-16, up-17)
case(PureFunctionIdentifier-22, in-18)
det(PureFunctionIdentifier-22, the-19)
amod(PureFunctionIdentifier-22, @link-21)
nmod:in(showing-16, PureFunctionIdentifier-22)
cc(preventing-12, and-24)
acl(purpose-10, causing-25)
conj:and(preventing-12, causing-25)
amod(effects-28, unkown-26)
compound(effects-28, side-27)
dobj(causing-25, effects-28)
mark(propagating-30, from-29)
advcl(causing-25, propagating-30)
advmod(propagating-30, everywhere-31)
nsubjpass(solved-37, This-33)
aux(solved-37, should-34)
advmod(solved-37, probably-35)
auxpass(solved-37, be-36)
dep(<p>-65, solved-37)
case(one-39, in-38)
nmod:in(solved-37, one-39)
case(ways-43, of-40)
det(ways-43, the-41)
amod(ways-43, following-42)
nmod:of(one-39, ways-43)
advmod(solved-37, instead-44)
advmod(instead-44, <p>-46)
dep(Have-49, a-47)
advcl(<p>-46, Have-49)
det(ealier-52, a-50)
compound(ealier-52, pass-51)
dep(Have-49, ealier-52)
nsubj(goes-57, ealier-52)
nsubj(removes-60, ealier-52)
case(compiler-55, in-53)
det(compiler-55, the-54)
nmod:in(ealier-52, compiler-55)
ref(ealier-52, that-56)
acl:relcl(ealier-52, goes-57)
compound:prt(goes-57, in-58)
cc(goes-57, and-59)
acl:relcl(ealier-52, removes-60)
conj:and(goes-57, removes-60)
det(definitions-63, these-61)
compound(definitions-63, stub-62)
dobj(removes-60, definitions-63)
parataxis(have-114, <p>-65)
dep(Fix-68, b-66)
dep(<p>-65, Fix-68)
det(files-71, all-69)
compound(files-71, extern-70)
dobj(Fix-68, files-71)
xcomp(Fix-68, so-72)
mark(are-75, that-73)
expl(are-75, there-74)
ccomp(so-72, are-75)
advmod(are-75, no-76)
amod(stubs-78, untyped-77)
nmod:npmod(no-76, stubs-78)
xcomp(are-75, mixed-79)
case(ones-82, with-80)
amod(ones-82, typed-81)
nmod:with(mixed-79, ones-82)
cc(Fix-68, and-83)
dep(<p>-65, add-84)
conj:and(Fix-68, add-84)
det(restriction-86, a-85)
dobj(add-84, restriction-86)
case(compiler-89, to-87)
det(compiler-89, the-88)
nmod:to(add-84, compiler-89)
mark(prevent-91, to-90)
acl(compiler-89, prevent-91)
nsubj(<p>-65, this-92)
compound(c-95, <p>-94)
dep(this-92, c-95)
acl(this-92, Drop-97)
det(stubs-99, these-98)
dobj(Drop-97, stubs-99)
case(PureFunctionIdentifier-104, in-100)
det(PureFunctionIdentifier-104, the-101)
amod(PureFunctionIdentifier-104, @link-103)
nmod:in(stubs-99, PureFunctionIdentifier-104)
advmod(Drop-97, instead-106)
det(DefinitionProvider-110, This-108)
nsubj(have-114, DefinitionProvider-110)
nsubj:xsubj(drop-116, DefinitionProvider-110)
aux(have-114, should-112)
neg(have-114, not-113)
root(ROOT-0, have-114)
mark(drop-116, to-115)
xcomp(have-114, drop-116)
nsubj(itself-118, definitions-117)
xcomp(drop-116, itself-118)
File Name: ./src/com/google/javascript/jscomp/NameBasedDefinitionProvider.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
<p>TODO: This pass could be greatly improved by proper tracking of locals within function bodies.
Every instance of the call to {@link NodeUtil#evaluatesToLocalValue(Node)} and {@link
NodeUtil#allArgsUnescapedLocal(Node)} do not actually take into account local variables. They
only assume literals, primatives, and operations on primatives are local.

@author johnlenz@google.com (John Lenz)
@author tdeegan@google.com (Thomas Deegan)
<p>We will prevail, in peace and freedom from fear, and in true health, through the purity
and essence of our natural... fluids. - General Turgidson

Specificity: 1.0
Content Structure:
root(ROOT-0, <p>-1)
dobj(<p>-1, TODO-2)
nsubj:xsubj(@link-26, TODO-2)
det(pass-5, This-4)
dep(TODO-2, pass-5)
aux(improved-9, could-6)
auxpass(improved-9, be-7)
advmod(improved-9, greatly-8)
acl:relcl(pass-5, improved-9)
case(tracking-12, by-10)
amod(tracking-12, proper-11)
nmod:agent(improved-9, tracking-12)
case(locals-14, of-13)
nmod:of(tracking-12, locals-14)
case(bodies-17, within-15)
compound(bodies-17, function-16)
nmod:within(locals-14, bodies-17)
det(instance-20, Every-19)
dep(pass-5, instance-20)
case(call-23, of-21)
det(call-23, the-22)
nmod:of(instance-20, call-23)
mark(@link-26, to-24)
xcomp(<p>-1, @link-26)
compound(#evaluatesToLocalValue-28, NodeUtil-27)
dobj(@link-26, #evaluatesToLocalValue-28)
appos(#evaluatesToLocalValue-28, Node-30)
cc(#evaluatesToLocalValue-28, and-33)
compound(NodeUtil-36, @link-35)
dobj(@link-26, NodeUtil-36)
conj:and(#evaluatesToLocalValue-28, NodeUtil-36)
amod(NodeUtil-36, #allArgsUnescapedLocal-37)
appos(NodeUtil-36, Node-39)
aux(take-45, do-42)
neg(take-45, not-43)
advmod(take-45, actually-44)
dep(<p>-1, take-45)
case(account-47, into-46)
nmod:into(take-45, account-47)
dobj(take-45, local-48)
dep(local-48, variables-49)
nsubj(assume-53, They-51)
advmod(assume-53, only-52)
dep(variables-49, assume-53)
nsubj(local-63, literals-54)
conj:and(literals-54, primatives-56)
nsubj(local-63, primatives-56)
cc(literals-54, and-58)
conj:and(literals-54, operations-59)
nsubj(local-63, operations-59)
case(primatives-61, on-60)
nmod:on(operations-59, primatives-61)
cop(local-63, are-62)
ccomp(assume-53, local-63)
compound(johnlenz@google.com-66, @author-65)
nsubj(<p>-1, johnlenz@google.com-66)
compound(Lenz-69, John-68)
appos(johnlenz@google.com-66, Lenz-69)
compound(tdeegan@google.com-72, @author-71)
nsubj(<p>-77, tdeegan@google.com-72)
compound(Deegan-75, Thomas-74)
appos(tdeegan@google.com-72, Deegan-75)
acl:relcl(johnlenz@google.com-66, <p>-77)
nsubj(prevail-80, We-78)
aux(prevail-80, will-79)
ccomp(<p>-77, prevail-80)
case(peace-83, in-82)
conj:and(peace-83, peace-83')
nmod:in(fluids-103, peace-83)
nmod:in(fluids-103, peace-83')
cc(peace-83, and-84)
conj:and(peace-83, freedom-85)
nmod:in(fluids-103, freedom-85)
case(fear-87, from-86)
nmod:from(peace-83, fear-87)
cc(peace-83, and-89)
case(health-92, in-90)
amod(health-92, true-91)
nmod:in(peace-83', health-92)
case(purity-96, through-94)
det(purity-96, the-95)
nmod:through(fluids-103, purity-96)
cc(purity-96, and-97)
conj:and(purity-96, essence-98)
nmod:through(fluids-103, essence-98)
case(natural-101, of-99)
nmod:poss(natural-101, our-100)
nmod:of(purity-96, natural-101)
dep(prevail-80, fluids-103)
compound(Turgidson-107, General-106)
dep(johnlenz@google.com-66, Turgidson-107)
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
@GwtIncompatible // TODO(tdeegan): Remove use of Matcher#group to make this fully GWT compatible.
Specificity: 0.948994
Content Structure:
compound(TODO-4, @GwtIncompatible-1)
compound(TODO-4, /-2)
compound(TODO-4, /-3)
root(ROOT-0, TODO-4)
appos(TODO-4, tdeegan-6)
amod(use-10, Remove-9)
dep(TODO-4, use-10)
case(#group-13, of-11)
compound(#group-13, Matcher-12)
nmod:of(use-10, #group-13)
mark(make-15, to-14)
acl(use-10, make-15)
det(GWT-18, this-16)
compound(GWT-18, fully-17)
nsubj(compatible-19, GWT-18)
xcomp(make-15, compatible-19)
File Name: /src/com/google/javascript/jscomp/GoogleCodingConvention.java
Time Of Creation: 2017-07-05T11:56:50-07:00
Time Of Deletion: null
Creation Commit Hash: f58b0e426c0a04a9ebdc1935115b59d2176ed3c3
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
ALL_TYPE); // TODO(johnlenz): this should be:
{Object|number|string|null|void}
Specificity: 0.980892
Content Structure:
compound(-RRB--2, ALL_TYPE-1)
root(ROOT-0, -RRB--2)
dep(TODO-6, /-4)
compound(TODO-6, /-5)
dep(-RRB--2, TODO-6)
dep(TODO-6, johnlenz-8)
dep(TODO-6, this-11)
aux(be-13, should-12)
acl:relcl(this-11, be-13)
dep(TODO-6, Object-16)
compound(void-24, number-18)
compound(void-24, string-20)
compound(void-24, null-22)
dep(Object-16, void-24)
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
Once the TODO in FunctionType is fixed, we should be able to
remove this.
Specificity: 0.871102
Content Structure:
mark(fixed-7, Once-1)
det(TODO-3, the-2)
nsubjpass(fixed-7, TODO-3)
case(FunctionType-5, in-4)
nmod:in(TODO-3, FunctionType-5)
auxpass(fixed-7, is-6)
advcl(able-12, fixed-7)
nsubj(able-12, we-9)
nsubj:xsubj(remove-14, we-9)
aux(able-12, should-10)
cop(able-12, be-11)
root(ROOT-0, able-12)
mark(remove-14, to-13)
xcomp(able-12, remove-14)
dobj(remove-14, this-15)
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
Parse the next key (TODO(sdh): need to support non-quoted keys?).
Specificity: 0.929019
Content Structure:
root(ROOT-0, Parse-1)
det(key-4, the-2)
amod(key-4, next-3)
dobj(Parse-1, key-4)
compound(sdh-8, TODO-6)
appos(key-4, sdh-8)
dep(sdh-8, need-11)
mark(support-13, to-12)
xcomp(need-11, support-13)
amod(keys-15, non-quoted-14)
dobj(support-13, keys-15)
File Name: ./src/com/google/javascript/jscomp/deps/JsFileLineParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
Returns whether the name node for this reference is an lvalue. TODO(tbreisacher): This method
disagrees with NodeUtil#isLValue for "var x;" and "let x;". Consider updating it to match.

Specificity: 0.997812
Content Structure:
nsubj(TODO-13, Returns-1)
mark(node-5, whether-2)
det(name-4, the-3)
nsubj(node-5, name-4)
dep(Returns-1, node-5)
case(reference-8, for-6)
det(reference-8, this-7)
nmod:for(node-5, reference-8)
cop(TODO-13, is-9)
det(TODO-13, an-10)
compound(TODO-13, lvalue-11)
root(ROOT-0, TODO-13)
dep(TODO-13, tbreisacher-15)
det(method-19, This-18)
nsubj(Consider-37, method-19)
discourse(Consider-37, disagrees-20)
case(#isLValue-23, with-21)
compound(#isLValue-23, NodeUtil-22)
dep(disagrees-20, #isLValue-23)
case(x-33, for-24)
nsubj(x-27, var-26)
nmod:for(#isLValue-23, x-27)
conj:and(x-33, x-27)
cc(x-33, and-30)
compound(x-33, let-32)
nmod:for(#isLValue-23, x-33)
parataxis(TODO-13, Consider-37)
xcomp(Consider-37, updating-38)
dobj(updating-38, it-39)
nsubj:xsubj(match-41, it-39)
mark(match-41, to-40)
xcomp(updating-38, match-41)
File Name: ./src/com/google/javascript/jscomp/Reference.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
Sources inputsObj,  // TODO remove this parameter
Specificity: 0.733975
Content Structure:
nsubj(inputsObj-2, Sources-1)
root(ROOT-0, inputsObj-2)
compound(TODO-6, /-4)
compound(TODO-6, /-5)
nsubj(remove-7, TODO-6)
ccomp(inputsObj-2, remove-7)
det(parameter-9, this-8)
dobj(remove-7, parameter-9)
File Name: /test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-09T08:58:11-07:00
Time Of Deletion: null
Creation Commit Hash: 6954648993dabcbbad355aea1bb28615af8924f0
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
UNKNOWN_TYPE); // TODO(johnlenz): this should be CHECK_UNKNOWN
Specificity: 0.991449
Content Structure:
compound(TODO-6, UNKNOWN_TYPE-1)
compound(TODO-6, -RRB--2)
dep(TODO-6, /-4)
root(ROOT-0, TODO-6)
appos(TODO-6, johnlenz-8)
nsubj(CHECK_UNKNOWN-14, this-11)
aux(CHECK_UNKNOWN-14, should-12)
cop(CHECK_UNKNOWN-14, be-13)
parataxis(TODO-6, CHECK_UNKNOWN-14)
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
UNKNOWN_TYPE,  // TODO(johnlenz): should be CHECKED_UNKNOWN_TYPE
Specificity: 0.995628
Content Structure:
nsubj(CHECKED_UNKNOWN_TYPE-12, UNKNOWN_TYPE-1)
advmod(TODO-5, /-3)
compound(TODO-5, /-4)
appos(UNKNOWN_TYPE-1, TODO-5)
appos(TODO-5, johnlenz-7)
aux(CHECKED_UNKNOWN_TYPE-12, should-10)
cop(CHECKED_UNKNOWN_TYPE-12, be-11)
root(ROOT-0, CHECKED_UNKNOWN_TYPE-12)
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
UNKNOWN_TYPE,  // TODO(johnlenz): this should be "CHECKED_UNKNOWN"
Specificity: 0.987893
Content Structure:
compound(TODO-5, UNKNOWN_TYPE-1)
appos(TODO-5, /-3)
compound(TODO-5, /-4)
root(ROOT-0, TODO-5)
appos(TODO-5, johnlenz-7)
nsubj(CHECKED_UNKNOWN-14, this-10)
aux(CHECKED_UNKNOWN-14, should-11)
cop(CHECKED_UNKNOWN-14, be-12)
parataxis(TODO-5, CHECKED_UNKNOWN-14)
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
case "es6-impl": // TODO(sdh): support a separate language mode for es6-impl?
Specificity: 0.882014
Content Structure:
compound(es6-impl-3, case-1)
nsubj(support-13, es6-impl-3)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(es6-impl-3, TODO-8)
appos(TODO-8, sdh-10)
root(ROOT-0, support-13)
det(mode-17, a-14)
amod(mode-17, separate-15)
compound(mode-17, language-16)
dobj(support-13, mode-17)
case(es6-impl-19, for-18)
nmod:for(mode-17, es6-impl-19)
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
case EMPTY:  // TODO(johnlenz): remove this.
Specificity: 0.888477
Content Structure:
compound(EMPTY-2, case-1)
nsubj(remove-11, EMPTY-2)
compound(TODO-6, /-4)
compound(TODO-6, /-5)
dep(EMPTY-2, TODO-6)
appos(TODO-6, johnlenz-8)
root(ROOT-0, remove-11)
dobj(remove-11, this-12)
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
fold("a=+(f?true:false)", "a=+(f?1:0)"); // TODO(johnlenz): foldable
Specificity: 0.989707
Content Structure:
root(ROOT-0, fold-1)
det(=-5, a-4)
dobj(fold-1, =-5)
dep(=-5, +-6)
dep(+-6, f?true-8)
dep(f?true-8, false-10)
det(=-16, a-15)
nsubj(+-17, =-16)
dep(=-5, +-17)
dep(1:0-21, f-19)
dep(+-17, 1:0-21)
compound(TODO-28, /-26)
compound(TODO-28, /-27)
dobj(fold-1, TODO-28)
appos(TODO-28, johnlenz-30)
dep(TODO-28, foldable-33)
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Complete
Content:
if (mode != Mode.SINGLE_FILE) {  // TODO(tbreisacher): Fix violations and remove this check.
Specificity: 0.98565
Content Structure:
case(FILE-8, if-1)
compound(FILE-8, mode-3)
compound(FILE-8, =-5)
compound(FILE-8, Mode.SINGLE-6)
compound(FILE-8, _-7)
nmod:if(Fix-18, FILE-8)
compound(TODO-13, /-11)
compound(TODO-13, /-12)
dep(FILE-8, TODO-13)
appos(FILE-8, tbreisacher-15)
root(ROOT-0, Fix-18)
dobj(Fix-18, violations-19)
cc(Fix-18, and-20)
conj:and(Fix-18, remove-21)
det(check-23, this-22)
dobj(remove-21, check-23)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-05T11:54:26-07:00
Time Of Deletion: 2017-07-06T08:20:33-07:00
Creation Commit Hash: 362d8feee30f1eddcd8a617e20cfa9cf5e61025d
Deletion Commit Hash: 810634b49ea1ba1fd7339f0b44f28654d3e14576
Time To Complete: P1D; PT-3H-33M-53S

Type: Incomplete
Content:
if (mode != Mode.SINGLE_FILE) { // TODO(tbreisacher): Fix violations and remove this check.
}
if (!n.isStringKey() && !NodeUtil.isLhsOfAssign(n) && !parent.isExprResult()) {
@@ -568,8 +564,7 @@ public class CheckMissingAndExtraRequires implements HotSwapCompilerPass, NodeTr

if (var != null
&& (var.isExtern() || var.getSourceFile() == newNode.getStaticSourceFile())) {
if (var != null && (var.isExtern() || var.getSourceFile() == newNode.getStaticSourceFile())) {
}
@@ -629,8 +624,8 @@ public class CheckMissingAndExtraRequires implements HotSwapCompilerPass, NodeTr
}

Specificity: 1.0
Content Structure:
mark(-RRB--9, if-1)
compound(FILE-8, mode-3)
compound(FILE-8, =-5)
compound(FILE-8, Mode.SINGLE-6)
compound(FILE-8, _-7)
nsubj(-RRB--9, FILE-8)
root(ROOT-0, -RRB--9)
dep(-RRB--9, /-12)
dobj(/-12, TODO-13)
appos(TODO-13, tbreisacher-15)
parataxis(/-12, Fix-18)
dobj(Fix-18, violations-19)
cc(Fix-18, and-20)
parataxis(/-12, remove-21)
conj:and(Fix-18, remove-21)
det(check-23, this-22)
dobj(remove-21, check-23)
mark(@@-107, if-26)
advmod(n.isStringKey-29, !-28)
amod(-LCB--105, n.isStringKey-29)
compound(NodeUtil.isLhsOfAssign-35, -RRB--31)
cc(-RRB--31, &-32)
conj:&(-RRB--31, &-33)
compound(NodeUtil.isLhsOfAssign-35, &-33)
dep(n.isStringKey-29, NodeUtil.isLhsOfAssign-35)
discourse(NodeUtil.isLhsOfAssign-35, n-37)
cc(NodeUtil.isLhsOfAssign-35, &-39)
compound(parent.isExprResult-42, &-40)
dep(n.isStringKey-29, parent.isExprResult-42)
conj:&(NodeUtil.isLhsOfAssign-35, parent.isExprResult-42)
appos(parent.isExprResult-42, -RRB--44)
dep(+564,7-49, @@-47)
nummod(+564,7-49, -568,8-48)
dep(parent.isExprResult-42, +564,7-49)
amod(class-52, public-51)
parataxis(+564,7-49, class-52)
compound(NodeTr-57, CheckMissingAndExtraRequires-53)
compound(NodeTr-57, implements-54)
compound(NodeTr-57, HotSwapCompilerPass-55)
dep(class-52, NodeTr-57)
case(null-63, if-58)
compound(null-63, var-60)
compound(null-63, =-62)
nmod:if(NodeTr-57, null-63)
cc(null-63, &-64)
nmod:if(NodeTr-57, &-65)
conj:&(null-63, &-65)
appos(null-63, var.isExtern-67)
nummod(var.isExtern-67, -LRB--68)
dep(-LRB--73, |-71)
amod(-LRB--73, var.getSourceFile-72)
parataxis(class-52, -LRB--73)
amod(-RRB--78, newNode.getStaticSourceFile-76)
dep(NodeUtil.isLhsOfAssign-35, -RRB--78)
dep(n.isStringKey-29, if-82)
dep(if-82, var-84)
dep(null-87, =-86)
acl:relcl(var-84, null-87)
cc(var-84, &-88)
dep(if-82, &-89)
conj:&(var-84, &-89)
appos(&-89, var.isExtern-91)
nummod(var.isExtern-91, -LRB--92)
dep(&-89, |-94)
compound(|-94, var.getSourceFile-96)
dep(|-94, -LRB--97)
dep(var-84, ==-99)
dep(var-84, newNode.getStaticSourceFile-100)
appos(newNode.getStaticSourceFile-100, -RRB--102)
nsubj(@@-107, -LCB--105)
advcl(-RRB--9, @@-107)
nummod(+624,8-109, -629,8-108)
dobj(@@-107, +624,8-109)
amod(class-112, public-111)
dep(+624,8-109, class-112)
compound(HotSwapCompilerPass-115, CheckMissingAndExtraRequires-113)
compound(HotSwapCompilerPass-115, implements-114)
compound(class-112, HotSwapCompilerPass-115)
dep(class-112, NodeTr-117)
File Name: /src/com/google/javascript/jscomp/CheckMissingAndExtraRequires.java
Time Of Creation: 2017-07-06T08:20:33-07:00
Time Of Deletion: null
Creation Commit Hash: 810634b49ea1ba1fd7339f0b44f28654d3e14576
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
is essentially a "TODO(tbreisacher): Implement {@code feature}" comment.

Specificity: 0.904747
Content Structure:
cop(tbreisacher-7, is-1)
advmod(tbreisacher-7, essentially-2)
det(tbreisacher-7, a-3)
compound(tbreisacher-7, TODO-5)
root(ROOT-0, tbreisacher-7)
dep(tbreisacher-7, Implement-10)
amod(feature-13, @code-12)
appos(Implement-10, feature-13)
dep(tbreisacher-7, comment-16)
File Name: ./src/com/google/javascript/jscomp/Es6RewriteClass.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
is essentially a "TODO(tbreisacher): Implement {@code feature}" comment.

Specificity: 0.904747
Content Structure:
cop(tbreisacher-7, is-1)
advmod(tbreisacher-7, essentially-2)
det(tbreisacher-7, a-3)
compound(tbreisacher-7, TODO-5)
root(ROOT-0, tbreisacher-7)
dep(tbreisacher-7, Implement-10)
amod(feature-13, @code-12)
appos(Implement-10, feature-13)
dep(tbreisacher-7, comment-16)
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
parse("var str = '\\$'");  // TODO(tbreisacher): We should warn for this case.
Specificity: 0.971613
Content Structure:
root(ROOT-0, parse-1)
nsubj(str-5, var-4)
dep(parse-1, str-5)
nsubj($-10, =-6)
case(=-6, '-7)
dep($-10, \-8)
ccomp(str-5, $-10)
compound(TODO-17, /-15)
compound(TODO-17, /-16)
dep(parse-1, TODO-17)
appos(TODO-17, tbreisacher-19)
nsubj(warn-24, We-22)
aux(warn-24, should-23)
parataxis(TODO-17, warn-24)
case(case-27, for-25)
det(case-27, this-26)
nmod:for(warn-24, case-27)
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
private final int maxLine; // TODO(johnlenz): This shouldn't be necessary to track.
Specificity: 0.921392
Content Structure:
amod(maxLine-4, private-1)
amod(maxLine-4, final-2)
compound(maxLine-4, int-3)
root(ROOT-0, maxLine-4)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(maxLine-4, TODO-8)
appos(TODO-8, johnlenz-10)
nsubj(necessary-17, This-13)
nsubj:xsubj(track-19, This-13)
aux(necessary-17, should-14)
neg(necessary-17, n't-15)
cop(necessary-17, be-16)
parataxis(maxLine-4, necessary-17)
mark(track-19, to-18)
xcomp(necessary-17, track-19)
File Name: ./src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
return TernaryValue.FALSE; // TODO(moz): Correct this.
Specificity: 0.916467
Content Structure:
compound(TernaryValue.FALSE-2, return-1)
root(ROOT-0, TernaryValue.FALSE-2)
dep(TernaryValue.FALSE-2, /-4)
compound(moz-8, TODO-6)
dep(TernaryValue.FALSE-2, moz-8)
dep(moz-8, Correct-11)
dep(Correct-11, this-12)
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
return c == 0xA0; // TODO(moz): Correct this.
Specificity: 0.852763
Content Structure:
compound(0xA0-4, return-1)
compound(0xA0-4, c-2)
compound(0xA0-4, ==-3)
root(ROOT-0, 0xA0-4)
dep(moz-10, /-7)
compound(moz-10, TODO-8)
dep(0xA0-4, moz-10)
dep(moz-10, Correct-13)
dep(Correct-13, this-14)
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
return c > 127; // TODO(moz): Correct this.
Specificity: 0.847324
Content Structure:
compound(c-2, return-1)
root(ROOT-0, c-2)
compound(127-4, >-3)
dep(c-2, 127-4)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(c-2, TODO-8)
appos(TODO-8, moz-10)
dep(c-2, Correct-13)
dep(Correct-13, this-14)
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
return true;  // TODO(johnlenz): are there any misuses we can catch?
Specificity: 0.886048
Content Structure:
nsubj(misuses-14, return-1)
amod(return-1, true-2)
compound(TODO-6, /-4)
compound(TODO-6, /-5)
dep(return-1, TODO-6)
appos(TODO-6, johnlenz-8)
cop(misuses-14, are-11)
advmod(misuses-14, there-12)
det(misuses-14, any-13)
root(ROOT-0, misuses-14)
nsubj(catch-17, we-15)
aux(catch-17, can-16)
acl:relcl(misuses-14, catch-17)
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
return true; // TODO(johnlenz): restrict to objects
Specificity: 0.817656
Content Structure:
root(ROOT-0, return-1)
xcomp(return-1, true-2)
parataxis(return-1, /-4)
compound(TODO-6, /-5)
dobj(/-4, TODO-6)
appos(TODO-6, johnlenz-8)
parataxis(return-1, restrict-11)
case(objects-13, to-12)
nmod:to(restrict-11, objects-13)
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
testSame("var {x} = {};"); // TODO(moz): Maybe add a warning for this case
Specificity: 0.98688
Content Structure:
root(ROOT-0, testSame-1)
amod(=-8, var-4)
amod(=-8, x-6)
nsubj(add-23, =-8)
dep(=-8, -RCB--10)
dep(-RCB--10, ;-11)
compound(TODO-17, /-15)
compound(TODO-17, /-16)
dep(=-8, TODO-17)
discourse(TODO-17, moz-19)
advmod(add-23, Maybe-22)
ccomp(testSame-1, add-23)
det(warning-25, a-24)
dobj(add-23, warning-25)
case(case-28, for-26)
det(case-28, this-27)
nmod:for(warning-25, case-28)
File Name: /test/com/google/javascript/jscomp/VariableReferenceCheckTest.java
Time Of Creation: 2017-05-31T18:10:35-07:00
Time Of Deletion: null
Creation Commit Hash: 2dfcc433485dd44075908339835823de09fcc7c3
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
testSameEs6("var {x} = {};"); // TODO(moz): Maybe add a warning for this case
Specificity: 0.987753
Content Structure:
nsubj(add-23, testSameEs6-1)
amod(x-6, var-4)
dep(testSameEs6-1, x-6)
dep(;-11, =-8)
compound(;-11, -RCB--10)
acl:relcl(x-6, ;-11)
compound(TODO-17, /-15)
compound(TODO-17, /-16)
dep(testSameEs6-1, TODO-17)
discourse(TODO-17, moz-19)
advmod(add-23, Maybe-22)
root(ROOT-0, add-23)
det(warning-25, a-24)
dobj(add-23, warning-25)
case(case-28, for-26)
det(case-28, this-27)
nmod:for(warning-25, case-28)
File Name: ./test/com/google/javascript/jscomp/VariableReferenceCheckTest.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
too tightly coupled to CheckAccessControls. TODO(brndn): simplify.
Specificity: 0.874776
Content Structure:
advmod(tightly-2, too-1)
advmod(coupled-3, tightly-2)
root(ROOT-0, coupled-3)
case(TODO-7, to-4)
compound(TODO-7, CheckAccessControls-5)
nmod:to(coupled-3, TODO-7)
appos(TODO-7, brndn-9)
dep(TODO-7, simplify-12)
File Name: ./src/com/google/javascript/jscomp/SymbolTable.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
|| node.isRoot()) { // TODO(blickly): Stop creating this edge for ROOT nodes
Specificity: 0.974267
Content Structure:
amod(-RRB--5, node.isRoot-3)
root(ROOT-0, -RRB--5)
compound(TODO-10, /-8)
compound(TODO-10, /-9)
dep(-RRB--5, TODO-10)
discourse(-RRB--5, blickly-12)
nsubj(creating-16, Stop-15)
parataxis(-RRB--5, creating-16)
det(edge-18, this-17)
dobj(creating-16, edge-18)
case(nodes-21, for-19)
amod(nodes-21, ROOT-20)
nmod:for(edge-18, nodes-21)
File Name: ./src/com/google/javascript/jscomp/ControlFlowAnalysis.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
|| objType.isBottom()      // TODO(sdh): remove when OTI gone (always false in NTI)
Specificity: 0.98063
Content Structure:
root(ROOT-0, |-1)
dep(|-1, objType.isBottom-3)
compound(TODO-8, -RRB--5)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(objType.isBottom-3, TODO-8)
discourse(TODO-8, sdh-10)
dep(|-1, remove-13)
advmod(OTI-15, when-14)
advcl(remove-13, OTI-15)
dep(OTI-15, gone-16)
dep(false-19, always-18)
dep(gone-16, false-19)
case(NTI-21, in-20)
nmod:in(false-19, NTI-21)
File Name: /src/com/google/javascript/jscomp/InvalidatingTypes.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
|| objType.isUnknownType() // TODO(sdh): remove when OTI gone (always false in NTI)
Specificity: 0.98221
Content Structure:
root(ROOT-0, |-1)
dep(|-1, objType.isUnknownType-3)
compound(TODO-8, -RRB--5)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(objType.isUnknownType-3, TODO-8)
discourse(TODO-8, sdh-10)
dep(|-1, remove-13)
advmod(OTI-15, when-14)
advcl(remove-13, OTI-15)
dep(OTI-15, gone-16)
dep(false-19, always-18)
dep(gone-16, false-19)
case(NTI-21, in-20)
nmod:in(false-19, NTI-21)
File Name: /src/com/google/javascript/jscomp/InvalidatingTypes.java
Time Of Creation: 2017-07-12T12:41:08-07:00
Time Of Deletion: null
Creation Commit Hash: 8530f3701d13eef2acc64a114c4aded93b6af404
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
|| thatType.isNoObjectType() // TODO(johnlenz): restrict to objects
Specificity: 0.92122
Content Structure:
amod(thatType.isNoObjectType-3, |-2)
root(ROOT-0, thatType.isNoObjectType-3)
compound(TODO-8, -RRB--5)
compound(TODO-8, /-6)
compound(TODO-8, /-7)
dep(thatType.isNoObjectType-3, TODO-8)
appos(thatType.isNoObjectType-3, johnlenz-10)
compound(objects-15, restrict-13)
dep(objects-15, to-14)
dep(thatType.isNoObjectType-3, objects-15)
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete

Type: Incomplete
Content:
} // TODO(sdh): else warning?
Specificity: 0.828666
Content Structure:
root(ROOT-0, -RCB--1)
dep(sdh-6, TODO-4)
dep(-RCB--1, sdh-6)
advmod(warning-10, else-9)
dep(sdh-6, warning-10)
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-05-31T17:54:12-07:00
Time Of Deletion: null
Creation Commit Hash: d4770daa3cf5c1213bda0245119e9c6a38b01316
Deletion Commit Hash: null
Time To Complete: Incomplete



Frequency Table: 
'CompilerOptions.java' : 0
'RefasterJsScanner.java' : 0
'a/src/com' : 0
'b/src/com' : 0
'google/javascript/jscomp' : 0
'google/javascript/refactoring' : 0
're' : 0
'#allArgsUnescapedLocal' : 1
'#containsExactly' : 1
'#evaluatesToLocalValue' : 1
'#group' : 1
'#hasUndeclaredFormalsOrOuters' : 1
'#isLValue' : 1
'#isSimpleOperator' : 1
'#isUnflowable' : 1
'#resolve' : 1
'#src' : 1
'#substituteGenerics' : 1
'#testDifficultObjectSpecialization' : 1
'#traverse' : 1
'+2995,7' : 1
'+400,7' : 1
'+409,7' : 1
'+426,33' : 1
'+474,12' : 1
'+488,7' : 1
'+505,25' : 1
'+532,58' : 1
'+564,7' : 1
'+591,13' : 1
'+606,19' : 1
'+624,8' : 1
'+627,17' : 1
'+646,8' : 1
'-2959,7' : 1
'-400,7' : 1
'-409,7' : 1
'-426,38' : 1
'-479,12' : 1
'-493,7' : 1
'-510,25' : 1
'-537,58' : 1
'-568,8' : 1
'-596,13' : 1
'-611,19' : 1
'-629,8' : 1
'-632,17' : 1
'-651,8' : 1
'0xA0' : 1
'1,2,3' : 1
'1.0' : 1
'10' : 1
'100' : 1
'12' : 1
'123' : 1
'127' : 1
'1897' : 1
'1:0' : 1
'20' : 1
'310' : 1
'4' : 1
'5,6' : 1
'6' : 1
'<!HTMLBRElement>' : 1
'<!HTMLDivElement>' : 1
'</b>' : 1
'</p>' : 1
'<E>' : 1
'<N>' : 1
'<T extends TypeI>' : 1
'<b>' : 1
'@BellaShim' : 1
'@Override' : 1
'@abstract' : 1
'@enum' : 1
'@fileoverview' : 1
'@implicitCast' : 1
'@struct' : 1
'@unrestricted' : 1
'@wizaction' : 1
'ALL_TYPE' : 1
'AND' : 1
'ASSIGN' : 1
'AbstractCompiler' : 1
'Address' : 1
'AliasExterns' : 1
'Allowing' : 1
'Alternately' : 1
'Alternatively' : 1
'Although' : 1
'AmbiguateProperties' : 1
'Any' : 1
'Apply' : 1
'Arguments' : 1
'Array.prototype.push' : 1
'Assuming' : 1
'BIT' : 1
'BOTTOM' : 1
'BREAK' : 1
'Bar' : 1
'Be' : 1
'Because' : 1
'Besides' : 1
'Better' : 1
'Boolean' : 1
'Bracket' : 1
'Break' : 1
'By' : 1
'C.' : 1
'CALL' : 1
'CASE' : 1
'CATCH' : 1
'CFA' : 1
'CHECKED_UNKNOWN' : 1
'CHECKED_UNKNOWN_TYPE' : 1
'CHECK_UNKNOWN' : 1
'CONST' : 1
'CONTINUE' : 1
'Ca' : 1
'Cache' : 1
'Cakes' : 1
'Call' : 1
'Candidates' : 1
'Catching' : 1
'Category' : 1
'Certain' : 1
'Chafik' : 1
'CheckInterfaces' : 1
'CheckJSDoc' : 1
'Cleanup' : 1
'CodePrinter' : 1
'CodingConvention' : 1
'CodingConvention.extractClassNameIf' : 1
'Combining' : 1
'CombiningMark' : 1
'Come' : 1
'CommonJS' : 1
'CompilerPass' : 1
'Config' : 1
'Connector' : 1
'Constructor' : 1
'ControlFlowAnalysis.mayThrowException' : 1
'Convert' : 1
'Converting' : 1
'Copy' : 1
'Counting' : 1
'CrossModuleMotionEnvironment' : 1
'D' : 1
'DECOMPOSABLE' : 1
'DO' : 1
'DOM' : 1
'DataFlowAnalysis' : 1
'Date' : 1
'DecimalDigit' : 1
'DeclaredFunctionType' : 1
'DefaultPassConfig.HotSwapPassFactory' : 1
'DefinitionProvider' : 1
'DefinitionsRemover' : 1
'Deprecate' : 1
'Detects' : 1
'Determine' : 1
'Determining' : 1
'DiagnosticGroup' : 1
'DiagnosticGroups' : 1
'DiagnosticGroups.setWarningLevel' : 1
'Disallow' : 1
'DisambiguatePropertiesTest' : 1
'Distinguish' : 1
'Doc' : 1
'Drop' : 1
'E' : 1
'ECMASCRIPT5/6' : 1
'ENUM_IS_UNION' : 1
'EXPRESSION' : 1
'EXPR_RESULT' : 1
'Each' : 1
'EasyMock' : 1
'Eg' : 1
'Errors' : 1
'Es6CheckModule' : 1
'Es6ErrorReporter' : 1
'Es6ToEs3Converter' : 1
'Es6TranspilationIntegrationTest' : 1
'Exceptions' : 1
'Explorer' : 1
'FREE' : 1
'FeatureSet' : 1
'Firefox' : 1
'FixedPointGraphTraversal' : 1
'Foo.a' : 1
'Foo.prototype' : 1
'Function.bind' : 1
'FunctionState' : 1
'FunctionType' : 1
'FunctionTypeBuilder' : 1
'GE' : 1
'GEN' : 1
'GETPROP' : 1
'GET_ELEM' : 1
'GWT-compatible' : 1
'Gate' : 1
'GatherRawExports' : 1
'General' : 1
'Generalize' : 1
'Give' : 1
'Given' : 1
'GlobalTypeInfoCollector.INTERFACE' : 1
'HOOK' : 1
'HashMap' : 1
'HashSet' : 1
'Here' : 1
'High.prototype.method' : 1
'HotSwapPassFactory' : 1
'How' : 1
'I.' : 1
'IDE' : 1
'IE' : 1
'IE8' : 1
'IIterableResult' : 1
'IN' : 1
'INEXISTENT_PROPERTY' : 1
'INVALID_ARGUMENT_TYPE' : 1
'ISE' : 1
'IdentifierStart' : 1
'Infer' : 1
'InferConsts' : 1
'Initialize' : 1
'InlineFunctions' : 1
'IntegrationTest' : 1
'Internally' : 1
'Internet' : 1
'IntraproceduralMotionEnvironment' : 1
'Intuitively' : 1
'IsStatic' : 1
'Issue' : 1
'JSC_JSDOC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME' : 1
'JSCompiler' : 1
'JSON' : 1
'JSType' : 1
'JSTypeExpression' : 1
'Java' : 1
'JavaDoc' : 1
'Javadoc' : 1
'Joiner' : 1
'JsCompiler' : 1
'JsDocInfoParser' : 1
'JsDocMatcher' : 1
'JsMethod' : 1
'Just' : 1
'LE' : 1
'LET' : 1
'Let' : 1
'Lets' : 1
'Letter' : 1
'LinkedHashSet' : 1
'ListenableFuture' : 1
'Loring' : 1
'Low.prototype.method' : 1
'MAPPED' : 1
'METHOD_NOT_IMPLEMENTED' : 1
'MISPLACED_ANNOTATION' : 1
'MISSING_REQUIRE_WARNING' : 1
'MISTYPED_ASSIGN_RHS' : 1
'MODULE_BODY' : 1
'MakeDeclaredNamesUnique' : 1
'Many' : 1
'MapSubject' : 1
'Maps' : 1
'Matthew' : 1
'Mc' : 1
'Michael' : 1
'Might' : 1
'Minimize' : 1
'MinimizeExitPoints' : 1
'Minimum' : 1
'Mn' : 1
'Model' : 1
'Modify' : 1
'Must' : 1
'My' : 1
'NI' : 1
'NOT' : 1
'NOT_UNIQUE_INSTANTIATION' : 1
'NPE' : 1
'NTIScope' : 1
'Name' : 1
'NameContext' : 1
'NameNode' : 1
'NamedType' : 1
'Need' : 1
'NewTypeInference' : 1
'NewTypeInferenceTest' : 1
'NoResolvedType' : 1
'NodeTypeNormalizer' : 1
'NodeUtil.createsScope' : 1
'NodeUtil.getBestJSDoc' : 1
'NodeUtil.isLhsOfAssign' : 1
'NominalType' : 1
'Non-Joiner' : 1
'Non-Spacing' : 1
'NumberToken' : 1
'NumericLiteral' : 1
'ON_EX' : 1
'ORing' : 1
'Object.create' : 1
'Object.createProperty' : 1
'ObjectType' : 1
'ObjectTypes' : 1
'Olivier' : 1
'One' : 1
'Optimize' : 1
'Other' : 1
'Our' : 1
'Overlaps' : 1
'Parse' : 1
'ParserRunner' : 1
'Pass' : 1
'PassConfig' : 1
'PassFactory' : 1
'Pc' : 1
'PeepholeReorderConstantExpression' : 1
'People' : 1
'Polymer' : 1
'Polymorphism' : 1
'Possibly' : 1
'Preconditions' : 1
'Preserve' : 1
'PrintStream' : 1
'Promise' : 1
'PropertyI' : 1
'Prune' : 1
'Push' : 1
'REGEX' : 1
'Rare' : 1
'RawNominalType' : 1
'Recursive' : 1
'Reenable' : 1
'RegExp' : 1
'Regexp' : 1
'RemoveConstantExpressions' : 1
'RemoveUnnecessaryGoogBind' : 1
'RemoveUnusedClassPropertiesTest' : 1
'RemoveUnusedVars' : 1
'Removing' : 1
'Require' : 1
'Returns' : 1
'ReverseAbstractInterupter' : 1
'Rhino' : 1
'SCRIPT' : 1
'SOY' : 1
'SSA' : 1
'STRICT' : 1
'ScopeCreator' : 1
'SemanticRAI' : 1
'Separate' : 1
'Set' : 1
'Side-effect' : 1
'Simpler' : 1
'Since' : 1
'SmallTest' : 1
'Something' : 1
'Soon' : 1
'Sources' : 1
'Stop' : 1
'Store' : 1
'Subclass' : 1
'SuggestedFix' : 1
'SuperClass' : 1
'Switch/for' : 1
'T.' : 1
'T.f' : 1
'T.x' : 1
'THROWs' : 1
'TRY/FINALLY' : 1
'TTL' : 1
'TemplatizedTypes' : 1
'TernaryValue.FALSE' : 1
'Test' : 1
'They' : 1
'Token.STRING' : 1
'Token.VOID' : 1
'Trush' : 1
'Turgidson' : 1
'Turn' : 1
'TypeIRegistry' : 1
'TypeMismatch' : 1
'TypeScript' : 1
'TypeValidator' : 1
'TypedScopeCreatorTest' : 1
'Typescript' : 1
'UNNAMED' : 1
'UNUSED_LOCAL_ASSIGNMENT' : 1
'Unicode' : 1
'UnicodeLetter' : 1
'Unify' : 1
'UnionType' : 1
'UnreachableCodeElimination' : 1
'Unresolved' : 1
'UseSite' : 1
'Used' : 1
'VARs' : 1
'Validate' : 1
'Variable' : 1
'Whatever' : 1
'Whether' : 1
'While' : 1
'Will' : 1
'With' : 1
'WithProp' : 1
'Wo' : 1
'Worth' : 1
'Write' : 1
'Zhou' : 1
'Zs' : 1
'a.b.' : 1
'a.test' : 1
'ability' : 1
'abort' : 1
'accepted' : 1
'accepts' : 1
'access' : 1
'accesses' : 1
'accessible' : 1
'accessing' : 1
'accidentally' : 1
'accounts' : 1
'accurate' : 1
'achieved' : 1
'adapted' : 1
'addDependency' : 1
'addProvide/addRequire/removeRequire' : 1
'addSingletonGetter' : 1
'adjusted' : 1
'advanced' : 1
'aka' : 1
'algorithms' : 1
'aliased' : 1
'allowEnums' : 1
'allows' : 1
'alternatives' : 1
'am' : 1
'ambiguate' : 1
'ambiguation' : 1
'analyzeNameFwd/Bwd' : 1
'ancestry' : 1
'annotated' : 1
'ant' : 1
'anymore' : 1
'anything' : 1
'appears' : 1
'application' : 1
'applied' : 1
'appropriate' : 1
'approximation' : 1
'arbitrary' : 1
'arity' : 1
'array' : 1
'arrays' : 1
'as-is' : 1
'assert-fail' : 1
'assertNodeEquality' : 1
'assertOnChange' : 1
'assertThat' : 1
'asserts' : 1
'associated' : 1
'assuming' : 1
'assumptions' : 1
'async' : 1
'attached' : 1
'attaching' : 1
'attempting' : 1
'avoided' : 1
'b.apply' : 1
'b.call' : 1
'b.length' : 1
'b.test' : 1
'b.z' : 1
'b/2316773' : 1
'b/28382956' : 1
'b/31301233' : 1
'b/33005948' : 1
'b/37351897' : 1
'b/62544959' : 1
'b/63630312' : 1
'b/c' : 1
'back-inference' : 1
'bailout' : 1
'basic' : 1
'baz' : 1
'becomes' : 1
'behaviors' : 1
'beyond' : 1
'binaries' : 1
'binary' : 1
'bit-fiddling' : 1
'bit-vector' : 1
'bit-wise' : 1
'bitwise' : 1
'blocked' : 1
'blown' : 1
'bound' : 1
'branched' : 1
'breakage' : 1
'breaking' : 1
'breaks/continues/returns' : 1
'brittle' : 1
'broken' : 1
'builder' : 1
'builds' : 1
'built' : 1
'bwd' : 1
'bypass' : 1
'byte' : 1
'c.g.javascript.jscomp' : 1
'c.test' : 1
'cached' : 1
'caching' : 1
'callCost' : 1
'callSite' : 1
'callable' : 1
'callee' : 1
'caller' : 1
'caller.knownLocals.contains' : 1
'calling' : 1
'canBeSideEffected' : 1
'canceling' : 1
'captures' : 1
'carefully' : 1
'carry' : 1
'cascading' : 1
'cased' : 1
'casting' : 1
'casts' : 1
'caught' : 1
'causing' : 1
'char' : 1
'charAt' : 1
'chars' : 1
'checkNotNull' : 1
'checkTreeEqual' : 1
'checkTypes' : 1
'checked' : 1
'cl/41958159' : 1
'clashes' : 1
'classNode' : 1
'classification' : 1
'clean' : 1
'cleaner' : 1
'cleanup' : 1
'clearer' : 1
'close' : 1
'closest' : 1
'coalesce' : 1
'codepath' : 1
'collapseProperties' : 1
'collapsible' : 1
'collect' : 1
'collection' : 1
'collisions' : 1
'combination' : 1
'combining' : 1
'come' : 1
'coming' : 1
'command-line' : 1
'compile' : 1
'compiled' : 1
'complete' : 1
'complexity' : 1
'compromise' : 1
'computable' : 1
'computation' : 1
'computeEscaped' : 1
'computed' : 1
'computing' : 1
'concrete' : 1
'concretely' : 1
'condition' : 1
'conditionals' : 1
'conditions' : 1
'conflicts' : 1
'confuses' : 1
'consideration' : 1
'consistency' : 1
'consistently' : 1
'consolidate' : 1
'consolidated' : 1
'const-related' : 1
'constraints' : 1
'constructors' : 1
'containing' : 1
'containsExactly' : 1
'contents' : 1
'continuation' : 1
'continue' : 1
'contrast' : 1
'control-flow' : 1
'conversion' : 1
'copying' : 1
'correctness' : 1
'corresponding' : 1
'coupled' : 1
'covered' : 1
'cr.exportPath' : 1
'crack' : 1
'crashing' : 1
'createSynthesizedExternVar' : 1
'creates' : 1
'crop' : 1
'cruft' : 1
'cryptic' : 1
'ctemplate' : 1
'ctor' : 1
'ctors' : 1
'curNode' : 1
'currentScope' : 1
'cut' : 1
'cycle' : 1
'cycles' : 1
'data-structure' : 1
'dataflow' : 1
'dbeam' : 1
'deallocate' : 1
'debug' : 1
'decided' : 1
'decides' : 1
'decision' : 1
'declaredType' : 1
'declares' : 1
'declaring' : 1
'decomposed' : 1
'decomposer' : 1
'decomposing' : 1
'deeper' : 1
'defaults' : 1
'defender' : 1
'defineProperties' : 1
'definitionProvider' : 1
'deleting' : 1
'deliberately' : 1
'delimiter' : 1
'demonstrate' : 1
'denormalizing' : 1
'dependencies' : 1
'depending' : 1
'depends' : 1
'described' : 1
'describing' : 1
'descriptors' : 1
'deserialize' : 1
'deserialized' : 1
'desirable' : 1
'detecting' : 1
'determined' : 1
'deterministic' : 1
'devirtualization' : 1
'devirtualized' : 1
'differ' : 1
'differences' : 1
'difficulty' : 1
'dig' : 1
'directory' : 1
'disabling' : 1
'disagrees' : 1
'disambiguated' : 1
'disambiguation' : 1
'discovering' : 1
'discussed' : 1
'disjoint' : 1
'display' : 1
'distinct' : 1
'do-while' : 1
'do/while/for' : 1
'document' : 1
'dot' : 1
'dumb' : 1
'duplicated' : 1
'e.bar' : 1
'ealier' : 1
'earlier' : 1
'efficiently' : 1
'elements' : 1
'eliminate' : 1
'embedding' : 1
'emit' : 1
'emiting' : 1
'emphasize' : 1
'emulate' : 1
'emulation' : 1
'encoding' : 1
'end-of-fwd' : 1
'entering' : 1
'entries' : 1
'env' : 1
'environments' : 1
'equal' : 1
'equivalent' : 1
'error-flush' : 1
'es6' : 1
'essence' : 1
'estimate' : 1
'eval' : 1
'evaluates' : 1
'evaluation' : 1
'event-id' : 1
'events' : 1
'eventually' : 1
'evolve' : 1
'exceptions' : 1
'exclude' : 1
'execute' : 1
'expectations' : 1
'experiment' : 1
'explain' : 1
'export' : 1
'exports' : 1
'extend' : 1
'externExportsPath' : 1
'externObjSEThisMethod' : 1
'external' : 1
'externally' : 1
'externed' : 1
'extract' : 1
'extractMultilineTextualBlock' : 1
'extraneous' : 1
'f?true' : 1
'facilitates' : 1
'failing' : 1
'fails' : 1
'fallback' : 1
'falsely' : 1
'fast' : 1
'faster' : 1
'favors' : 1
'favorsCommaOverSemiColon' : 1
'fear' : 1
'featureSet' : 1
'fewer' : 1
'figure' : 1
'figured' : 1
'files' : 1
'filter' : 1
'fine-grained' : 1
'finish' : 1
'first-class' : 1
'fixes' : 1
'flags' : 1
'flatten' : 1
'flexibility' : 1
'fluids' : 1
'fn' : 1
'fns' : 1
'foldable' : 1
'folding' : 1
'follow' : 1
'foo.a' : 1
'foo.prototype' : 1
'foo/bar' : 1
'for-in' : 1
'for-of/for-in' : 1
'forbid' : 1
'forces' : 1
'forking' : 1
'formal' : 1
'formatting' : 1
'former' : 1
'formulation' : 1
'freedom' : 1
'functional' : 1
'gain' : 1
'garbage' : 1
'gatherRawExports' : 1
'general-purpose' : 1
'generalize' : 1
'generate-exports' : 1
'generating' : 1
'generation' : 1
'generic' : 1
'getChecks' : 1
'getDefinition' : 1
'getFunctionCallParameterMap' : 1
'getLValue' : 1
'getNativeType' : 1
'getOptimizations' : 1
'getProcessor' : 1
'getProp' : 1
'getProperty' : 1
'getQualifiedOriginalName' : 1
'getReferenceName' : 1
'getString' : 1
'getType' : 1
'gets' : 1
'getter' : 1
'getter/setter' : 1
'getters/setters' : 1
'given' : 1
'globally' : 1
'going' : 1
'goktug' : 1
'goo' : 1
'goog.abstractMethod' : 1
'goog.bind' : 1
'goog.dom.DomHelper' : 1
'goog.functions.constant' : 1
'goog.global' : 1
'goog.reflect.sinkValue' : 1
'goog.string.Const.from' : 1
'goog.userAgent' : 1
'got' : 1
'gradually' : 1
'grain' : 1
'greater' : 1
'group' : 1
'groups' : 1
'guaranteed' : 1
'guarantees' : 1
'hacky' : 1
'happily' : 1
'harm' : 1
'harness' : 1
'hasSideEffects' : 1
'hashing' : 1
'health' : 1
'heap' : 1
'heeba' : 1
'hello' : 1
'helper' : 1
'helpers' : 1
'heterogeneous' : 1
'higher' : 1
'hoist' : 1
'http' : 1
'http://b/30943295' : 1
'https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html' : 1
'ideal' : 1
'ideally' : 1
'identifier' : 1
'identify' : 1
'ignoring' : 1
'illegal' : 1
'immediate' : 1
'immediately' : 1
'immuable' : 1
'immutable' : 1
'implementing' : 1
'implicit' : 1
'implicitly' : 1
'import' : 1
'impressions' : 1
'improvement' : 1
'in-detail' : 1
'in-memory' : 1
'inGoogScope' : 1
'inclusive/exclusive' : 1
'inconclusive' : 1
'incorrectly' : 1
'incremental' : 1
'individual' : 1
'individually' : 1
'induce' : 1
'inefficient' : 1
'inf' : 1
'inferConsts' : 1
'infers' : 1
'info.getLoadFlags' : 1
'init/initModules' : 1
'initial' : 1
'initializers' : 1
'initiate' : 1
'inject' : 1
'inlines' : 1
'inputsObj' : 1
'inside' : 1
'inspect' : 1
'inspected' : 1
'instanceof' : 1
'instantiate' : 1
'instantiation' : 1
'instatiation' : 1
'instrumented' : 1
'int' : 1
'intend' : 1
'intent' : 1
'interfer' : 1
'interning' : 1
'interprocedural' : 1
'intersection' : 1
'introduce' : 1
'introducing' : 1
'invalidation' : 1
'invariant' : 1
'investigate' : 1
'invoking' : 1
'isExternExportsEnabled' : 1
'isMovableDeclarationStatement' : 1
'isNumber' : 1
'isPrivate' : 1
'isPrivateAccessAllowed' : 1
'isPure' : 1
'isString' : 1
'isStructuralInterfacePrototype' : 1
'isSubtype' : 1
'isTypeVariable' : 1
'isUnknownObject' : 1
'isVarDeclaration' : 1
'isVarTypeBetter' : 1
'isWellKnownSymbol' : 1
'iterate' : 1
'iteration' : 1
'j' : 1
'job' : 1
'joined' : 1
'joining' : 1
'js' : 1
'jstype' : 1
'jstypecreatorfromjsdoc' : 1
'keeps' : 1
'key' : 1
'knew' : 1
'knownConstants' : 1
'knows' : 1
'la' : 1
'labels' : 1
'languageMode' : 1
'language_in' : 1
'larger' : 1
'lastSourcePosition' : 1
'latter' : 1
'leading' : 1
'leaking' : 1
'leaks' : 1
'leave' : 1
'left-hand-side' : 1
'lexer/parser' : 1
'lexical' : 1
'lhs' : 1
'libraries' : 1
'lifted' : 1
'lightweight' : 1
'likely' : 1
'limit' : 1
'limitation' : 1
'limited' : 1
'limits' : 1
'linear' : 1
'link' : 1
'listenable' : 1
'lists' : 1
'lit' : 1
'little' : 1
'loadFlags' : 1
'localization' : 1
'locals-tracking' : 1
'locations' : 1
'logger' : 1
'logging/warning/error' : 1
'logical' : 1
'look-ups' : 1
'looks' : 1
'looped' : 1
'lose' : 1
'low' : 1
'lower' : 1
'lvalue' : 1
'made' : 1
'magically' : 1
'main' : 1
'major' : 1
'majority' : 1
'mangling' : 1
'map' : 1
'markAndGetTypeOfPreanalyzedNode' : 1
'masked' : 1
'matchers' : 1
'matching' : 1
'mattloring@google.com' : 1
'maven' : 1
'max' : 1
'maxLine' : 1
'me' : 1
'mean' : 1
'meant' : 1
'mechanisms' : 1
'mem' : 1
'member' : 1
'members' : 1
'memorization' : 1
'messy' : 1
'migration' : 1
'mind' : 1
'mismatch' : 1
'mismatches' : 1
'mismatching' : 1
'missing-require' : 1
'missingRequire' : 1
'mistake' : 1
'misuse' : 1
'mlourenco' : 1
'modifies' : 1
'modifying' : 1
'movement' : 1
'moz@google.com' : 1
'multi-map' : 1
'multi-threads' : 1
'multiple-scan' : 1
'my' : 1
'n.isStringKey' : 1
'naively' : 1
'namesToTypes' : 1
'namespaced' : 1
'namespacing' : 1
'narrower' : 1
'natively' : 1
'natural' : 1
'near' : 1
'new.target' : 1
'newNodeInDom' : 1
'newer' : 1
'no-op' : 1
'node.isRoot' : 1
'nodesHaveSameControlFlow' : 1
'non-ES6' : 1
'non-JavaScript' : 1
'non-TTL' : 1
'non-closure' : 1
'non-compiler' : 1
'non-constructor' : 1
'non-function' : 1
'non-local' : 1
'non-namespace' : 1
'non-null' : 1
'non-obvious' : 1
'non-portability' : 1
'non-quoted' : 1
'non-record' : 1
'non-templatized' : 1
'non-transpiling' : 1
'non-type-checking' : 1
'none' : 1
'nonsense' : 1
'normal' : 1
'notion' : 1
'ns.num2' : 1
'ns.num2.prop' : 1
'nuke' : 1
'numbering' : 1
'numbers' : 1
'o/w' : 1
'obj' : 1
'objType.isBottom' : 1
'objType.isUnknownType' : 1
'object-literal' : 1
'object/array' : 1
'objects/classes' : 1
'objlit' : 1
'ochafik' : 1
'ochafik@google.com' : 1
'often' : 1
'okay' : 1
'older' : 1
'oldest' : 1
'open' : 1
'operations' : 1
'opinion' : 1
'opportunities' : 1
'optimizable' : 1
'optimizing' : 1
'orderable' : 1
'orphan' : 1
'ought' : 1
'out-edge' : 1
'outputs' : 1
'outputting' : 1
'overlap' : 1
'overly' : 1
'overview' : 1
'ownerType' : 1
'packages' : 1
'pain' : 1
'parallel' : 1
'parens' : 1
'parent.isExprResult' : 1
'parseIndependentOfCompilation' : 1
'partially' : 1
'particularly' : 1
'peace' : 1
'per' : 1
'per-class' : 1
'per-function' : 1
'performs' : 1
'perhaps' : 1
'peterhal' : 1
'phase' : 1
'picking' : 1
'pipeline' : 1
'placeholders' : 1
'plain-old' : 1
'plan' : 1
'plus' : 1
'pointer' : 1
'pointing' : 1
'points' : 1
'polyfill-existence' : 1
'polyfills' : 1
'positions' : 1
'positive' : 1
'possibly' : 1
'post' : 1
'practice' : 1
'pre' : 1
'pre/post' : 1
'precedents' : 1
'premise' : 1
'prerequisite' : 1
'presence' : 1
'presense' : 1
'pretty' : 1
'prevail' : 1
'prevents' : 1
'previously' : 1
'print' : 1
'printing' : 1
'prints' : 1
'priority' : 1
'probabaly' : 1
'problematic' : 1
'processing' : 1
'produces' : 1
'production' : 1
'program' : 1
'projects' : 1
'promote' : 1
'propagating' : 1
'propdef' : 1
'property-functions' : 1
'protoProps' : 1
'prove' : 1
'proven' : 1
'punctuation' : 1
'purely' : 1
'purity' : 1
'purpose' : 1
'put' : 1
'qualified' : 1
'questionable' : 1
'quite' : 1
'radokirov' : 1
'ran' : 1
'range' : 1
'rare' : 1
'rate' : 1
're-parsing' : 1
're-use' : 1
're-visited' : 1
'reachability' : 1
'readable' : 1
'reassign' : 1
'reassigned' : 1
'rebuilt' : 1
'recognize' : 1
'recognized' : 1
'recording' : 1
'recrawl' : 1
'recreate' : 1
'recurse' : 1
'recursion' : 1
'redeclaration' : 1
'redeclarations' : 1
'redefining' : 1
'reenable' : 1
'refactor' : 1
'referenceParentNames' : 1
'referenced' : 1
'referring' : 1
'reflect' : 1
'refresh' : 1
'refreshing' : 1
'regarding' : 1
'regardless' : 1
'regex' : 1
'regular' : 1
'reinventing' : 1
'reject' : 1
'rejects' : 1
'related' : 1
'relation' : 1
'relatively' : 1
'rely' : 1
'relying' : 1
'remaining' : 1
'remember' : 1
'removal' : 1
'removeNoOpStatements' : 1
'repeatedly' : 1
'replacement' : 1
'represent' : 1
'representing' : 1
'reprs' : 1
'requirement' : 1
'reserved' : 1
'reset' : 1
'resolve' : 1
'respect' : 1
'resultType' : 1
'retain' : 1
'return-type' : 1
'reusable' : 1
'reused' : 1
'reusing' : 1
'rework' : 1
'rewriteGeneratorBody' : 1
'rewriteGeneratorBodyWithVars' : 1
'rewrites' : 1
'rip' : 1
'robust' : 1
'root-in-scope' : 1
'runtime' : 1
'safely' : 1
'safety' : 1
'saw' : 1
'scalars' : 1
'scanning' : 1
'scattered' : 1
'scope-check' : 1
'scoped' : 1
'scripts/modules/functions' : 1
'self-referential' : 1
'semantic' : 1
'semi' : 1
'semicolons' : 1
'sequence' : 1
'serialized' : 1
'serializing' : 1
'series' : 1
'setUp' : 1
'setting' : 1
'shadow' : 1
'shadowed' : 1
'shared' : 1
'sharing' : 1
'short' : 1
'short-circuit' : 1
'shortcut' : 1
'shorter' : 1
'shorthand' : 1
'show' : 1
'showing' : 1
'shows' : 1
'siblings' : 1
'side-effected' : 1
'signal' : 1
'significantly' : 1
'silence' : 1
'silently' : 1
'simplicity' : 1
'simplified' : 1
'simplifying' : 1
'situation' : 1
'skip-list' : 1
'slightly' : 1
'slow' : 1
'sm' : 1
'small' : 1
'smaller' : 1
'smart' : 1
'smarten' : 1
'some/abs/path' : 1
'someday' : 1
'somehow' : 1
'sometimes' : 1
'sooner' : 1
'sourceName' : 1
'sourceURL' : 1
'spacing' : 1
'special-casing' : 1
'specialize' : 1
'specially' : 1
'specific' : 1
'specification' : 1
'spend' : 1
'split' : 1
'spreading' : 1
'stages' : 1
'started' : 1
'state' : 1
'statics' : 1
'stay' : 1
'step' : 1
'stephshi' : 1
'steps' : 1
'stms' : 1
'stopgap' : 1
'stopping' : 1
'storage' : 1
'storing' : 1
'str' : 1
'straight' : 1
'straighten' : 1
'strange' : 1
'stray' : 1
'strictMissingRequire' : 1
'strictly' : 1
'strictness' : 1
'string-enum' : 1
'strip' : 1
'stripping' : 1
'structures' : 1
'stuck' : 1
'stuff' : 1
'subset' : 1
'substitute' : 1
'substitution' : 1
'subtypes' : 1
'sufficiently' : 1
'suggests' : 1
'suite' : 1
'summary' : 1
'super.x' : 1
'supports' : 1
'supposed' : 1
'swallow' : 1
'swap' : 1
'switched' : 1
'switching' : 1
'symmetry' : 1
'synthetic' : 1
't.getScope' : 1
'tag' : 1
'taints' : 1
'takes' : 1
'teaching' : 1
'technically' : 1
'temps' : 1
'testBadPropertyOnInterface1' : 1
'testBadPropertyOnInterface2' : 1
'testBadPropertyOnInterface3' : 1
'testBadPropertyOnInterface4' : 1
'testCallSiteInteraction' : 1
'testCallSiteInteraction_constructors' : 1
'testCanInlineReferenceToFunction13' : 1
'testCanInlineReferenceToFunctionInExpression11' : 1
'testCanInlineReferenceToFunctionInExpression15' : 1
'testCanInlineReferenceToFunctionInExpression20' : 1
'testComparison1' : 1
'testDependencies1b' : 1
'testDependencies1c' : 1
'testDependencies2' : 1
'testDependencies2b' : 1
'testDependencies2c' : 1
'testDoNotOptimizeJSCompiler_ObjectPropertyString' : 1
'testDoNotOptimizeSetters' : 1
'testErrorMismatchingPropertyOnInterface1' : 1
'testErrorMismatchingPropertyOnInterface2' : 1
'testErrorMismatchingPropertyOnInterface3' : 1
'testFunctionArgRemovalCausingInconsistency' : 1
'testInlineConstantAlias' : 1
'testInlineReferenceInExpression10' : 1
'testInlineWithinCalls2' : 1
'testLocalVarReferencesGlobalVar2' : 1
'testLocalizedSideEffects11' : 1
'testNestedAssign1' : 1
'testNestedAssign2' : 1
'testNestedAssign3' : 1
'testRemoveSingletonClass1' : 1
'testRemoveUnusedVarsPossibleNpeCase' : 1
'testSame' : 1
'testSameEs6' : 1
'testUnusedAssign8' : 1
'testUnusedAssign9' : 1
'testUnusedPropAssign1' : 1
'testUnusedPropAssign3b' : 1
'testUnusedPropAssign4' : 1
'testUnusedPropAssign5' : 1
'testUnusedPropAssign6' : 1
'testUnusedPropAssign7c' : 1
'testUsedPropAssign1' : 1
'testUsedPropAssign2' : 1
'testUsedPropAssign3' : 1
'testUsedPropAssign4' : 1
'testUsedPropAssign5' : 1
'testUsedPropAssign6' : 1
'testUsedPropAssign7' : 1
'testWarnDataPropertyOnInterface1' : 1
'testWarnUnannotatedPropertyOnInterface1' : 1
'testWarnUnannotatedPropertyOnInterface2' : 1
'testWarningOnInterfacePrototype' : 1
'tested' : 1
'thatType.isNoObjectType' : 1
'theory' : 1
'thing' : 1
'third' : 1
'third_party' : 1
'this.nominalType' : 1
'this.primitiveType' : 1
'threads' : 1
'three' : 1
'thus' : 1
'tied' : 1
'ties' : 1
'tightly' : 1
'timers' : 1
'times' : 1
'timing' : 1
'toString' : 1
'today' : 1
'tool' : 1
'trades' : 1
'transformation' : 1
'transformed' : 1
'transpiled' : 1
'traversals' : 1
'traversing' : 1
'treatment' : 1
'treats' : 1
'tricky' : 1
'tries' : 1
'triggering' : 1
'trouble' : 1
'try/catch' : 1
'trySimpleUnusedResult' : 1
'trying' : 1
'tuple' : 1
'turn' : 1
'turned' : 1
'turning' : 1
'turns' : 1
'two-way' : 1
'type-based' : 1
'type-check' : 1
'typecast' : 1
'typechecking' : 1
'typed' : 1
'typesIndexedByProperty' : 1
'u.T.f' : 1
'u.T.prototype' : 1
'u.T.x' : 1
'unaffected' : 1
'unchanged' : 1
'unclear' : 1
'uncommon' : 1
'unconditionally' : 1
'undeclared' : 1
'under' : 1
'undesirable' : 1
'unfold' : 1
'unfulfilled' : 1
'unification' : 1
'unified' : 1
'unify' : 1
'unions' : 1
'uniquely' : 1
'uniquified' : 1
'unittest' : 1
'unkown' : 1
'unless' : 1
'unlinking' : 1
'unmodified' : 1
'unnamed' : 1
'unorderable' : 1
'unpleasant' : 1
'unquoted' : 1
'unrelated' : 1
'unrestricted' : 1
'unsatisfying' : 1
'unsuitable' : 1
'unzipped' : 1
'updateA' : 1
'upgraded' : 1
'use-case' : 1
'useSites' : 1
'user-friendly' : 1
'usually' : 1
'utility' : 1
'utilization/profiling' : 1
'validity' : 1
'varType.restrictByNotNullOrUndefined' : 1
'variance' : 1
'variants' : 1
'various' : 1
'vector' : 1
'verbosity' : 1
'versions' : 1
'viable' : 1
'view' : 1
'violation' : 1
'visibility' : 1
'visited' : 1
'vitalyp' : 1
'vs.' : 1
'wait' : 1
'wastes' : 1
'watch' : 1
'well-known' : 1
'while' : 1
'while-loops' : 1
'wildcards' : 1
'win' : 1
'wipe' : 1
'with/without' : 1
'withLoose' : 1
'withdraw' : 1
'workaround' : 1
'world.util.Animal' : 1
'wrapper' : 1
'wrapping' : 1
'wraps' : 1
'writes' : 1
'writing' : 1
'written' : 1
'x.ChildClass' : 1
'x.b' : 1
'x.innerHTML' : 1
'y.' : 1
'zero' : 1
'zipped' : 1
'#traverseInnerNode' : 2
''ve' : 2
'+1091,7' : 2
'+141,18' : 2
'+1480,6' : 2
'+1536,9' : 2
'+170,7' : 2
'+178,13' : 2
'+755,7' : 2
'-1083,7' : 2
'-140,10' : 2
'-1472,7' : 2
'-1529,7' : 2
'-161,10' : 2
'-172,10' : 2
'-755,7' : 2
'.143' : 2
'1fbfa5f' : 2
'491e56e' : 2
'7' : 2
'8' : 2
'<number>' : 2
'@GwtIncompatible' : 2
'@export' : 2
'@final' : 2
'@implements' : 2
'@typedef' : 2
'Actually' : 2
'Add/remove' : 2
'After' : 2
'An' : 2
'Ant' : 2
'As-is' : 2
'BehaviorDefinitions' : 2
'CAST' : 2
'CFG' : 2
'CL' : 2
'CONSTANT_VAR' : 2
'Cake' : 2
'Calling' : 2
'CheckAccessControls' : 2
'CheckMissingAndExtraRequires' : 2
'CheckUnreachableCode' : 2
'Clean' : 2
'Closure' : 2
'CompilerOptions' : 2
'Create' : 2
'CrossModuleCodeMotion' : 2
'Deegan' : 2
'DefinitionUseSiteFinder' : 2
'ES3' : 2
'Enable' : 2
'Es6' : 2
'Es6SyntacticScopeCreator' : 2
'Even' : 2
'Eventually' : 2
'Every' : 2
'FILE' : 2
'FOR-IN' : 2
'FREE_CALL' : 2
'Foo.prototype.bar' : 2
'GTI' : 2
'Generator' : 2
'Generator.return' : 2
'Get' : 2
'Have' : 2
'High' : 2
'Ideally' : 2
'Instead' : 2
'Its' : 2
'JSDocInfoParser' : 2
'JSErrors' : 2
'John' : 2
'LHS' : 2
'Lenz' : 2
'Liveness' : 2
'Look' : 2
'Low' : 2
'Mark' : 2
'Matcher' : 2
'Mid' : 2
'Mode.SINGLE' : 2
'More' : 2
'NEW' : 2
'Needs' : 2
'NodeTr' : 2
'Normalize' : 2
'Not' : 2
'Note' : 2
'Now' : 2
'O' : 2
'OK' : 2
'OR' : 2
'PARAM_LIST' : 2
'Propagate' : 2
'PureFunctionIdentifier' : 2
'ROOT' : 2
'Right' : 2
'SIDE_EFFECT_PREDICATE' : 2
'STRING' : 2
'Scope' : 2
'Serializable' : 2
'SourceFile' : 2
'Split' : 2
'T.prototype.x' : 2
'THIS' : 2
'TagName' : 2
'Template' : 2
'That' : 2
'Thomas' : 2
'Truth' : 2
'TypeCheck' : 2
'TypeI' : 2
'Unfortunately' : 2
'Unless' : 2
'VAR' : 2
'Value' : 2
'Verify' : 2
'Very' : 2
'Why' : 2
'Width' : 2
'WizPass' : 2
'Would' : 2
'XXX' : 2
'YYY' : 2
'Zero' : 2
'absolute' : 2
'accessed' : 2
'accessors' : 2
'accuracy' : 2
'across' : 2
'adds' : 2
'aggressive' : 2
'aliases' : 2
'alternate' : 2
'anatol' : 2
'and/or' : 2
'appear' : 2
'arrow' : 2
'asserting' : 2
'assumes' : 2
'assumption' : 2
'automatically' : 2
'avoids' : 2
'awkward' : 2
'b426cb9' : 2
'bail' : 2
'behind' : 2
'bellashim' : 2
'bits' : 2
'block-scoped' : 2
'bodies' : 2
'body' : 2
'boolean' : 2
'cache' : 2
'calculation' : 2
'callbacks' : 2
'callers' : 2
'careful' : 2
'caused' : 2
'causes' : 2
'certain' : 2
'changing' : 2
'characters' : 2
'charno' : 2
'checkState' : 2
'children' : 2
'cleaned' : 2
'closure' : 2
'collapsed' : 2
'column' : 2
'combine' : 2
'combined' : 2
'comma' : 2
'completely' : 2
'compute' : 2
'confirms' : 2
'considered' : 2
'console.log' : 2
'construct' : 2
'control' : 2
'correctly' : 2
'correspond' : 2
'cover' : 2
'coverage' : 2
'created' : 2
'creator' : 2
'crossModuleCodeMotion' : 2
'custom' : 2
'data' : 2
'decls' : 2
'define' : 2
'defines' : 2
'defining' : 2
'deleted' : 2
'depend' : 2
'dependency' : 2
'dependent' : 2
'deprecate' : 2
'deprecated' : 2
'despite' : 2
'destructuring' : 2
'detected' : 2
'difficult' : 2
'disallow' : 2
'doc' : 2
'e935' : 2
'early' : 2
'easier' : 2
'easy' : 2
'edges' : 2
'elemental2' : 2
'eliminating' : 2
'elsewhere' : 2
'ends' : 2
'enforce' : 2
'enum' : 2
'es6-impl' : 2
'essentially' : 2
'etc' : 2
'evaluate' : 2
'except' : 2
'exists' : 2
'expectedInfimum' : 2
'expectedSupremum' : 2
'explicitly' : 2
'exported' : 2
'fact' : 2
'far' : 2
'fashion' : 2
'favor' : 2
'feature' : 2
'features' : 2
'few' : 2
'fine' : 2
'finished' : 2
'foo.call' : 2
'for-loop' : 2
'forAnnotations' : 2
'force' : 2
'friends' : 2
'further' : 2
'gather' : 2
'generate' : 2
'generator' : 2
'getDirectSubTypes' : 2
'getProvides' : 2
'getScope' : 2
'goes' : 2
'goog.forwardDeclare' : 2
'goog.inherits' : 2
'goog.nullFunction' : 2
'goog.requires' : 2
'graphs' : 2
'greatly' : 2
'h' : 2
'happen' : 2
'harder' : 2
'header' : 2
'helperInlineReferenceToFunction' : 2
'helpful' : 2
'heuristic' : 2
'hierarchy' : 2
'hoistable' : 2
'hot' : 2
'hot-swap' : 2
'http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return' : 2
'id' : 2
'identifiers' : 2
'ids' : 2
'iff' : 2
'ill-defined' : 2
'important' : 2
'improperly' : 2
'included' : 2
'infer' : 2
'inferred' : 2
'infinite' : 2
'info' : 2
'injected' : 2
'inliner' : 2
'inputId' : 2
'instances' : 2
'integers' : 2
'intended' : 2
'internal' : 2
'invalidate' : 2
'invalidated' : 2
'invalidates' : 2
'invocations' : 2
'isEquivalentTo' : 2
'issues' : 2
'iterations' : 2
'jakubvrana' : 2
'java' : 2
'johnlenz@google.com' : 2
'jsdoc' : 2
'keeping' : 2
'kept' : 2
'kevinoconnor' : 2
'kind' : 2
'kinds' : 2
'kushal' : 2
'label' : 2
'large' : 2
'latest' : 2
'legacy' : 2
'level' : 2
'levels' : 2
'lineno' : 2
'lines' : 2
'liveness' : 2
'locals' : 2
'long' : 2
'looked' : 2
'lookup' : 2
'loops' : 2
'maintain' : 2
'mapped' : 2
'mappings' : 2
'marked' : 2
'masks' : 2
'matchedTemplate.getGoogRequiresToRemove' : 2
'matchedTemplate.matcher.getTemplateNodeToMatchMap' : 2
'meaningful' : 2
'means' : 2
'meet' : 2
'merged' : 2
'merging' : 2
'message' : 2
'messages' : 2
'migrate' : 2
'minimize' : 2
'misses' : 2
'misuses' : 2
'months' : 2
'mostly' : 2
'mutation' : 2
'needing' : 2
'newNode' : 2
'newNode.getStaticSourceFile' : 2
'nicer' : 2
'nick' : 2
'nnaze' : 2
'non-conflicting' : 2
'non-global' : 2
'non-side-effect' : 2
'non-strict' : 2
'normalized' : 2
'ns.f.prop' : 2
'nullable' : 2
'numeric' : 2
'objs' : 2
'odd' : 2
'ops' : 2
'optimized' : 2
'optional' : 2
'options' : 2
'otherwise' : 2
'ourselves' : 2
'outcome' : 2
'overhead' : 2
'overkill' : 2
'override' : 2
'package-private' : 2
'param' : 2
'parentheses' : 2
'parts' : 2
'passed' : 2
'paths' : 2
'perform' : 2
'play' : 2
'polymorphic' : 2
'precise' : 2
'prefix' : 2
'preprocessor' : 2
'preventing' : 2
'primatives' : 2
'produce' : 2
'propagate' : 2
'propagation' : 2
'proper' : 2
'protect' : 2
'protected' : 2
'provide' : 2
'provides' : 2
'pull' : 2
'quick' : 2
'raw' : 2
're-enable' : 2
'reach' : 2
'read-only' : 2
'reasons' : 2
'reduce' : 2
'refactoring' : 2
'relevant' : 2
'remain' : 2
'reports' : 2
'representation' : 2
'represented' : 2
'reserve' : 2
'resolves' : 2
'resolving' : 2
'rest' : 2
'restricted' : 2
'restructure' : 2
'resulting' : 2
'results' : 2
'retained' : 2
'returning' : 2
'rewritten' : 2
'rules' : 2
'run-time' : 2
'runner' : 2
's' : 2
'safer' : 2
'say' : 2
'search' : 2
'semantics' : 2
'sensitive' : 2
'service' : 2
'setClosurePass' : 2
'several' : 2
'short-circuiting' : 2
'side-effects' : 2
'similiar' : 2
'simple' : 2
'simplify' : 2
'solution' : 2
'solved' : 2
'someone' : 2
'somewhere' : 2
'sophisticated' : 2
'sort' : 2
'sourcemap' : 2
'spec' : 2
'specializing' : 2
'specify' : 2
'spurious' : 2
'stable' : 2
'stack' : 2
'statement' : 2
'static' : 2
'stored' : 2
'stores' : 2
'strategy' : 2
'stub' : 2
'style' : 2
'subclass' : 2
'substring' : 2
'subtree' : 2
'super-source' : 2
'supported' : 2
'supporting' : 2
'suppress' : 2
'suppression' : 2
'suppressions' : 2
'target' : 2
'tdeegan@google.com' : 2
'templates' : 2
'templatized' : 2
'temporary' : 2
'testing' : 2
'text' : 2
'think' : 2
'thread' : 2
'toNonNullAnnotationString' : 2
'totally' : 2
'transformNode' : 2
'traversed' : 2
'tylerg' : 2
'typing' : 2
'uncomment' : 2
'understand' : 2
'undirected' : 2
'unifying' : 2
'unique' : 2
'unlikely' : 2
'unresolved' : 2
'until' : 2
'untyped' : 2
'unused' : 2
'updated' : 2
'updating' : 2
'upgrade' : 2
'usage' : 2
'users' : 2
'util' : 2
'var.getSourceFile' : 2
'var.isExtern' : 2
'varargs' : 2
'violations' : 2
'visit' : 2
'whenever' : 2
'whole' : 2
'worth' : 2
'wrong' : 2
'x.a' : 2
'x.bar' : 2
'yield' : 2
'you' : 2
'%' : 3
''m' : 3
',4' : 3
'3,4' : 3
'<' : 3
'>' : 3
'Avoid' : 3
'CAN' : 3
'Class' : 3
'Compiler' : 3
'DefaultPassConfig' : 3
'Discover' : 3
'EMPTY' : 3
'ES4' : 3
'Either' : 3
'Function' : 3
'GETELEM' : 3
'IObject' : 3
'Is' : 3
'JSDoc' : 3
'JSTypeRegistry' : 3
'NaN' : 3
'Namespace' : 3
'Number' : 3
'Provide' : 3
'RHS' : 3
'Reverse' : 3
'Rewrite' : 3
'So' : 3
'Then' : 3
'To' : 3
'TypeInference' : 3
'UNKNOWN_TYPE' : 3
'Warn' : 3
'What' : 3
'abstract' : 3
'account' : 3
'algorithm' : 3
'aliasing' : 3
'assertions' : 3
'assigned' : 3
'attach' : 3
'b/28869281' : 3
'backwards' : 3
'base' : 3
'based' : 3
'belong' : 3
'blocks' : 3
'brndn' : 3
'build' : 3
'cast' : 3
'cause' : 3
'chain' : 3
'character' : 3
'clinit' : 3
'coding' : 3
'collapse' : 3
'comment' : 3
'commented' : 3
'compatibility' : 3
'complex' : 3
'complicated' : 3
'consistent' : 3
'consts' : 3
'copy' : 3
'cost' : 3
'dankurka' : 3
'decide' : 3
'declare' : 3
'delete' : 3
'determining' : 3
'difference' : 3
'differently' : 3
'direct' : 3
'distinguish' : 3
'duplicate' : 3
'edge' : 3
'effectively' : 3
'eg' : 3
'empty' : 3
'enough' : 3
'ensure' : 3
'entered' : 3
'entire' : 3
'enums' : 3
'envs' : 3
'escape' : 3
'everyone' : 3
'exactly' : 3
'extra' : 3
'filename' : 3
'fold' : 3
'follow-up' : 3
'followed' : 3
'forward' : 3
'fun' : 3
'generics' : 3
'generous' : 3
'getters' : 3
'go' : 3
'goog.scope' : 3
'hard' : 3
'help' : 3
'i.e.' : 3
'improve' : 3
'includes' : 3
'incorrect' : 3
'inference' : 3
'inherited' : 3
'instrument' : 3
'instrumentation' : 3
'invalidating' : 3
'jsdocs' : 3
'language' : 3
'length' : 3
'lets' : 3
'library' : 3
'line' : 3
'live' : 3
'lookups' : 3
'making' : 3
'maps' : 3
'marking' : 3
'mattloring' : 3
'mechanism' : 3
'michaelthomas' : 3
'modified' : 3
'modify' : 3
'naming' : 3
'nothing' : 3
'off' : 3
'operator' : 3
'optimizations' : 3
'outside' : 3
'particular' : 3
'passing' : 3
'people' : 3
'performance' : 3
'places' : 3
'position' : 3
'preserve' : 3
'preserved' : 3
'previous' : 3
'primitive' : 3
'problems' : 3
'processed' : 3
'putting' : 3
'read' : 3
'real' : 3
'recursive' : 3
'redundant' : 3
'refer' : 3
'registry' : 3
'relative' : 3
'renamed' : 3
'reported' : 3
'required' : 3
'returns' : 3
'reuse' : 3
'rewriting' : 3
'root' : 3
'running' : 3
'safe' : 3
'scoping' : 3
'seems' : 3
'sets' : 3
'setter' : 3
'share' : 3
'signature' : 3
'site' : 3
'sites' : 3
'skip' : 3
'skipTranspilationAndCrash' : 3
'somewhat' : 3
'specialization' : 3
'stop' : 3
'stream' : 3
'stricter' : 3
'strings' : 3
'structure' : 3
'summaries' : 3
'table' : 3
'take' : 3
'tighten' : 3
'toAnnotationString' : 3
'token' : 3
'tomnguyen' : 3
'treat' : 3
'tree' : 3
'typecheck' : 3
'unnecessary' : 3
'urls' : 3
'validate' : 3
'w/out' : 3
'weird' : 3
'were' : 3
'within' : 3
'100644' : 4
'1554' : 4
'@code' : 4
'@record' : 4
'All' : 4
'Animal' : 4
'C' : 4
'ChadKillingsworth' : 4
'CollapseProperties' : 4
'Ctor1.call' : 4
'Decide' : 4
'However' : 4
'MyEnum' : 4
'NAME' : 4
'NameAnalyzer' : 4
'Named' : 4
'Only' : 4
'ProcessClosurePrimitives' : 4
'Property' : 4
'Proxy' : 4
'Replace' : 4
'Some' : 4
'Try' : 4
'Update' : 4
'a/src/com/google/javascript/jscomp/CompilerOptions.java' : 4
'a/src/com/google/javascript/refactoring/RefasterJsScanner.java' : 4
'added' : 4
'again' : 4
'alias' : 4
'allowed' : 4
'allowing' : 4
'another' : 4
'around' : 4
'asdf' : 4
'assertTypeEquals' : 4
'assume' : 4
'b/src/com/google/javascript/jscomp/CompilerOptions.java' : 4
'b/src/com/google/javascript/refactoring/RefasterJsScanner.java' : 4
'bad' : 4
'best' : 4
'breaks' : 4
'bunch' : 4
'callback' : 4
'care' : 4
'changes' : 4
'clients' : 4
'comes' : 4
'comparison' : 4
'conservative' : 4
'context' : 4
'creation' : 4
'critical' : 4
'dead' : 4
'defined' : 4
'diff' : 4
'due' : 4
'effects' : 4
'either' : 4
'every' : 4
'everywhere' : 4
'exact' : 4
'exception' : 4
'explicit' : 4
'extern' : 4
'fail' : 4
'found' : 4
'full' : 4
'fully' : 4
'functionality' : 4
'g.a' : 4
'generally' : 4
'git' : 4
'goog.provide' : 4
'greatest' : 4
'guava' : 4
'hack' : 4
'hash' : 4
'having' : 4
'helperCanInlineReferenceToFunction' : 4
'ignore' : 4
'implemented' : 4
'include' : 4
'increase' : 4
'inheritance' : 4
'inlinable' : 4
'interfaces' : 4
'joeltine' : 4
'keys' : 4
'last' : 4
'left' : 4
'log' : 4
'loose' : 4
'lot' : 4
'martinprobst' : 4
'matchedTemplate.afterTemplate.getLastChild' : 4
'matchedTemplate.getGoogRequiresToAdd' : 4
'matter' : 4
'memory' : 4
'mixed' : 4
'modules' : 4
'moving' : 4
'multistage' : 4
'needed' : 4
'next' : 4
'normalization' : 4
'ns.f' : 4
'ones' : 4
'original' : 4
'package' : 4
'parsing' : 4
'peephole' : 4
'persistent' : 4
'point' : 4
'precondition' : 4
'prevent' : 4
'prop' : 4
'provided' : 4
'quoted' : 4
'reason' : 4
'removes' : 4
'rename' : 4
'replaced' : 4
'replacements' : 4
'rewrite' : 4
'rid' : 4
'scheme' : 4
'script' : 4
'setters' : 4
'simarora' : 4
'similar' : 4
'single' : 4
'store' : 4
'stubs' : 4
'subtype' : 4
'suffix' : 4
'super' : 4
'supertype' : 4
'switch' : 4
'targetIsNonLegacyGoogModule' : 4
'templated' : 4
'terrible' : 4
'things' : 4
'those' : 4
'throw' : 4
'together' : 4
'transformer' : 4
'typeI' : 4
'typeJ' : 4
'typedefs' : 4
'u.T.prototype.x' : 4
'undefined' : 4
'understands' : 4
'update' : 4
'us' : 4
'useless' : 4
'validation' : 4
'vars' : 4
'verify' : 4
'very' : 4
'via' : 4
'wo' : 4
'works' : 4
'worthy' : 4
'x.foo' : 4
'yet' : 4
'@this' : 5
'API' : 5
'Array' : 5
'JS' : 5
'JSCompiler_ObjectPropertyString' : 5
'JSCompiler_renameProperty' : 5
'JSDocInfo' : 5
'NodeUtil' : 5
'Once' : 5
'Serialize' : 5
'a.b.c' : 5
'additional' : 5
'analyze' : 5
'apply' : 5
'assignments' : 5
'clear' : 5
'common' : 5
'compatible' : 5
'constants' : 5
'contain' : 5
'contains' : 5
'convention' : 5
'declared' : 5
'default' : 5
'deferred' : 5
'did' : 5
'different' : 5
'directly' : 5
'during' : 5
'effect' : 5
'errors' : 5
'everything' : 5
'example' : 5
'expected' : 5
'expensive' : 5
'expressions' : 5
'extended' : 5
'flag' : 5
'future' : 5
'generated' : 5
'gone' : 5
'good' : 5
'halting' : 5
'implement' : 5
'indicates' : 5
'inlined' : 5
'inlining' : 5
'inner' : 5
'itself' : 5
'known' : 5
'let' : 5
'location' : 5
'longer' : 5
'loop' : 5
'mark' : 5
'matches' : 5
'moved' : 5
'normalize' : 5
'outer' : 5
'private' : 5
'problem' : 5
'record' : 5
'replace' : 5
'report' : 5
'requires' : 5
'restrict' : 5
'simranarora' : 5
'size' : 5
'symbols' : 5
'through' : 5
'tracking' : 5
'traversal' : 5
'traverse' : 5
'ways' : 5
'whose' : 5
'window' : 5
'@extends' : 6
'Allow' : 6
'Also' : 6
'As' : 6
'ClosureRewriteModule' : 6
'Correct' : 6
'Ctor1' : 6
'Delete' : 6
'FUNCTION' : 6
'Find' : 6
'JSCompiler_inline_result' : 6
'LINE_JOINER' : 6
'Object' : 6
'RefasterJsScanner' : 6
'Scanner' : 6
'Switch' : 6
'These' : 6
'able' : 6
'actual' : 6
'actually' : 6
'anonymous' : 6
'available' : 6
'back' : 6
'been' : 6
'branch' : 6
'building' : 6
'called' : 6
'const' : 6
'determine' : 6
'down' : 6
'drop' : 6
'each' : 6
'else' : 6
'etc.' : 6
'following' : 6
'graph' : 6
'happens' : 6
'improved' : 6
'inherits' : 6
'introduced' : 6
'issue' : 6
'makes' : 6
'match' : 6
'ns' : 6
'old' : 6
'optimize' : 6
'over' : 6
'parent' : 6
'parser' : 6
'path' : 6
'place' : 6
'preserveSugar' : 6
'process' : 6
'rather' : 6
'register' : 6
'resolution' : 6
'restriction' : 6
'save' : 6
'simply' : 6
'smarter' : 6
'something' : 6
'statements' : 6
'system' : 6
'their' : 6
'transpilation' : 6
'typeCheck' : 6
'uses' : 6
'was' : 6
'z' : 6
'#' : 7
''d' : 7
''ll' : 7
'5' : 7
'@author' : 7
'@const' : 7
'@template' : 7
'ES5' : 7
'GWT' : 7
'Rename' : 7
'Revisit' : 7
'String' : 7
'_' : 7
'below' : 7
'bit' : 7
'block' : 7
'bug' : 7
'changed' : 7
'definition' : 7
'detached' : 7
'detection' : 7
'doing' : 7
'done' : 7
'enable' : 7
'end' : 7
'file' : 7
'flow' : 7
'general' : 7
'give' : 7
'goog' : 7
'input' : 7
'jlklein' : 7
'least' : 7
'list' : 7
'literal' : 7
'looking' : 7
'many' : 7
'module' : 7
'move' : 7
'much' : 7
'namespace' : 7
'namespaces' : 7
'our' : 7
'parse' : 7
'renaming' : 7
'resolved' : 7
'revisit' : 7
'sense' : 7
'set' : 7
'source' : 7
'symbol' : 7
'though' : 7
'u.T' : 7
'well' : 7
'without' : 7
'==' : 8
'@return' : 8
'@type' : 8
'Change' : 8
'Check' : 8
'Figure' : 8
'Foo' : 8
'For' : 8
'HotSwapCompilerPass' : 8
'NodeTraversal' : 8
'There' : 8
'argument' : 8
'away' : 8
'bangert' : 8
'both' : 8
'break' : 8
'ca' : 8
'checker' : 8
'checking' : 8
'create' : 8
'creating' : 8
'e' : 8
'e.g.' : 8
'even' : 8
'handling' : 8
'implementation' : 8
'inFunction' : 8
'index' : 8
'invalid' : 8
'jscomp' : 8
'later' : 8
'less' : 8
'merge' : 8
'named' : 8
'never' : 8
'own' : 8
'parameter' : 8
'props' : 8
'prototype' : 8
'separate' : 8
'stalcup' : 8
'tdeegan' : 8
'try' : 8
'union' : 8
'unit' : 8
'values' : 8
'version' : 8
'2' : 9
'@constructor' : 9
'@param' : 9
'B' : 9
'But' : 9
'Can' : 9
'Currently' : 9
'Do' : 9
'Investigate' : 9
'OTI' : 9
'Re-enable' : 9
'When' : 9
'a.b' : 9
'analysis' : 9
'aravindpg' : 9
'bar' : 9
'behavior' : 9
'constant' : 9
'declaration' : 9
'declarations' : 9
'first' : 9
'fixed' : 9
'handled' : 9
'join' : 9
'lpino' : 9
'nice' : 9
'optimization' : 9
'order' : 9
'part' : 9
'references' : 9
'right' : 9
'side' : 9
'start' : 9
'strict' : 9
'such' : 9
'unknown' : 9
'useful' : 9
'whether' : 9
'@nosideeffects' : 10
'Ctor2' : 10
'Maybe' : 10
'See' : 10
'Should' : 10
'adding' : 10
'always' : 10
'arguments' : 10
'between' : 10
'classes' : 10
'convert' : 10
'dcc' : 10
'detect' : 10
'externs' : 10
'find' : 10
'g' : 10
'inline' : 10
'instance' : 10
'keep' : 10
'know' : 10
'look' : 10
'missing' : 10
'most' : 10
'option' : 10
'properly' : 10
'run' : 10
'runs' : 10
'see' : 10
'template' : 10
'variable' : 10
'warnings' : 10
'--' : 11
'-LSB-' : 11
'-RSB-' : 11
'@interface' : 11
'A' : 11
'CompilerTestCase' : 11
'Move' : 11
'Node' : 11
'RemoveUnusedVarsTest' : 11
'T' : 11
'already' : 11
'assignment' : 11
'avoid' : 11
'bashir' : 11
'compilation' : 11
'correct' : 11
'current' : 11
'existing' : 11
'false' : 11
'field' : 11
'goog.require' : 11
'i' : 11
'its' : 11
'may' : 11
'maybe' : 11
'must' : 11
'result' : 11
'too' : 11
'track' : 11
'valid' : 11
'variables' : 11
'...' : 12
'@link' : 12
'Exception' : 12
'Implement' : 12
'Use' : 12
'allow' : 12
'constructor' : 12
'implements' : 12
'needs' : 12
'reference' : 12
'removing' : 12
'special' : 12
'sure' : 12
'testTypes' : 12
'throws' : 12
'work' : 12
'Fix' : 13
'In' : 13
'before' : 13
'necessary' : 13
'objects' : 13
'parameters' : 13
'really' : 13
'require' : 13
'rluble' : 13
''re' : 14
'0' : 14
'1,2' : 14
'Handle' : 14
'being' : 14
'catch' : 14
'checks' : 14
'names' : 14
'output' : 14
'possible' : 14
'same' : 14
'scopes' : 14
'side-effect' : 14
'since' : 14
'still' : 14
'syntax' : 14
'than' : 14
'NTI' : 15
'also' : 15
'annotation' : 15
'because' : 15
'calls' : 15
'free' : 15
'information' : 15
'interface' : 15
'literals' : 15
'local' : 15
'multiple' : 15
'two' : 15
'where' : 15
'why' : 15
'Support' : 16
'd' : 16
'has' : 16
'how' : 16
'methods' : 16
'<p>' : 17
'I' : 17
'alert' : 17
'annotations' : 17
'consider' : 17
'expression' : 17
'f' : 17
'mode' : 17
'nodes' : 17
'probably' : 17
'removed' : 17
'ES6' : 18
'definitions' : 18
'logic' : 18
'one' : 18
'time' : 18
'value' : 18
'3' : 19
'extends' : 19
'might' : 19
'mknichel' : 19
'passes' : 19
'them' : 19
'what' : 19
'at' : 20
'bradfordcsmith' : 20
'now' : 20
'property' : 20
'tests' : 20
'no' : 21
'string' : 21
'used' : 21
'using' : 21
'way' : 21
'-' : 22
'Consider' : 22
'cases' : 22
'compiler' : 22
'just' : 22
'method' : 22
'other' : 22
'some' : 22
'If' : 23
'get' : 23
'then' : 23
'$' : 24
'\' : 24
'n' : 24
'number' : 24
'up' : 24
'any' : 25
'change' : 25
'node' : 25
'want' : 25
'y' : 25
'!' : 26
'add' : 26
'after' : 26
'error' : 26
'final' : 26
'global' : 26
'new' : 26
'true' : 26
'Make' : 27
'foo' : 27
'like' : 27
'null' : 27
'they' : 27
'&' : 28
'better' : 28
'currently' : 28
'name' : 28
'warn' : 28
'|' : 28
'AST' : 29
'It' : 29
'about' : 29
'fix' : 29
'handle' : 29
'blickly' : 30
'c' : 30
'will' : 30
'from' : 32
'out' : 32
'properties' : 32
'warning' : 32
'call' : 33
'could' : 33
'instead' : 34
'into' : 34
'once' : 34
'there' : 34
'Remove' : 35
'functions' : 35
'object' : 35
'support' : 35
'would' : 35
'Add' : 36
'does' : 37
'moz' : 37
'only' : 37
'1' : 38
'make' : 38
'The' : 40
'which' : 40
'use' : 41
'case' : 42
'scope' : 42
'these' : 42
'check' : 43
'more' : 43
'by' : 44
'on' : 44
'code' : 45
'types' : 46
''s' : 47
'have' : 47
'**' : 49
'class' : 49
'or' : 50
'TODO' : 51
'remove' : 53
'sdh' : 53
'void' : 53
'need' : 54
'when' : 55
'@@' : 56
'return' : 56
'all' : 57
''' : 58
'`' : 58
'an' : 60
'*' : 62
'but' : 63
'so' : 64
'pass' : 66
'nicksantos' : 70
'?' : 72
'test' : 73
'do' : 74
'public' : 75
'as' : 76
'here' : 77
'x' : 80
'We' : 81
'tbreisacher' : 81
'dimvar' : 83
'can' : 87
'b' : 88
'with' : 91
'var' : 93
'This' : 96
'are' : 101
'n't' : 103
'not' : 103
'type' : 109
'+' : 114
'user' : 117
'if' : 121
'it' : 149
'should' : 158
'function' : 163
'=' : 164
'that' : 166
'/' : 184
'in' : 199
'for' : 208
'``' : 211
'and' : 215
'be' : 218
'johnlenz' : 224
'of' : 231
';' : 256
'we' : 259
'-RCB-' : 263
'is' : 277
'-LCB-' : 293
'a' : 372
'''' : 373
'this' : 411
'to' : 470
',' : 565
'the' : 624
':' : 930
'.' : 1026
'-RRB-' : 1363
'-LRB-' : 1435
