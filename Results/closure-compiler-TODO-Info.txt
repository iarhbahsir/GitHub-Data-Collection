Content:                     // TODO(johnlenz): should we leave both types?
// case 7: add a merged alternate
// We currently merge to the templatized types to "unknown"
// which is equivalent to the raw type.
File Name: ./src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:                   // TODO(sdh): See if we can remove IIterableResult and Set once polyfills are
// split
File Name: ./test/com/google/javascript/jscomp/IntegrationTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:                 // TODO(blickly): Preserve the declaration order of the this properties.
File Name: ./src/com/google/javascript/jscomp/ConvertToTypedInterface.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:                 // TODO(johnlenz): The extractMultilineTextualBlock method
// and friends look directly at the stream, regardless of
// last token read, so we don't want to read the first
// "STRING" out of the stream.
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:                 } // TODO(sdh): else warning?
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(dimvar): Address this issue by removing bad template
// annotations on non-templatized classes.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(dimvar): look if the meet is needed
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(johnlenz): Don't work on detached nodes.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclaration.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(nicksantos): The "right" way to do this is to
// carry the known outcome all the way through the
// recursive traversal, so that we can construct a
// different flow scope based on the outcome. However,
// this would require a bunch of code and a bunch of
// extra computation for an edge case. This seems to be
// a "good enough" approximation.
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(tbreisacher): Consider moving the CheckInterfaces warnings into the
// checkTypes DiagnosticGroup
File Name: ./src/com/google/javascript/jscomp/DiagnosticGroups.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               // TODO(user): More accuracy can be introduced
// i.e. We know exactly what arguments[x] is if x is a constant
// number.
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:               || node.isRoot()) { // TODO(blickly): Stop creating this edge for ROOT nodes
File Name: ./src/com/google/javascript/jscomp/ControlFlowAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             " * @param {number} e",  // TODO(tbreisacher): The param type should be 'E' not 'number'
File Name: ./test/com/google/javascript/jscomp/ExternExportsPassTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(ChadKillingsworth): Discover if there is a better way to detect these.
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
//   and remove this special case.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(bradfordcsmith): handle cases like `goog.inherits(x.ChildClass, SuperClass)`
File Name: ./src/com/google/javascript/jscomp/CrossModuleReferenceCollector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(johnlenz): consider picking up new aliases at the end
// of the pass instead of immediately like we do for global
// inlines.
File Name: ./src/com/google/javascript/jscomp/AggressiveInlineAliases.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(johnlenz): create a useful parameter list
// sideEffectInfo.addKnownLocal(v.getName());
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(johnlenz): remove this code and make this an exception. This
// is here only for legacy reasons, the AST is not valid but
// preserve existing behavior.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(nick): Remove this. This should already be handled by
// normal type resolution.
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(nicksantos): I'm pretty sure we don't need this anymore.
// Remove this later.
File Name: ./src/com/google/javascript/jscomp/deps/JsFileParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(sdh): ES6 STRICT, with a non-strict fallback - then give warnings.
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(stalcup): convert to a persistent index of hoistable functions.
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(stalcup): don't gather assignments ourselves, switch to a persistent
// DefinitionUseSiteFinder instead.
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(tbreisacher): Can we make automatically switch both lines to use 'new C()'?
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(tbreisacher): Change this to "@extends {Animal}"
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(tbreisacher): Find out why C is removed despite the @export annotation.
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:             // TODO(tbreisacher): Find out why C is renamed to a despite the @export annotation.
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           "/** @typedef {?} */ var symbol;", // TODO(sdh): remove once primitive 'symbol' supported
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           && !isTypeVariable(n); // TODO(johnlenz): Remove this restriction
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(ChadKillingsworth): Discover if there is a better way to detect these.
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(bradfordcsmith): The option to instrument for coverage only should belong to the
//     runner, not the compiler.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(dimvar):
// If the iteration order in the type envs is guaranteed to get the
// keys in the same order for any env, then we can iterate through the
// two type envs at the same time, to avoid the map lookup here.
File Name: ./src/com/google/javascript/jscomp/newtypes/TypeEnv.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(dimvar): Handle local scopes introduced by catch properly,
// after we decide what to do with variables in general, eg, will we
// use unique numeric ids?
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(dimvar): In analyzeNameFwd/Bwd, we are careful to not
// specialize namespaces, and we need the same check here. But
// currently, stopping specialization here causes tests to fail,
// because specializing the namespace is our way of updating its
// functions after computing summaries. The better solution is to
// retain Namespace instances after GTI instead of turning them into
// ObjectTypes, and then update those with the summaries and stop
// specializing here.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(dimvar): When the union has many things, we join and throw
// away types, except the result of the last join. Very inefficient.
// Consider optimizing.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(dimvar): currently, a class and a @record that is a
// supertype can be in the same union. We must normalize like we do
// for other types, to maintain the invariant that the members of
// a union are not subtypes of each other.
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): In Internet Explorer, non-JavaScript objects such
// as DOM objects can not be decomposed.
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): It doesn't really matter which
// parent scope in the "change scope" invalidates this scope,
// but if we were previously invalidated no parent
// has this instance in its list, so add it to the new parent.
File Name: ./src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): It should be a parse error to have an @extends
// or similiar annotations in a file overview block.
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): add support for multiple passes in getProcessor so that we can
// check the AST marking after each pass runs.
// Verify that changes to the AST are properly marked on the AST.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): handle NEW calls that record their 'this'
// in global scope and effectively return an alias.
// Other non-local references are handled by this pass.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): make global instrumentation an option
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): return a GETELEM for quoted strings.
File Name: ./src/com/google/javascript/jscomp/DefinitionsRemover.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): should "apply" always be a possible violation?
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): this can be improved by looking at the possible
// values for locals.  If there are simple values, or constants
// we could still inline.
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(johnlenz): try to remove parameters with side-effects by
// decomposing the call expression.
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedVars.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(kevinoconnor): Switch/for statements need special consideration since they may
// execute out of order.
File Name: ./src/com/google/javascript/jscomp/DeadPropertyAssignmentElimination.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(lpino): This delimiter needs to be further discussed
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(mknichel): Make sure this works with the following cases:
// ns = {
//   /** @constructor */
//   name: function() {}
// }
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(mknichel): Replace this logic with a function argument
// Matcher when it exists.
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(moz): Currently we only record ES6 classes and typedefs,
// need to handle other kinds of type declarations too.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(moz): Investigate whether we need to return early in this unlikely situation.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(moz): Use type information if allowed.
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(nicksantos): Add more literals
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(nicksantos): Come up with a way to remove this.
// If we remove object lit keys, then we will need to also
// create dependency scopes for them.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(nicksantos): Should these tests pass?
//assertTypeEquals(
//    expectedInfimum + " should be the greatest subtype of Named " +
//    typeI + " and Named " + typeJ,
//    expectedInfimum, namedTypeI.getGreatestSubtype(namedTypeJ));
//assertTypeEquals(
//    expectedInfimum + " should be the greatest subtype of Proxy " +
//    typeI + " and Proxy " + typeJ,
//    expectedInfimum, proxyTypeI.getGreatestSubtype(proxyTypeJ));
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(nicksantos): Turn this back on when locals-tracking
// is fixed. See testLocalizedSideEffects11.
//if (!caller.knownLocals.contains(name)) {
//}
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(rluble): enable multistage compilation when invoking with modules.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(sdh): Handle do/while/for/for-of/for-in?
File Name: ./src/com/google/javascript/jscomp/GuardedCallback.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(sdh): It would be better to have a more robust way to distinguish
// between actual provided symbols and synthetic symbols generated for
// ES6 (or other) modules.  We can't read loadFlags here (to see if
// the module type is 'es6') either, since that requires a full parse.
// So for now we rely on the heuristic that all generated provides start
// with "module$".
File Name: ./src/com/google/javascript/jscomp/deps/Es6SortedDependencies.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(sdh): consider warning if language_in is too low?  it's not really any
// harm, and we can't do it consistently for the prototype methods, so maybe
// it's not worth doing here, either.
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(tbreisacher): Add a warning because the user probably
// intended to type an escape sequence.
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(tbreisacher): Check that the RHS of the assignment is a
// function. Note that it can be a FUNCTION node, but it can also be
// a call to goog.abstractMethod, goog.functions.constant, etc.
File Name: ./src/com/google/javascript/jscomp/CheckJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(tbreisacher): We should still warn for '\$' in a regular string literal.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(user) revisit the dependency scope calculation
// logic.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(user): Handle more complicated expression like true == true,
// etc....
File Name: ./src/com/google/javascript/jscomp/CheckUnreachableCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:           // TODO(user): It doesn't look like the user can do much in this
// case right now.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         + "(function(x) {\n"  // TODO(tomnguyen): This should print as an => function.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         + "var $jscomp$this = this;\n" // TODO(tomnguyen): Avoid printing this line.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // Once the TODO in FunctionType is fixed, we should be able to
// remove this.
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(ChadKillingsworth): Discover if there is a better way to detect these.
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(bashir) Why the error goes away by adding /**@type {Bar}*/ here?
File Name: ./test/com/google/javascript/jscomp/SimpleReplaceScriptTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(blickly): Infer a loose type for THIS if we're in a function.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(bradfordcsmith): Although unlikely, super() could have argument expressions with
//     side-effects.
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(bradfordcsmith): Some complex cases still aren't covered, like
//     if (...) { super(); arrow function } else { super(); }
File Name: ./src/com/google/javascript/jscomp/Es6RewriteArrowFunction.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(bradfordcsmith): The option to instrument for coverage only should belong to the
//     runner, not the compiler.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(bradfordcsmith): handle async functions here
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(brndn): it is possible to be less conservative. If the classNode is DECOMPOSABLE,
// we could use the expression decomposer to move it out of the way.
File Name: ./src/com/google/javascript/jscomp/Es6ExtractClasses.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dcc): be less conservative about movement within CASE
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dcc): have nodesHaveSameControlFlow() use a CFG
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dimvar): Instead of the for-loop, we could make props be a multi-map from
// the property name to Property, and then here just pull the relevant Property instances.
// Won't make much difference to performance, since props usually only has a few elements,
// but it will make the code clearer.
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dimvar): Only exclude unorderable self-referential
// assignments. i.e. x = {a: x.b, b: x.a} is not orderable,
// but x = {a: 1, b: x.a} is.
//
// Also, ES5 getters/setters aren't handled by this pass.
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dimvar): handle getters or setters?
File Name: ./src/com/google/javascript/jscomp/ExternExportsPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dimvar): invalidating here when isStructuralInterfacePrototype is true is
// kind of arbitrary. We should only do it when the @record is implicitly implemented.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(dimvar): void can be represented in 2 ways: Token.VOID and a
// Token.STRING whose getString() is "void".
// Change jsdoc parsing to only have one representation.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(joeltine): This would probably better as its own checked exception.
File Name: ./src/com/google/javascript/jscomp/transpile/CachingTranspiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): "i = a" should be removed here.
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Add some mechanism for determining that functions
// are unaffected by side effects.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Allow inlining into any scope without local names or
// inner functions.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Closure that only contain global reference can be
// moved.
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Do we need to do anything about the Javadoc?
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): For some reason, we have mappings beyond the max line.
// So far they're just null mappings and we can ignore them.
// (If they're non-null, we assert-fail.)
File Name: ./src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Minimize any block that ends in a optimizable statements:
//   break, continue, return
File Name: ./src/com/google/javascript/jscomp/MinimizeExitPoints.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Object.create(), Object.createProperty
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Remove this once the normalization checks report
// errors instead of exceptions.
File Name: ./src/com/google/javascript/jscomp/PhaseOptimizer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Should we just remove it from fns here?
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Support multiple.
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): Support replace this with a value.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): add this to the coding convention
// so we can remove goog.reflect.sinkValue as well.
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): convert these to integers.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): determine if it is necessary to
// try to protect side-effect free statements as well.
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): determine if we can limit object literals in some
// way.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): determine what this is actually removing. Candidates
//    include: EMPTY nodes, control structures without children
//    (removing infinite loops), empty try blocks.  What else?
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): don't work on detached nodes
File Name: ./src/com/google/javascript/jscomp/ProcessCommonJSModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): fix the source location.
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): handle these or remove parser support
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): inputId maybe null if the FUNCTION node is detached
// from the AST.
// Is it meaningful to build a scope for detached FUNCTION node?
File Name: ./src/com/google/javascript/jscomp/Es6SyntacticScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): inputId maybe null if the FUNCTION node is detached
// from the AST.
// Is it meaningful to build a scope for detached FUNCTION node?
File Name: ./src/com/google/javascript/jscomp/SyntacticScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): link source script and the redeclaration script so
// that the global scope is rebuilt in the presense of redeclarations.
File Name: ./src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): report an error.
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): restrict to global names
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): should IN operator be included in #isSimpleOperator?
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): support prototype properties like:
//   foo.prototype = { a: 1, b: 2 };
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): support specialization
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedVars.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(johnlenz): we shouldn't need to check both isExternExportsEnabled and
// externExportsPath.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(martinprobst): The new type syntax resolution should be separate.
// Remove the NAME case then.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(martinprobst): There's currently no syntax for properties in object literals that
// have type declarations on them (a la `{foo: number: 12}`). This comes up for, e.g.,
// function parameters with default values. Support when figured out.
File Name: ./src/com/google/javascript/jscomp/CodeGenerator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): Figure out which node is the best to return for this
// function: the GETPROP node, or the ASSIGN node when the property is
// being assigned to.
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): Handle the case when functions are applied through .call or .apply.
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): If the symbol is not explicitly provided, find the next best
// symbol from the provides in the same file.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): Implement the rest of this function.
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): Make NodeUtil.getBestJSDoc public and use that.
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(mknichel): Support matching:
// foo.prototype = {
//   bar: 1
// };
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): Figure out why this could be null
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): Gate this behind languageMode=ES3.
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): Implement.
File Name: ./src/com/google/javascript/jscomp/Es6TypedToEs6Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): It's not yet clear if we need another kind of NameContext for block scopes
// in ES6, use anonymous node for now and investigate later.
File Name: ./src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): Removing methods annotated with @wizaction have caused internal breakage.
// Figure out what {@link WizPass} might have done wrong and maybe remove this bailout.
File Name: ./src/com/google/javascript/jscomp/RemoveSuperMethodsPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): See if we can avoid generating duplicate @return's
File Name: ./test/com/google/javascript/jscomp/ScopedAliasesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(moz): We should always add a PARAM_LIST in JsDocInfoParser
File Name: ./src/com/google/javascript/jscomp/Es6TypedToEs6Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(nicksantos): Model the Arguments object.
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(nicksantos): Remove this once everyone is using
// the CONSTANT_VAR annotation.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(nicksantos): This formulation of least subtype and greatest
// supertype is a bit loose. We might want to tighten it up later.
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(nicksantos): This might be a better check once we have
// back-inference of object/array constraints.  It will probably
// introduce more type warnings.  It uses the result type iff it's
// strictly narrower than the declared var type.
//
//boolean isVarTypeBetter = isVarDeclaration &&
//    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
//     || !resultType.isSubtype(varType));
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(nicksantos): We need to add some notion of @const outer
// scope vars. We can inline those just fine.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(sdh): We could reduce some work here by combining the global names
// check with the root-in-scope check but it's not clear how to do so and
// still keep the var lookup *after* the polyfill-existence check.
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(sdh): consider eliminating this branch now that generics are uniquified.
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Apply this fix for JSC_JSDOC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME.
File Name: ./src/com/google/javascript/refactoring/ErrorToFixMapper.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Can we display a more user-friendly name here?
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Currently we do two kinds of "empty" checks because
// anonymous classes have an EMPTY name node while anonymous functions
// have a STRING node with an empty string. Consider making these the same.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Do we still need this special case?
File Name: ./src/com/google/javascript/jscomp/AggressiveInlineAliases.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Implement Generator.return:
// http://www.ecma-international.org/ecma-262/6.0/#sec-generator.prototype.return
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Remove this cast if we start returning an actual Generator object.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): Support this in ES3 too by not relying on Function.bind.
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(tbreisacher): The 'positive' option could be better:
// "x && !((y!==2 && f()) || (y!==3 && h()))",
File Name: ./test/com/google/javascript/jscomp/MinimizedConditionTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): Check to to see if AliasExterns is on
// The gain we get per prototype declaration. Assuming it can be
// aliased.
File Name: ./src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): Copy type information.
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): In theory, we CAN coalesce function names just like
// any variables. Our Liveness analysis captures this just like it as
// described in the specification. However, we saw some zipped and
// and unzipped size increase after this. We are not totally sure why
// that is but, for now, we will respect the dead functions and not play
// around with it.
File Name: ./src/com/google/javascript/jscomp/CoalesceVariableNames.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): Investigate how we should handle the case where
// we have a very complex expression inside the FOR-IN header.
File Name: ./src/com/google/javascript/jscomp/ControlFlowGraph.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): Its possible not to give up just yet. The type
// inference did a 'semi value propagation'. If we know that string
// is never a subclass of the type of the index. We'd know that
// it is never 'callee'.
return false; // Give up.
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): Only traverse the function's body. The function's
// name and arguments are traversed by the scope creator, and ideally
// should not be traversed by the type checker.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): We CAN make this bit smarter just looking at
// constants. We DO have a full blown ReverseAbstractInterupter and
// type system that can evaluate some impressions' boolean value but
// for now we will keep this pass lightweight.
File Name: ./src/com/google/javascript/jscomp/CheckMissingReturn.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): We can consider using .call() if aliasing that
// argument allows shorter alias for other arguments.
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): We need more fine grain CFA or we need to keep track
// of GEN sets when we recurse here.
File Name: ./src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO(user): We only care about calls to functions that
// passes one of the dependent variable to a non-side-effect free
// function.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // TODO: UnicodeLetter also includes Letter Number (NI)
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         // too tightly coupled to CheckAccessControls. TODO(brndn): simplify.
File Name: ./src/com/google/javascript/jscomp/SymbolTable.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         //TODO(mattloring): Allow code points greater than the size of a char
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         ALL_TYPE); // TODO(johnlenz): this should be:
//   {Object|number|string|null|void}
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         UNKNOWN_TYPE); // TODO(johnlenz): this should be CHECK_UNKNOWN
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         UNKNOWN_TYPE,  // TODO(johnlenz): should be CHECKED_UNKNOWN_TYPE
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         UNKNOWN_TYPE,  // TODO(johnlenz): this should be "CHECKED_UNKNOWN"
File Name: ./test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         return TernaryValue.FALSE; // TODO(moz): Correct this.
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:         || thatType.isNoObjectType() // TODO(johnlenz): restrict to objects
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // Parse the next key (TODO(sdh): need to support non-quoted keys?).
File Name: ./src/com/google/javascript/jscomp/deps/JsFileLineParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bashir) In hot-swap version this means that for global scope we
// only go through all global variables accessed in the modified file not
// all global variables. This should be fixed.
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(blickly): Can we optimize this to skip unnecessary iterations?
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(blickly): Distinguish between undeclared varargs and no varargs.
File Name: ./src/com/google/javascript/jscomp/newtypes/DeclaredFunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(blickly): Remove these suppressions when all externs declarations on window are gone.
File Name: ./src/com/google/javascript/jscomp/DeclaredGlobalExternsOnWindow.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(blickly): determine if we can parse this without the
// overhead of forking the parser.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bradfordcsmith): Avoid creating data for non-constructor functions.
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bradfordcsmith): Should we be ignoring possible init/initModules() errors here?
File Name: ./src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bradfordcsmith): This marking is really about how variable scoping is handled during
//     type checking. It should really be handled in a more direct fashion.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bradfordcsmith): What cases are these? Can we do better?
File Name: ./src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(bradfordcsmith): handle LET and CONST
File Name: ./src/com/google/javascript/jscomp/CrossModuleReferenceCollector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(brndn): by contrast, isPrivateAccessAllowed does allow
// private access when a source file is unknown. I didn't change it
// in order not to break existing code.
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dbeam): support cr.exportPath('ns').value.
File Name: ./src/com/google/javascript/jscomp/ChromePass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dcc): Implement CrossModuleMotionEnvironment
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dcc): Implement IntraproceduralMotionEnvironment
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): ENUM_IS_UNION is rare, but it happens. Should we support it?
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): Handle optional properties on @record of unknown type.
// See how we do it in jstypecreatorfromjsdoc.
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): Revisit what we throw away after the bwd analysis
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): This doesn't work for multiple levels in the hierarchy.
// Clean up how we process inherited properties and then fix this.
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): check if we can have @const props here
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): once we fix scoping for catch blocks, uncomment the
// precondition below.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): this should use getReferenceName() instead of this.primitiveType
File Name: ./src/com/google/javascript/rhino/jstype/EnumElementType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): typecheck that code properly and remove this.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): types of most object literals are considered anonymous objects, and as such,
// a property of an object literal prevents all properties with the same name from being
// disambiguated. In OTI, this might be hard to change, but in NTI, it is easy to change
// isUnknownObject to return false for object literals. I deliberately followed the behavior
// of OTI to help with the migration, but can revisit in the future to improve
// disambiguation.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(dimvar): warn if multiple jsdocs for a fun
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(jakubvrana): Support union, e.g. {!TagName<!HTMLDivElement>|!TagName<!HTMLBRElement>}.
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Allow 'this' references to be replaced with a
// global 'this' object.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Allow rewrite all definitions are valid.
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Counting the number of returns is relatively expensive
//   this information should be determined during the traversal and
//   cached.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): I'm not 100% certain this is necessary, or if
// the type is being inspected incorrectly.
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): In ES5 strict mode a function can have a null or
// undefined "this" value, but all the existing "@this" annotations
// don't declare restricted types.
File Name: ./src/com/google/javascript/jscomp/FunctionTypeBuilder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Maybe remove redundant BREAK and CONTINUE. Overlaps
// with MinimizeExitPoints.
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Minimum requirement checks are about 5% of the
// run-time cost of this pass.
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Remove this cast and try/catch.
// This is here to workaround GWT http://b/30943295
File Name: ./src/com/google/javascript/jscomp/PerformanceTracker.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Should we allow internal references to be inlined?
// An exported name can be replaced externally, any inlined instance
// would not reflect this change.
// To allow inlining we need to be able to distinguish between exports
// that are used in a read-only fashion and those that can be replaced
// by external definitions.
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Should we be checking for constants on the
// left-hand-side of the assignments and handling them as EXPRESSION?
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Simpler not to special case this,
// and let it be optimized later.
File Name: ./src/com/google/javascript/jscomp/FunctionToBlockMutator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Support .call signature changes.
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Support object-literal property definitions.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): Update this if we start supporting inlining
// other functions that reference this.
// The only functions that reference this that are currently inlined
// are those that are called via ".call" with an explicit "this".
callCost += 5 + 5;  // ".call" + "this,"
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): We shouldn't spend time checking template whose
// types whose definitions aren't included (NoResolvedType). Alternately
// we should treat them as "unknown" and perform loose matches.
File Name: ./src/com/google/javascript/jscomp/TemplateAstMatcher.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): enable this for most test cases.
// Currently, this invalidates test for while-loops, for-loop
// initializers, and other naming.  However, a set of code
// (Closure primitive rewrites, etc) runs before the Normalize pass,
// so this can't be force on everywhere.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): fix the source location.
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): handle TRY/FINALLY
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): hash lookups are not free and
// building scopes are already expensive
// restructure the scope building to avoid this check.
File Name: ./src/com/google/javascript/jscomp/Es6SyntacticScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): is this valid across scopes?
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): once the templated type work is finished,
// restrict the type parameters.
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): promote this to an error once existing conflicts have been
// cleaned up.
File Name: ./src/com/google/javascript/jscomp/JsMessageVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): rework catch expression handling when we
// have lexical scope support so catch expressions don't
// need to be special cased.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): share the JSDocInfo here rather than building
// a new one each time.
File Name: ./src/com/google/javascript/jscomp/ExternExportsPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): support specialization
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): the premise in the following comment is questionable:
// assignment to goog.nullFunction (or any global object) changes the value globally
// we should preserve the assignment.  In particular, the example is an
// misuse of goog.nullFunction and having special support for it doesn't make any
// sense.  It is unclear if there is any valid use for this special case.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): use this when we upgrade Trush:
//    assertThat(e).hasMessageThat().contains("change scope not marked as changed");
File Name: ./test/com/google/javascript/jscomp/ChangeVerifierTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(johnlenz): visit function parts
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(lpino): Decide how to handle non-record types
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(michaelthomas): Consider checking all children, but watch out for return statements
// that could short-circuit the clinit.
File Name: ./src/com/google/javascript/jscomp/J2clClinitPrunerPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(mknichel): Figure out the best way to output the typecast.
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(mknichel): Fix all the formatting problems with this code.
// How does this play with goog.scope?
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(mknichel): Move this logic and the start position logic to a helper function
// so that it can be reused in other methods.
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(mknichel): Move this logic to CodePrinter.
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(mknichel): Use the JSDocInfoParser to find the end of the type declaration. This
// would also handle multiple lines, and record types (which contain '{')
File Name: ./src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(moz): Figure out why we still need the special handling
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(moz): If we knew the named value wouldn't be NaN, it would be nice to handle
// LE and GE. We should use type information if available here.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(moz): Investigate why this could be null
File Name: ./src/com/google/javascript/jscomp/RemoveSuperMethodsPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(moz): Remove this once we stop supporting IE8.
File Name: ./src/com/google/javascript/jscomp/ScopedAliases.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(moz): See if we can remove the bypass for "goog"
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos): Check to see if resolve() looped back on itself.
// Preconditions.checkNotNull(resolveResult);
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos): Remove all uses of the Name position
// and replace them with the NameNode position.
File Name: ./src/com/google/javascript/rhino/JSDocInfoBuilder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos): This branch indicates a compiler bug, not worthy of
// halting the compilation but we should log this and analyze to track
// down why it happens. This is not critical and will be resolved over
// time as the type checker is extended.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos): This branch indicates a compiler bug, not worthy of
// halting the compilation but we should log this and analyze to track
// down why it happens. This is not critical and will be resolved over
// time as the type checker is extended.
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos): This is a terrible terrible hack, until
// I create a definitionProvider that understands namespacing.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos|user): This caching behavior is a bit
// odd, and only works if you assume the exact call flow that
// clients are currently using.  In that flow, they call
// getProvides(), then remove the goog.provide calls from the
// AST, and then call getProvides() again.
//
// This won't work for any other call flow, or any sort of incremental
// compilation scheme. The API needs to be fixed so callers aren't
// doing weird things like this, and then we should get rid of the
// multiple-scan strategy.
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(nicksantos|user): This is a terrible, terrible hack
// to bail out on recursive typedefs. We'll eventually need
// to handle these properly.
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(rluble): Split process defines into two stages, one that performs only checks to be
// run here, and the one that actually changes the AST that would run in the optimization
// phase.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): It would be nice to allow people to output code in
// strict mode.  But currently we swallow all the input language
// strictness checks, and there are various tests that are never
// compiled and so are broken when we output 'use strict'.  We
// could consider adding some sort of logging/warning/error in
// cases where the input was not strict, though there could still
// be semantic differences even if syntax is strict.  Possibly
// the first step would be to allow the option of outputting strict
// and then change the default and see what breaks.  b/33005948
File Name: ./src/com/google/javascript/jscomp/transpile/BaseTranspiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): This is reinventing a large part of JSDocInfoParser.  We should
// try to consolidate as much as possible.  This requires several steps:
//   1. Make all the annotations we look for first-class in JSDocInfo
//   2. Support custom annotations (may already be done?)
//   3. Fix up existing code so that all these annotations are in @fileoverview
//   4. Change this code to simply inspect the script's JSDocInfo instead of re-parsing
File Name: ./src/com/google/javascript/jscomp/gwt/client/JsfileParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): how to handle this?  Currently we throw an ISE with the message,
// but this may not be the most appropriate option.  It might make sense to
// add console.log() statements to any JS that comes out, particularly for
// warnings.
File Name: ./src/com/google/javascript/jscomp/transpile/BaseTranspiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): should this be an error?
File Name: ./src/com/google/javascript/jscomp/deps/JsFileParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): support string-enum keys.
// Bracket accesses on the IObject (or on an Array) can generally return undefined
// and we don't warn about that; so ignore undefined for the object literal as well.
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(sdh): test this case once NTI understands ES6 classes
File Name: ./src/com/google/javascript/jscomp/TypedCodeGenerator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Add a SuggestedFix for this warning.
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Add a warning if the param is shadowed or reassigned.
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteClass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Allow inline JSDoc here (but then forbid it in CheckJSDoc)
// so that it's clear we don't support annotations like
//   function f({x: /** string */ y}) {}
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Figure out how to remove this restriction.
File Name: ./src/com/google/javascript/jscomp/ConformanceRules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Remove CAST from this list, and disallow
// the cryptic case from cl/41958159.
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(tbreisacher): Remove this branch when everything is switched to
// Es6SyntacticScopeCreator.
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user) The properties that this pass adds to CALL and NEW
// AST nodes increase the AST's in-memory size.  Given that we are
// already running close to our memory limits, we could run into
// trouble if we end up using the @nosideeffects annotation a lot
// or compute @nosideeffects annotations by looking at function
// bodies.  It should be easy to propagate @nosideeffects
// annotations as part of passes that depend on this property and
// store the result outside the AST (which would allow garbage
// collection once the pass is done).
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user) make the pass smarter about these cases and/or run
// this pass and RemoveConstantExpressions together in a loop.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user) revisit: object literal definitions are an example
// of definitions whose LHS doesn't correspond to a node that
// exists in the AST.  We will have to change the return type of
// getLValue sooner or later in order to provide this added
// flexibility.
File Name: ./src/com/google/javascript/jscomp/DefinitionsRemover.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Alternatively, we could experiment with using a local
// name to shadow a global variable.
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Better source information.
File Name: ./src/com/google/javascript/jscomp/InlineObjectLiterals.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Certain cases we can still inline.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Each instance should support named type creation using
// interning.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Move this into the lexer/parser.
// Remove the string literal characters around a field name,
// if any.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Side-effect is OK sometimes. As long as there are no
// side-effect function down all paths to the use. Once we have all the
// side-effect analysis tool.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): This branch indicates a compiler bug, not worthy of
// halting the compilation but we should log this and analyze to track
// down why it happens. This is not critical and will be resolved over
// time as the type checker is extended.
File Name: ./src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): This branch indicates a compiler bug, not worthy of
// halting the compilation but we should log this and analyze to track
// down why it happens. This is not critical and will be resolved over
// time as the type checker is extended.
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): Use isPrivate method below to recognize all functions.
File Name: ./src/com/google/javascript/jscomp/CheckProvides.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): We could get more accuracy by looking more in-detail
// what j is and what x is trying to into to.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): We could inline all the uses if the expression is short.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO(user): We might not need to bail out all the time, there might
// be more cases that we can cover.
File Name: ./src/com/google/javascript/jscomp/OptimizeArgumentsArray.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: Switch this to the filename + property name heuristic which is less brittle.
File Name: ./src/com/google/javascript/jscomp/J2clPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: This logic can probably be replaced with @nosideeffects annotations in externs.
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: This may be more expensive than necessary.
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: add NumberToken
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: character following NumericLiteral must not be an IdentifierStart or DecimalDigit
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       // TODO: maybe pull out common prefix or suffix
File Name: ./src/com/google/javascript/jscomp/regex/RegExpTree.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       Sources inputsObj,  // TODO remove this parameter
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       case "es6-impl": // TODO(sdh): support a separate language mode for es6-impl?
File Name: ./src/com/google/javascript/jscomp/RewritePolyfills.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       case EMPTY:  // TODO(johnlenz): remove this.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       return c == 0xA0; // TODO(moz): Correct this.
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:       return true;  // TODO(johnlenz): are there any misuses we can catch?
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:      /* TODO(blickly): Make this warning go away.
* This is old behavior, but it doesn't make sense to warn about since
* both assignments are inferred.
*/
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     /* TODO(dcc) This modifies the siblings of n, which is undesirable for a
* peephole optimization. This should probably get moved to another pass.
*/
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     /*TODO (simranarora) We are currently traversing in Es6 for this pass, but the conversion
*to an Es6 scope creator is breaking existing test cases
*/
File Name: ./src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // // TODO(dimvar): fix
// typeCheck(LINE_JOINER.join(
//     "/** @constructor */",
//     "function High() {}",
//     "/**",
//     " * @param {number} x",
//     " * @final",
//     " */",
//     "High.prototype.method = function(x) {};",
//     "/** @constructor @extends {High} */",
//     "function Mid() {}",
//     "/** @constructor @extends {Mid} */",
//     "function Low() {}",
//     "Low.prototype.method = function(x) {};"),
//     GlobalTypeInfo.CANNOT_OVERRIDE_FINAL_METHOD);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO - could probably do a better job encoding these
File Name: ./test/com/google/javascript/jscomp/NameAnonymousFunctionsMappedTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(anatol): add flag that decides whether to process UNNAMED messages.
// Some projects would not want such functionality (unnamed) as they don't
// use SOY templates.
File Name: ./src/com/google/javascript/jscomp/JsMessageVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): Also look for getters and setters specially (in RawNominalType::protoProps),
// but avoid putting them in the hot path of getProp.
File Name: ./src/com/google/javascript/jscomp/newtypes/NominalType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): Only difference is we don't add parens at the ends of our union type
// string reprs in NTI. Fix them to be the same if possible.
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): This is purely a stub to ensure we never get into a codepath that
// depends on us being an unresolved type. We currently do not mark unresolved types as such
// in NTI since the main use-case (warning for unfulfilled forward declares) can be
// handled differently (by warning after GTI), so we don't want to change the type system.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): could implement in a more sophisticated way, following the
// implementation in JSTypeRegistry.
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): could implement in a more sophisticated way.
// One particular pain point is that we currently return the object literal representation of
// prototype objects instead of something more readable such as "Foo.prototype". But this is
// difficult to fix since we don't represent prototype objects in any special way.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): this might need to also include the extra properties as stored in the
// ObjectType::props. If so, demonstrate a test case that needs it and fix this.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(aravindpg): this ought to warn under both, or at any rate NTI.
File Name: ./test/com/google/javascript/jscomp/ImplicitNullabilityCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir) Check if we need to createSynthesizedExternVar like process.
File Name: ./src/com/google/javascript/jscomp/VarCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir) Maybe implement error-flush functionality in Compiler?
File Name: ./test/com/google/javascript/jscomp/BaseReplaceScriptTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): If in future most of PassFactory's in DefaultPassConfig
// turns out to be DefaultPassConfig.HotSwapPassFactory, we should probably
// change the implementation here by the one in HotSwapPassFactory.
File Name: ./src/com/google/javascript/jscomp/PassFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): If this is too slow it is not too difficult to make it
// faster with keeping an index for variables accessed in sourceName.
File Name: ./src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): Implement a real hot-swap version instead and make it fully
// consistent with the full version.
File Name: ./src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): Variable declaration is not the only side effect of last
// global scope generation but here we only wipe that part off.
File Name: ./src/com/google/javascript/jscomp/TypedScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): We can do binary search here, but since this is fast enough
// right now, we just do a linear search for simplicity.
File Name: ./src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bashir): typesIndexedByProperty should also be updated!
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Add support for @final annotation to NTI.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Allow TypeScript syntax in arrow function parameters
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Catching the INVALID_ARGUMENT_TYPE here requires
// return-type unification.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Consider a warning if RHS doesn't contain ||
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Currently, this warning is not good, referring to props of
// BOTTOM. Ideally, we could warn about accessing a prop on undefined.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Do we need instantiation here?
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Do we need instatiation here?
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Investigate why the method's type isn't preserved.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): It would be better not to be renaming detached nodes
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Move this code to CodingConvention so that
// it's possible to define alternate ways of defining properties.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Reenable these once module rewriting happens after Typescript transpilation.
File Name: ./test/com/google/javascript/jscomp/Es6TypedToEs6ConverterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): The fact that this has no warnings is somewhat unpleasant.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Warn if function in externs has body
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): We should warn for this as well, but it's harder to detect.
File Name: ./test/com/google/javascript/jscomp/ClosureRewriteModuleTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): We would like to find the parameter mismatch here.
// Currently they match with type WithProp<?>, which is somewhat unsatisfying.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Would be nice if we caught the MISTYPED_ASSIGN_RHS here
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(blickly): Would be nice not to warn here,
// even if it means missing the warning below
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bradfordcsmith): Allowing null id is less ideal. Add checkNotNull(id) here and fix
// call sites that break.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bradfordcsmith): Make sure all of the type syntax handling code is avoided when
//     this is false.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bradfordcsmith): lastSourcePosition should really point to the end of the last token
//     before the tree to correctly detect implicit semicolons, but it doesn't matter for the
//     current use case.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(bradfordcsmith): new.target in global scope should be a syntax error
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dcc): Add per-function side effects summaries.
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dcc): Implement isPure().
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dcc): implement interprocedural side effect analysis.
File Name: ./test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): By adding prints, I found that the majority of the time, when
// we substitute generics in obj, it has no effect; the result is equal to the type
// before substitution. I did some timing tests to estimate what the improvement
// would be if we did better here, and they were inconclusive because of large variance
// in the test runs. Intuitively though, it seems that we can save time here,
// so revisit this in the future when I have time to dig in deeper.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): Do deferred checks for known functions that are properties.
// typeCheck(LINE_JOINER.join(
//     "/** @const */ var ns = {};",
//     "ns.f = function(x) { return x - 1; };",
//     "function g() { ns.f('asdf'); }"),
//     NewTypeInference.INVALID_ARGUMENT_TYPE);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): I think we can fix the next one with better deferred checks
// for prototype methods. Look into it.
// typeCheck(LINE_JOINER.join(
//     "/** @constructor */ function Foo() {};",
//     "Foo.prototype.bar = function(s) { s < 'asdf'; };",
//     "function g() { (new Foo()).bar(5); }"),
//     NewTypeInference.INVALID_ARGUMENT_TYPE);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): If objs and enums stay unchanged, reuse, don't recreate.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): Look into why the name node has a less precise type in the
// outer scope; we've already computed a good type for it, don't lose it.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): Needs deferred checks for known property-functions.
// typeCheck(LINE_JOINER.join(
//     "/** @const */ var ns = {};",
//     "ns.f = function(x) { return x - 1; };",
//     "/** @type {string} */",
//     "ns.f.prop = 'asdf';",
//     "function g() { ns.f(ns.f.prop); }"),
//     NewTypeInference.INVALID_ARGUMENT_TYPE);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): The expected formal type is string if g appears before f
// and number o/w. Also, we allow adding named types to ctors in any scope,
// but other properties only in the same scope where the ctor is defined.
// Must be consistent about which scopes can add new props.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): This method is used to avoid a spurious warning in ES6
// externs, where a prototype property is declared using GETELEM.
// We'll remove this when we properly handle ES6.
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): This should get moved to preventing cycles in FunctionTypeBuilder
// rather than removing them here after they have been created.
// Also, this doesn't do the right thing for extended interfaces, though that is
// masked by another bug.
File Name: ./src/com/google/javascript/rhino/jstype/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): We attach the type to every expression because that's also
// what the old type inference does.
// But maybe most of these types are never looked at.
// See if the passes that use types only need types on a small subset of the
// nodes, and only store these types to save mem.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): We could warn about this since x is callable and we're
// passing a non-function, but we don't catch it for now.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): We do some short-circuiting based on the declared type,
// but maybe we can do more based also on the existing inferred type (?)
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): When a class extends a class that inherits from IObject,
// it should be unrestricted.
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): catch this warning once we typecheck ES6 natively.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceWithTranspilationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): convert this pass to use NTI. Low priority since it's
// mostly unused. Converting it shouldn't block switching to NTI.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): don't return null for anonymous functions
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): fix
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): fix handling of namespace types in markAndGetTypeOfPreanalyzedNode
// and uncomment
//    typeCheck(LINE_JOINER.join(
//        "/** @const */ var ns = {};",
//        "/** @typedef {number} */",
//        "ns.num2;",
//        "/** @type {number} */",
//        "ns.num2.prop = 123;"),
//        GlobalTypeInfo.CANNOT_ADD_PROPERTIES_TO_TYPEDEF);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): here, a lot of the time the set of objects will only contain objects for which
// withLoose is a no-op. Worth it to detect it and return `this` in that case, to avoid
// unnecessary creation of types?
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): if sm uses a goog.forwardDeclare in a local scope, give
// an error instead of crashing.
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): if this case comes up often, modify the parser to
// remember comma positions for function decls and calls and fix the bug.
File Name: ./test/com/google/javascript/jscomp/parsing/AttachJsdocsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): if we support enums of unions, this is the behavior we want for generics.
// The enum of a union is not a union. When unifying here with MyEnum, it's not the same
// as unifying with number|string. In the former case, T is mapped to MyEnum, in the latter
// it would be mapped to number and there would be no warning.
/    typeCheck(LINE_JOINER.join(
/        "/** @enum {number|string} */",
/        "var MyEnum = { A: 1, B: 'asdf' };",
/        "/**",
/        " * @template T",
/        " * @param {T|string} x",
/        " * @return {T}",
/        " */",
/        "function f(x) {",
/        "  return /** @type {T} */ (x)",
/        "}",
/        "function g(/** !MyEnum */ x) {",
/        "  f(x) - 3;",
/        "}"),
/        NewTypeInference.INVALID_OPERAND_TYPE);
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): it'd be nice to catch this warning
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): it's bad style to refer to DiagnosticGroups after DefaultPassConfig.
// When we have a nicer way to know whether we're in compatibility mode, use that
// here instead (and in the constructor of NewTypeInference).
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): look into declaring IObject as @record in the default
// externs, and the special handling here can be removed.
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): need more @template warnings
// - warn for multiple @template annotations
// - warn for @template annotation w/out usage
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): the current type inf also doesn't catch this.
// Consider warning when the prop is not an "own" prop.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): this warning is wrong.
// But to remove it, we should check that a concrete class C that inherits from an
// abstract class A that implements an interface I, implements all methods of I.
// Currently, we only check classes that directly implement an interface.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): to fix these, we must collect all THROWs w/out an out-edge
// and use the envs from them in the summary calculation. (Rare case.)
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): up to ES5, prop decls use dot.
// Should we start allowing [] for @unrestricted classes?
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceWithTypeSyntaxTranspilationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): warn for invalid assignment.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTTLTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(dimvar): warn for invalid return type.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTTLTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(jakubvrana): Add a test for goog.dom.DomHelper.
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(jlklein): Actually verify the properties of the BehaviorDefinitions.
File Name: ./test/com/google/javascript/jscomp/PolymerBehaviorExtractorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(joeltine): Change back to asserting an error when b/28869281
// is fixed.
File Name: ./test/com/google/javascript/jscomp/SimpleReplaceScriptTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(joeltine): Remove this and properly handle hot swap passes. See
// b/28869281 for context.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz) Use type information if available to fold
// instanceof.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz):  This test confirms that the constructor (a.b) isn't
// improperly removed, but this result isn't really what we want as
// namespace placeholders for a.b and a.b.c remain.
File Name: ./test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): "f" is side-effect free but we need
// to propagate that "externObjSEThisMethod" is modifying
// a local object.
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Add a check for useless of template types.
// Unless there are at least two references to a Template type in
// a definition it isn't useful.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Add support for 'apply'
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Add support for .call and .apply
File Name: ./test/com/google/javascript/jscomp/OptimizeReturnsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): As the @this type for Array.prototype.push includes
// "{length:number}" (and this includes "Array<number>") we don't
// get a type warning here. Consider special-casing array methods.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Can inline into a function containing eval, if
// no names are introduced.
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Can inline, not temps needed.
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Change these normalization checks Preconditions and
// Exceptions into Errors so that it is easier to find the root cause
// when there are cascading issues.
File Name: ./src/com/google/javascript/jscomp/SanityCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Consider folding the following to:
//   "(a(),1) && b();
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Consider storing the callSite classification in the
// reference object and passing it in here.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Consider using scope for this.
File Name: ./src/com/google/javascript/jscomp/FunctionArgumentInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Determine if it is necessary to support ".call" or
// ".apply".
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Determining if the called function contains VARs
// or if the caller contains inner functions accounts for 20% of the
// run-time cost of this pass.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Do we need to handle this differently for "third_party"
// mode? Remove the previous function definitions?
File Name: ./test/com/google/javascript/jscomp/NormalizeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Handle NaN with unknown value. BIT ops convert NaN
// to zero so this is a little awkward here.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): I'm not sure what the original intent of "type prefix" stripping was.
// Verify that we can always assume a complete namespace and simplify this logic.
File Name: ./src/com/google/javascript/jscomp/StripCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Issue 310, should the values also be externed?
File Name: ./test/com/google/javascript/jscomp/GenerateExportsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): It would be nice if there were some way to preserve
// typedefs but currently they are resolved into the basic types in the
// type registry.
// NOTE(sdh): OTI and NTI have slightly different behaviors here:
// OTI does not correctly remove null, while NTI handles this correctly.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Make parsing precondition checks JSErrors reports.
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Mark NAME nodes constant for parameters that are not
// modified.
File Name: ./src/com/google/javascript/jscomp/FunctionToBlockMutator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Maybe "smarten" FunctionState by adding this logic
// to it?
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Move "safety" code to a shared class.
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Move this to NodeTypeNormalizer once the unit tests are
// fixed.
/**
* Limit the number of special cases where LABELs need to be handled. Only
* BLOCK and loops are allowed to be labeled.  Loop labels must remain in
* place as the named continues are not allowed for labeled blocks.
*/
File Name: ./src/com/google/javascript/jscomp/Normalize.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Move this to NodeUtil if other uses for this crop up.
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Not yet. Propagate local object information.
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Provide some mechanism for determining this.
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Remove this once JSTypeExpression are immutable
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Should we add constant removing to the unit test?
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Support multiple definitions.
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Support multiple valid definitions.
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Support name "groups" so that unrelated strings can
// reuse strings.  For example, event-id can reuse the names used for logger
// classes.
File Name: ./src/com/google/javascript/jscomp/ReplaceStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Support this case.
File Name: ./test/com/google/javascript/jscomp/InlineSimpleMethodsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): The code generator wraps free calls with (0,...) to
// prevent leaking "this", but the parser doesn't unfold it, making a
// AST comparison fail.  For now do a string comparison to validate the
// correct code is in fact generated.
// The FREE call wrapping should be moved out of the code generator
// and into a denormalizing pass.
File Name: ./test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): The do-while can be turned into a label with
// named breaks and the label optimized away (maybe).
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): There are two definitions of "foo" here, ignore the
// one that can't be called.
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): This function takes too many parameter, without
// context.  Modify the API to take a structure describing the function.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): This is overkill as named breaks may refer to outer
// loops or labels, and any break my refer to an inner loop.
// More generally, this check may be more expensive than we like.
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): This might be overly conservative but doing otherwise is more complicated
// so let see if we can get away with this.
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): This would be better handled by control-flow sensitive
// constant propagation. As the other case that I want to handle is:
//   i=0; for(;i<0;i++){}
// as right now nothing facilitates removing a loop like that.
// This is here simply to remove the cruft left behind goog.userAgent and
// similar cases.
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): Validate get and set function declarations are valid
// as is the functions can have "extraneous" bits.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): We really want a constant marking pass.
// The value "goo" should be constant, but it isn't known to be so.
File Name: ./test/com/google/javascript/jscomp/ExpressionDecomposerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): add support for checking "package" properties when checking an entire
// library.
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): add support for checking protected properties in final classes
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): add support private by convention property definitions without JSDoc.
File Name: ./src/com/google/javascript/jscomp/CheckUnusedPrivateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): additional validation here.
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): allow template types in @type function expressions
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): change this to reject null
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): consider doing this as a normalization.
File Name: ./src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): consider introducing a CAST node to the AST (or
// perhaps a parentheses node).
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): consider removing the result length check.
// length of the left and right value plus 1 byte for the operator.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): consider sharing some code with trySimpleUnusedResult.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): determine if MODULE_BODY is useful here.
File Name: ./src/com/google/javascript/jscomp/ChangeVerifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): do this more efficiently.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LineNumberTable.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): finish setting up the SCRIPT node
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): fix this so it is just another test case.
File Name: ./test/com/google/javascript/jscomp/NormalizeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): fix this, "x" should remain or the reference to "x" should also be removed
// as-is this pass has a prerequisite that the peephole passes have already remove
// side-effect free statements like this.
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): fix this.
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): generally, the compiler should not be changing the options object
// provided by the user.  This should be handled a different way.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): if this is called with a null scope we need to invalidate everything
// but this isn't done, so we need to make this illegal or record this as having
// invalidated everything.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): if we start tracking parameters individually
// this should simply be a check for "arguments".
File Name: ./src/com/google/javascript/rhino/JSDocInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): in ECMASCRIPT5/6 is a "mixed" mode and we should track the context
// that we are in, if we want to support it.
File Name: ./src/com/google/javascript/jscomp/parsing/IRFactory.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): make "ignore" and "nothing" explicit.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): make CollapseProperties safer around aliases of
// functions and object literals.  Currently, this pass trades correctness
// for code size.  We should able to create a safer compromise by teaching
// the pass about goog.inherits and similiar calls.
File Name: ./test/com/google/javascript/jscomp/CollapsePropertiesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): maybe just report the first error, when not in IDE mode?
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): maybe use ControlFlowAnalysis.mayThrowException?
File Name: ./src/com/google/javascript/jscomp/PeepholeMinimizeConditions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): merge the useless "case 2"
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): move test suite declaration into the
// coding convention class.
File Name: ./src/com/google/javascript/jscomp/ExportTestFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): normalize the AST so an AST comparison can be done.
// As is, the expected AST does not match the actual correct result:
// The AST matches "g.a()" with a FREE_CALL annotation, but this as
// expected string would fail as it won't be mark as a free call.
// "(0,g.a)()" matches the output, but not the resulting AST.
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): once the templated type work is finished,
// restrict the type parameters.
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): reenable
//parse("public = 2;");
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): rename this function
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): rename this function.  It is currently being used
// in two disjoint cases:
// 1) We only care about the result of the expression
//    (in which case NOT here should return true)
// 2) We care that expression is a side-effect free and can't
//    be side-effected by other expressions.
// This should only be used to say the value is immuable and
// hasSideEffects and canBeSideEffected should be used for the other case.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): separate setter property types from getter property
// types.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): should this be false?
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): should we validate no values in scope?
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): somehow allow templated typedefs
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): super in global scope should be a syntax error
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): support foo.call
File Name: ./test/com/google/javascript/jscomp/OptimizeParametersTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): support rewriting methods defined as part of
// object literals (they are generally problematic because they may be
// maps of functions use in for-in expressions, etc).
// Be conservative, don't try to optimize any declaration that isn't as
// simple function declaration or assignment.
File Name: ./src/com/google/javascript/jscomp/OptimizeParameters.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): the compiler is a bad place to store this value
// multiple traversals can interfer with each other
// (even on the same thread).
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): this can be improved by looking to see
// if the inner function contains any references to values defined
// in the outer function.
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): this seems like a strange place to check "@implicitCast"
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): this should generate a warning but does not.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): this was a weird error.  We should add a general
// restriction on what is accepted for T. Something like:
// "@template T of {Object|string}" or some such.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): track entering strict scripts/modules/functions.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Parser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): unify "SourceFile", "Es6ErrorReporter" and "Config"
File Name: ./src/com/google/javascript/jscomp/parsing/ParserRunner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): update this test to look for the const annotation.
File Name: ./test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): validate "yield" parsing. Firefox rejects this
// use of "yield".
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(johnlenz): we currently report the type of the RHS which is not
// correct, we should export the type of the LHS.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(kushal): Make decision about overlap with CrossModuleCodeMotion
File Name: ./test/com/google/javascript/jscomp/InlineVariablesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Check that the number of parameters correspond with the
// number of template types that the base type can take when creating
// a templatized type. For instance, if the base type is Array then there
// must be just one parameter.
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Decide if the best strategy is to collapse the properties
// to a union type or not. So far, new values replace the old ones except
// if they are two record types in which case the properties are joined
// together
File Name: ./src/com/google/javascript/jscomp/TypeTransformation.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Handle inherited properties
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): ParserRunner reports errors if the expression is not
// ES6 valid. We need to abort the validation of the type transformation
// whenever an error is reported.
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Use only constants as parameters of this method
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Use the exact lineno and charno, it is currently using
// the lineno and charno of the parent @template
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(lpino): Use the type Promise instead of Array
// {service:Array<number>}
// is transformed to
// {service:number}
File Name: ./test/com/google/javascript/jscomp/TypeTransformationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(martinprobst): the test below asserts incorrect behavior for backwards compatibility.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mattloring): copy existing suppressions.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mattloring): remove this suppression once we can optimize the switch statement to
// remove unused cases.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteGenerators.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(michaelthomas): This could be improved slightly by not assuming that any variable in the
// outer scope is used in the function.
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mknichel): Function declarations need to be rewritten to match the original source
// instead of being assigned to a local variable with duplicate JS Doc.
File Name: ./test/com/google/javascript/jscomp/CodePrinterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mknichel): Make this test case work.
// input = "ns = {\n"
//     + "  /** @constructor */\n"
//     + "  Foo: function() {}\n"
//     + "};";
// root = compileToScriptRoot(getCompiler(input));
// ctorNode = root.getFirstFirstChild().getLastChild().getFirstChild();
// assertTrue(Matchers.constructor("ns.Foo").matches(ctorNode, null));
File Name: ./test/com/google/javascript/refactoring/MatchersTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mknichel): When types are used in templates that do not appear in the
// compilation unit being processed, the template type will be a named type
// that resolves to unknown instead of being a no resolved type. This should
// be fixed in the compiler such that it resolves to a no resolved type, and
// then this code can be simplified to use that.
File Name: ./src/com/google/javascript/jscomp/TemplateAstMatcher.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(mlourenco): Ideally this would be in getChecks() instead of getOptimizations(). But
// for that it needs to understand constant properties as well. See b/31301233#10.
// Needs to happen after inferConsts and collapseProperties. Detects whether invocations of
// the method goog.string.Const.from are done with an argument which is a string literal.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): Convert this to an if statement for better optimization
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): Enable this
//parse("class Foo {\n  constructor(public bar) {}}");
File Name: ./test/com/google/javascript/jscomp/parsing/TypeSyntaxTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): For block-scoped function declaration, we should technically
// warn if we are in non-strict mode and the language mode is ES5 or below.
File Name: ./test/com/google/javascript/jscomp/lint/CheckUselessBlocksTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): Maybe correct the arity of the function type here.
File Name: ./src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): Support canceling all parsing on the first halting error
File Name: ./src/com/google/javascript/jscomp/PrebuildAst.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): There's no need to tag methods with @abstract in interfaces, maybe give a warning
// on this.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): This is to show that the current optimization might break if the input has block
// scoped declarations. We will need to fix the logic for removing blocks to account for this.
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): This needs to change when we optimize for ES6. The block might need to be
// preserved in the presence of block-scoped declarations.
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(moz): This should not call getScope(). We should find the root of the closest hoist
// scope and effectively getScope() from there, which avoids scanning inner scopes that might
// not be needed.
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Add a precondition check here. People are passing
// in null, but they should not be.
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Add something to check for calls of RegExp objects,
// which is not supported by IE. Either say something about the return type
// or warn about the non-portability of the call or both.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Create a common mutation function that
// can replace either a VAR name assignment, assignment expression or
// a EXPR_RESULT.
File Name: ./src/com/google/javascript/jscomp/FunctionInjector.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Fix this so that the doc info always shows up
// on the NAME node. We probably want to wait for the parser
// merge to fix this.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Handle this correctly if we have a UnionType.
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Implement me.
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Make NameAnalyzer smarter, so that we can eliminate y.
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Make this an error.
File Name: ./test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Make this emit a warning, because of the 'this' type.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): Maybe generalize this to a continuation mechanism
// like in RemoveUnusedVars.
File Name: ./src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): There's a bug where the template name T clashes between
// D and C.
//assertEquals("boolean", findNameType("result2", globalScope).toString());
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): This behavior is currently incorrect.
// To handle this case properly, we'll need to change how we handle
// type resolution.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): This is actually bad inference, because
// h sets x to null. We should fix this, but for now we do it
// this way so that we don't break existing binaries. We will
// need to change TypeInference#isUnflowable to fix this.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): This isn't the right place to do this check. We
// really want to do this when we're looking at the constructor.
// We'd find all its properties and make sure they followed inheritance
// rules, like we currently do for @implements to make sure
// all the methods are implemented.
//
// As-is, this misses many other ways to override a property.
//
// object.prototype = { key: function() {} };
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): We do not currently type-check the arguments
// of the goog.bind.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): We should be able to make the graph more fine-grained
// here. Instead of Foo.prototype.bar creating a global reference to Foo,
// it should create a reference from .bar to Foo. That will let us
// compile this away to nothing.
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedPrototypePropertiesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): assertOnChange should only be true if the tree
// is normalized.
File Name: ./src/com/google/javascript/jscomp/Normalize.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nicksantos): fix this.
File Name: ./src/com/google/javascript/rhino/jstype/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nnaze): Consider putting bit-fiddling logic in a reusable
// location.
File Name: ./src/com/google/javascript/rhino/JSDocInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(nnaze): Use of addDependency() should someday cause a warning
// as we migrate users to explicit goog.forwardDeclare() calls.
File Name: ./src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(peterhal): @template types.
File Name: ./src/com/google/javascript/jscomp/SymbolTable.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(radokirov): The compiler should be removing statics too, but in this case they are
// kept. A similar unittest in RemoveUnusedClassPropertiesTest removes everything.
// Investigate why are they kept when ran together with other passes.
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): Initialize *all* the options here, but first we must ensure no subclass
// is changing them in the constructor, rather than in their own setUp method.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): NTI currently fails to infer the result of the baz() call (b/37351897)
// so we handle it more carefully.  When methods are deferred, this should be changed
// to check that it's exactly unknown.
File Name: ./test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): NTI currently infers that a is a string, allowing the peephole pass
// to rewrite substring to charAt.  We need to figure out if this is desirable.
File Name: ./test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): This would be better as a defender method once Java 8 is allowed (b/28382956):
//     void DependencyInfo#writeAddDependency(Appendable);
/** Prints a goog.addDependency call for a single DependencyInfo. */
File Name: ./src/com/google/javascript/jscomp/deps/DependencyInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): We're currently stuck on an earlier version of Truth that doesn't
// provide MapSubject#containsExactly(Object, Object, Object...), and it is very
// hard to upgrade due to parallel ant and maven builds.  Once this restriction
// is lifted and we can depend on a newer Truth, these assertions should be
// changed to assertThat(info.getLoadFlags()).containsExactly(...)
File Name: ./test/com/google/javascript/jscomp/LazyParsedDependencyInfoTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): checkState(!forAnnotations) all
File Name: ./src/com/google/javascript/jscomp/newtypes/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(sdh): this is supposed to be relative to the given class, but
// GWT can't handle that - probably better to remove the class argument
// and just require that paths be relative to c.g.javascript.jscomp.
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/jscomp/ResourceLoader.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Add "const Animal = " before the goog.require and change
// world.util.Animal to Animal
File Name: ./test/com/google/javascript/refactoring/ErrorToFixMapperTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Also fix column numbers.
File Name: ./src/com/google/javascript/jscomp/parsing/TypeTransformationParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Avoid calling t.getScope() here, so that we aren't creating scopes we
// don't need to.
File Name: ./src/com/google/javascript/jscomp/HoistVarsOutOfBlocks.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Can we tighten this to allow only ROOT nodes?
File Name: ./src/com/google/javascript/jscomp/Scope.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Can we tighten this to just NodeUtil.createsScope?
File Name: ./src/com/google/javascript/jscomp/Scope.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Check this in a separate pass, so that users get the error even if
// optimizations are not running.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Consider adding externs to 'this' instead of 'window',
// for environments where the global object is not called 'window.'
File Name: ./src/com/google/javascript/jscomp/DeclaredGlobalExternsOnWindow.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Consider warning for this. It's valid but likely indicates a mistake.
File Name: ./test/com/google/javascript/jscomp/Es6SuperCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Delete this hack when strictMissingRequire is
// renamed to missingRequire.
File Name: ./src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Fix and re-enable.
//fold("x = foo() || false || bar()", "x = foo()||bar()");
//fold("x = foo() && true && bar()", "x = foo()&&bar()");
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Fix and re-enable.
//assertNodeEquality(
//    parse("x = 1\n;y = 2"),
//    parse("x = 1; y = 2;"));
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Get rid of this null check once all tests pass without it.
File Name: ./src/com/google/javascript/jscomp/JSError.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Remove the "if" and add this JSDoc unconditionally.
File Name: ./src/com/google/javascript/jscomp/Es6RewriteDestructuring.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Should we also include the filename where ownerType is defined?
File Name: ./src/com/google/javascript/jscomp/CheckAccessControls.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Since the function doesn't reference `this` at all, we could convert
// to just "function() { console.log('hello'); }" for non-ES6 code, either in this refactoring,
// or possibly as a separate one ("RemoveUnnecessaryGoogBind").
File Name: ./test/com/google/javascript/refactoring/examples/GoogBindToArrowTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): This should be a missing-require error.
File Name: ./test/com/google/javascript/jscomp/MissingRequireTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Warn for @extends too. We need to distinguish between cases like this
// which are totally redundant...
File Name: ./test/com/google/javascript/jscomp/lint/CheckJSDocStyleTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tbreisacher): Warn if this is used in code, but not if it's used in a type annotation.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tdeegan): Handle absolute urls here.  The compiler needs to come up with a scheme for
// properly resolving absolute urls from http:// or the root /some/abs/path/... See b/62544959.
File Name: ./src/com/google/javascript/jscomp/SourceMapResolver.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tdeegan): Handle urls relative to //# sourceURL. See the sourcemap spec.
File Name: ./src/com/google/javascript/jscomp/SourceMapResolver.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tdeegan): Not yet. Propagate local object information.
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tdeegan): Revisit this.
File Name: ./test/com/google/javascript/jscomp/NodeUtilTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tdeegan): updateA is side effect free.
// Calling a function of a local object that taints this.
File Name: ./test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(tylerg): handle this for multiple modules at some point.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user) - for MAPPED, only the first character is reserved which
// can be used to further optimize
File Name: ./src/com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user) Fix issue similar to b/2316773: bar should be preserved
// but isn't due to missing references between e and foo.a
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user) Make NameAnalyzer smarter so it can remove "Class".
File Name: ./test/com/google/javascript/jscomp/NameAnalyzerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user) The code only works if there is a single definition associated with a property
// name.
// Whatever scheme we use should not break stable renaming.
File Name: ./src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user) to prevent orphan goog.provide calls, the pass would have to
// account for enums, static functions and constants
File Name: ./test/com/google/javascript/jscomp/CheckProvidesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): A constructor which doesn't have an instance type
// (e.g. it's missing the @constructor annotation) should be an invalidating
// type which doesn't reach this code path.
File Name: ./src/com/google/javascript/jscomp/AmbiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Add tests for these after typecheck supports class.
File Name: ./test/com/google/javascript/jscomp/StrictModeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Calling clear doesn't deallocate the memory in a
// LinkedHashSet. Consider creating a new work set if we plan to repeatedly
// call analyze.
File Name: ./src/com/google/javascript/jscomp/DataFlowAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Have a infinite loop warning instead.
File Name: ./test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): If you look outside of just liveness, x = {} is dead.
// That probably requires value numbering or SSA to detect that case.
File Name: ./test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Investigate whether it is really necessary to keep two
// different mechanisms for resolving named types, and if so, which order
// makes more sense. Now, resolution via registry is first in order to
// avoid triggering the warnings built into the resolution via properties.
File Name: ./src/com/google/javascript/rhino/jstype/NamedType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): It is much cleaner to have two algorithms depending
// on favorsCommaOverSemiColon. If we decided the less aggressive one is
// no longer useful, delete it.
File Name: ./src/com/google/javascript/jscomp/StatementFusion.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): It is possible to cover this case with the same algorithm
//                as the missing return check.
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): It is possible to get more information if curNode or
// its parent is missing. We still have the scope stack in which it is still
// very useful to find out at least which function caused the exception.
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): It would be nice to warn for using 'this' here
File Name: ./test/com/google/javascript/jscomp/CheckGlobalThisTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Its possible to fold this better.
File Name: ./test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Make CollapseProperties even more aggressive so that
// a$b.z gets collapsed. Right now, it doesn't get collapsed because the
// expression (a.b && a.b.c) could return a.b. But since it returns a.b iff
// a.b *is* safely collapsible, the Boolean logic should be smart enough to
// only consider the right side of the && as aliasing.
File Name: ./test/com/google/javascript/jscomp/CollapsePropertiesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Make this save to file OR output to the application
File Name: ./src/com/google/javascript/jscomp/AliasStrings.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Maybe compute it somewhere else and re-use the escape
// local set here.
File Name: ./src/com/google/javascript/jscomp/MaybeReachingVariableUse.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Optimize this.
File Name: ./test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Push every local type name out of namesToTypes so that
// NamedType#resolve is correct.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Reverse this logic to make it correct instead of generous.
File Name: ./src/com/google/javascript/rhino/jstype/UnionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Revisit this for ES4, which is stricter.
File Name: ./src/com/google/javascript/rhino/jstype/BooleanType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Revisit this for ES4, which is stricter.
File Name: ./src/com/google/javascript/rhino/jstype/NumberType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Revisit this for ES4, which is stricter.
File Name: ./src/com/google/javascript/rhino/jstype/StringType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): The current algorithm will not detect this case. It is
// still computable in most cases.
File Name: ./test/com/google/javascript/jscomp/CheckMissingReturnTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): This forces a first crack at crossModuleCodeMotion
// before devirtualization. Once certain functions are devirtualized,
// it confuses crossModuleCodeMotion ability to recognized that
// it is recursive.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): This implementation currently does not make use of the column
// parameter.
File Name: ./src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): This is meant for a temporary quick win.
// In the future, we might want to improve our analysis in
// CrossModuleCodeMotion so we don't need to do this.
File Name: ./src/com/google/javascript/jscomp/DefaultPassConfig.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): This must know about ON_EX edges but it should handle
// it better than what we did in liveness. Because we are in a forward mode,
// we can used the branched forward analysis.
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): This should be detected as an error. Even if we enforce
// that A cannot be used in the assignment, we should still detect the
// inheritance chain as invalid.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Use bit vector instead of maps might get better
// performance. Change it after this is tested to be fully functional.
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): Very good place to store this information somewhere.
File Name: ./src/com/google/javascript/jscomp/DataFlowAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): We CAN do this in the global scope, just need to be
// careful when something is exported. Liveness uses bit-vector for live
// sets so I don't see compilation time will be a problem for running this
// pass in the global scope.
File Name: ./src/com/google/javascript/jscomp/CoalesceVariableNames.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): We are doing a straight copy from input to output. There
// might be some opportunities to cut down overhead.
File Name: ./src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): While the helpers do a subtree traversal on the AST, the
// compiler pass itself only traverse the AST to look for function
// declarations to perform dataflow analysis on. We could combine
// the traversal in DataFlowAnalysis's computeEscaped later to save some
// time.
File Name: ./src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): a deterministic warning should be generated for this
// case since x && x is always false. The implementation of this requires
// a more precise handling of a null value within a variable's type.
// Currently, a null value defaults to ? which passes every check.
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): check that hash code collisions are handled.
File Name: ./test/com/google/javascript/jscomp/AliasStringsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): checkTreeEqual is overkill. I am in process of rewriting
// these functions.
File Name: ./src/com/google/javascript/jscomp/ReplaceMessages.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): regex literals as well.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): remove custom toString.
File Name: ./src/com/google/javascript/jscomp/JSError.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): remove extra conditions when type annotations
// in the code base have adapted to the change in the compiler.
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): remove this short-circuiting in favor of a
// pre order traversal of the FUNCTION, CATCH, PARAM_LIST and VAR nodes.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): suppress {duplicate} currently also silence the
// redefining type error in the TypeValidator. Maybe it needs
// a new suppress name instead?
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(user): {1} and {2} are not exactly useful for most people.
File Name: ./src/com/google/javascript/jscomp/DisambiguateProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO(vitalyp): Check namespace name for validity here. It should be a valid chain of
// identifiers.
File Name: ./src/com/google/javascript/jscomp/ChromePass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO: Either remove, fix this, or document it as a limitation of advanced mode optimizations.
File Name: ./test/com/google/javascript/jscomp/RemoveUnusedClassPropertiesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO: Need tuple types (heterogeneous arrays) to be able to catch this error.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceWithTranspilationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO: identifier part character classes
// CombiningMark
//   Non-Spacing mark (Mn)
//   Combining spacing mark(Mc)
// Connector punctuation (Pc)
// Zero Width Non-Joiner
// Zero Width Joiner
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO: straighten this out
File Name: ./src/com/google/javascript/jscomp/parsing/parser/TokenType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     // TODO: there are other Unicode Category 'Zs' chars that should go here.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/Scanner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     fold("a=+(f?true:false)", "a=+(f?1:0)"); // TODO(johnlenz): foldable
File Name: ./test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     if (mode != Mode.SINGLE_FILE) {  // TODO(tbreisacher): Fix violations and remove this check.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     parse("var str = '\\$'");  // TODO(tbreisacher): We should warn for this case.
File Name: ./test/com/google/javascript/jscomp/parsing/ParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     private final int maxLine; // TODO(johnlenz): This shouldn't be necessary to track.
File Name: ./src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     return c > 127; // TODO(moz): Correct this.
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     return true; // TODO(johnlenz): restrict to objects
File Name: ./src/com/google/javascript/rhino/jstype/CanCastToVisitor.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:     testSame("var {x} = {};"); // TODO(moz): Maybe add a warning for this case
File Name: ./test/com/google/javascript/jscomp/VariableReferenceCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(anatol): Add stream hashing functionality.
*/
File Name: ./src/com/google/javascript/jscomp/JsMessage.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(bradfordcsmith): Rename this to parse()
*/
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(bradfordcsmith): Rename this to parseIndependentOfCompilation() or similar.
*/
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(moz): Let ES6, CommonJS and goog.provide live happily together.
*/
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(sdh): is there a reason not to build this optimization directly
* into JSType#substituteGenerics?
*/
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO(user) revisit. it would be helpful to at least use fully qualified names in the case of
* namespaces. Might not matter as much if this pass runs after {@link CollapseProperties}.
*/
File Name: ./src/com/google/javascript/jscomp/NameBasedDefinitionProvider.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * <p>TODO: This hack is mostly for the purpose of preventing untyped stubs from showing up in the
* {@link PureFunctionIdentifier} and causing unkown side effects from propagating everywhere.
* This should probably be solved in one of the following ways instead:
*
* <p>a) Have a pass ealier in the compiler that goes in and removes these stub definitions.
*
* <p>b) Fix all extern files so that there are no untyped stubs mixed with typed ones and add a
* restriction to the compiler to prevent this.
*
* <p>c) Drop these stubs in the {@link PureFunctionIdentifier} instead. This "DefinitionProvider"
* should not have to drop definitions itself.
*/
File Name: ./src/com/google/javascript/jscomp/NameBasedDefinitionProvider.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * Returns whether the name node for this reference is an lvalue. TODO(tbreisacher): This method
* disagrees with NodeUtil#isLValue for "var x;" and "let x;". Consider updating it to match.
*/
File Name: ./src/com/google/javascript/jscomp/Reference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(ChadKillingsworth) Add support for object literals
*/
File Name: ./src/com/google/javascript/jscomp/CheckSideEffects.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(aravindpg): This may be unsuitable from a typing point of view.
* Revisit if needed.
*/
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(blickly): Move this logic out of this pass, since it is independent of whether or
* not we are actually transpiling modules
*/
File Name: ./src/com/google/javascript/jscomp/Es6RewriteModules.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(bradfordcsmith): Just check for a single module instead of null.
*/
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(dcc): Don't merge parameters with the heap unless necessary.
*
* Internally, abstract locations are represented as integers
* with bits set (masks) representing the storage classes in the location, so
* that joining is bit-wise ORing and intersection is bitwise AND.
*/
File Name: ./src/com/google/javascript/jscomp/SideEffectsAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(dimvar): After deleting the old type checker, change the signature of this and other
* methods in TypeI to stop using wildcards.
*/
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(dimvar): handle greatest lower bound of interface types.
* If we do that, we need to normalize the output, otherwise it could
* contain two object types that are in a subtype relation, e.g., see
* {@link NewTypeInferenceTest#testDifficultObjectSpecialization}.
*/
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(dimvar): this could have a better name, but it's used by non-compiler code.
* Rename in a follow-up CL.
*
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(kushal): Cache the results of the checks
*/
File Name: ./src/com/google/javascript/jscomp/InlineSimpleMethods.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(nicksantos): Remove this option.
*/
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(nicksantos): Write a builder to help JSCompiler induce
*    {@code replacements} from command-line flags
*
* @param replacements A hash table of names of defines to their replacements.
*   All replacements <b>must</b> be literals.
*/
File Name: ./src/com/google/javascript/jscomp/ProcessDefines.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(sdh): explain a bit more concretely how this is different from meet.
*/
File Name: ./src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO(user): Move this method to the SemanticRAI and use the visit
* method of types to get the restricted type.
*/
File Name: ./src/com/google/javascript/rhino/jstype/JSType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * TODO: This could be greatly improved.
*
* @return Whether the jstype is something known to be a local value.
*/
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * is essentially a "TODO(tbreisacher): Implement {@code feature}" comment.
*/
File Name: ./src/com/google/javascript/jscomp/Es6RewriteClass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:    * is essentially a "TODO(tbreisacher): Implement {@code feature}" comment.
*/
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO (stephshi): rename to "traverse" when the old traverse method is no longer used
File Name: ./src/com/google/javascript/jscomp/NodeTraversal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(aravindpg): might be better to define a PropertyI interface and
// then have a more general-purpose getProperty method here.
File Name: ./src/com/google/javascript/rhino/ObjectTypeI.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(bashir) It would be good to extract a single dumb data object with
// only getters and setters that keeps all global information we keep for a
// compiler instance. Then move some of the functions of this class there.
File Name: ./src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(bellashim): Add a non-transpiling version of this test when InlineFunctions
// can run in that mode.
File Name: ./test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(blickly): Move to NodeUtil if it makes more sense there.
File Name: ./src/com/google/javascript/jscomp/ConvertToTypedInterface.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(blickly): Separate this so it can be part of the normalization early transpilation passes.
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(bradfordcsmith): Investigate how can we use multi-threads as default.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dankurka): Switch to our general util once available
// JsMethod to prevent mangling
File Name: ./src/com/google/debugging/sourcemap/SourceMapObjectParserJs.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dankurka): Use elemental2 here once available
File Name: ./src/com/google/debugging/sourcemap/SourceMapObjectParserJs.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dcc): Some (all) of these can probably be better achieved
// using the control flow graph (like CheckUnreachableCode).
// There is an existing CFG pass (UnreachableCodeElimination) that
// could be changed to use code from CheckUnreachableCode to do this.
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): Check for which of these warnings it makes sense to keep
// going after warning, eg, for NOT_UNIQUE_INSTANTIATION, we must instantiate
// to the join of the types.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): Either INEXISTENT_PROPERTY shouldn't be here, or we should
// change DiagnosticGroups.setWarningLevel to not accidentally enable it.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): Eventually attach these to nodes, like the current types.
File Name: ./src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): Some methods in this interface are polymorphic because they are used
// in compiler passes mixed with the old type system.
// Polymorphism avoids the need for casting in many cases (fewer casts in java 8 than in java 7).
// After all non-type-checking passes use TypeI, we should make these methods not polymorphic.
//
// We considered defining the interface as TypeIRegistry<T extends TypeI>, but it would only
// help with getNativeType and getType, not with the other methods, and it would increase
// verbosity in all places that use the interface.
File Name: ./src/com/google/javascript/rhino/TypeIRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): This may prove to be too strict, may revisit.
File Name: ./src/com/google/javascript/jscomp/newtypes/JSTypeCreatorFromJSDoc.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): To get the adjusted end-of-fwd type for objs, we must be
// able to know whether a property was added during the evaluation of the
// function, or was on the object already.
File Name: ./src/com/google/javascript/jscomp/NewTypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): generate-exports should always run after typechecking.
// If it runs before, it adds a bunch of properties to Object, which masks
// many type warnings. Cleanup all clients and remove this.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): if having this field on every property wastes memory,
// consider alternatives:
// 1) Subclass Property for the few ones that have jsdoc.
// 2) Store the jsdocs scattered in NominalType and Namespace.
//    This is hard b/c for objlit namespaces, we don't keep around the
//    Namespace class in NTI; they're plain-old object literals.
File Name: ./src/com/google/javascript/jscomp/newtypes/Property.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): instead, we want to evaluate the TTL variables when the non-TTL variables are
// unknown, and use that for the declaredType. Will try in a follow-up CL.
File Name: ./src/com/google/javascript/jscomp/NTIScope.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): merge these two if possible.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeNative.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): we must warn when a THIS fun isn't called as a method
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): we need to clean up the combination of loose functions with
// new: and/or this: types. Eg, this.nominalType doesn't appear at all.
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(dimvar): we skip the backwards analysis of g (and thus the creation of deferred checks)
// when the return type of a function is declared (see NTIScope#hasUndeclaredFormalsOrOuters).
// Is it worth having a more accurate test for determining whether a DeclaredFunctionType is
// missing information, to catch cases like this one?
// It should be uncommon in practice to declare the return and not declare the parameters.
File Name: ./test/com/google/javascript/jscomp/NewTypeInferenceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(goktug): Create a utility to share this logic and start using getQualifiedOriginalName.
File Name: ./src/com/google/javascript/jscomp/J2clConstantHoisterPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(jlklein): Add more complex test cases and verify behaviors and descriptors.
File Name: ./test/com/google/javascript/jscomp/PolymerClassDefinitionTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(jlklein): Add tests for non-global definitions, interface externs, read-only setters, etc.
File Name: ./test/com/google/javascript/jscomp/PolymerClassRewriterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(jlklein): Add unit tests for remaining util functions.
File Name: ./test/com/google/javascript/jscomp/PolymerPassStaticUtilsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(jlklein): Switch back to an error when everyone is upgraded to Polymer 1.0
File Name: ./src/com/google/javascript/jscomp/PolymerPassErrors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(jlklein): Test more use cases: names to avoid copying, global vs. non-global, etc.
File Name: ./test/com/google/javascript/jscomp/PolymerBehaviorExtractorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): "goog$global" should be part of a coding convention.
// Note: GatherRawExports runs after property renaming and
// collapse properties, so the two entries here protect goog.global in the
// two common cases "collapse properties and renaming on" or both off
// but not the case where only property renaming is on.
File Name: ./src/com/google/javascript/jscomp/GatherRawExports.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): A syntax for stubs using object literals?
File Name: ./test/com/google/javascript/jscomp/TypedScopeCreatorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): Add tests to the IntegrationTest.
File Name: ./test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): Add unit tests for:
//    inject
//    getFunctionCallParameterMap
File Name: ./test/com/google/javascript/jscomp/FunctionArgumentInjectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): Consider adding a post optimization pass to
// convert OR into HOOK to save parentheses when the operator
// precedents would require them.
File Name: ./test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): Consider moving this to a separate peephole pass.
/**
* Attempt to replace the condition of if or hook immediately that is a
* reference to a name that is assigned immediately before.
*/
File Name: ./src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): Re-enable these tests (they are a bit tricky).
File Name: ./test/com/google/javascript/jscomp/ClosureCheckModuleTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): This is not currently used by the function inliner,
// as moving the call out of the expression before the actual function call
// causes additional variables to be introduced.  As the variable
// inliner is improved, this might be a viable option.
/**
* Extract the specified expression from its parent expression.
* @see #canExposeExpression
*/
File Name: ./src/com/google/javascript/jscomp/ExpressionDecomposer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): This leaks scope object for scopes removed from the AST.
// Soon we will track removed function nodes use that to remove scopes.
File Name: ./src/com/google/javascript/jscomp/IncrementalScopeCreator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): We no longer make this check, but we should.
File Name: ./src/com/google/javascript/jscomp/TypeInference.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): add a unit test for templated "this" values.
File Name: ./test/com/google/javascript/jscomp/CheckConformanceTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): consider adding an extern annotation for this.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): handle non-namespace module identifiers aka 'foo/bar'
File Name: ./src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): make this a abstract class with a private constructor
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): make this part of the general graph interface.
/**
* DiGraphNode look ups can be expensive for a large graph operation, prefer this
* method if you have the DiGraphNode available.
*/
File Name: ./src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): optimizations should not be emiting errors. Move these to
// a check pass.
File Name: ./src/com/google/javascript/jscomp/PeepholeFoldConstants.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): quoted props
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): remove "currentScope".
// Used as a shortcut for change tracking.  This is the current scope being
// visited by the "current" NodeTraversal.  This can't be thread safe so
// we should move it into the NodeTraversal and require explicit changed
// nodes elsewhere so we aren't blocked from doing this elsewhere.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): remove "get" and "set" filename.  clients needing this should be
// creating "SourceFile" objects directly.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): remove this constant once this has been proven in
// production code.
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): remove this once GWT has a proper PrintStream implementation
File Name: ./src/com/google/javascript/jscomp/gwt/client/GwtRunner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): the rest of the ops
File Name: ./src/com/google/javascript/rhino/IR.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): this is a direct copy of the invalidation code
// from AmbiguateProperties, if in the end we don't need to modify it
// we should move it to a common location.
File Name: ./src/com/google/javascript/jscomp/InlineProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(johnlenz): verify we want both template and class template lists instead of a unified
// list.
File Name: ./src/com/google/javascript/jscomp/FunctionTypeBuilder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(kevinoconnor): Try to give special treatment to constructor, else remove this field
// and cleanup dead code.
File Name: ./src/com/google/javascript/jscomp/DeadPropertyAssignmentElimination.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(michaelthomas): Prune clinit calls in functions, if previous functions or the immediate
// next function guarantees clinit call. With that we won't need this pass.
/**
* Prunes clinit calls which immediately precede calls to a static function which calls the same
* clinit. e.g. "Foo.clinit(); return new Foo()" -> "return new Foo()"
*/
File Name: ./src/com/google/javascript/jscomp/J2clClinitPrunerPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(mknichel): Add matchers for:
// - Constructor with argument types
// - Function call with argument types
// - Function definitions.
// - Property definitions, references
// - IsStatic
// - JsDocMatcher
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(mknichel): Make sure all this code works with goog.scope.
File Name: ./src/com/google/javascript/refactoring/Matchers.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(moz): Support full range of valid characters.
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nick): Get rid of the knownConstants argument in favor of using
// scope with InferConsts.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): All public properties of this class should be made
// package-private, and have a public setter.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): Decide if all of these are really necessary.
// Many of them are just accessors that should be passed to the
// CompilerPass's constructor.
File Name: ./src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): Decide which parts of these belong in an AbstractCompiler
// interface, and which ones should always be injected.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): Generalize the algorithm for undirected graphs, if we
// need it.
File Name: ./src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): Provide accessors to better filter the list of type
// mismatches. For example, if we pass (Cake|null) where only Cake is
// allowed, that doesn't mean we should invalidate all Cakes.
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): Remove addProvide/addRequire/removeRequire once
// there is better support for discovering non-closure dependencies.
File Name: ./src/com/google/javascript/jscomp/CompilerInput.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): The current implementation tries to maintain backwards
// compatibility with previous versions of the spec whenever we can.
// We should try to gradually withdraw support for these.
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): The semantics of this method are ill-defined. Delete it.
File Name: ./src/com/google/javascript/rhino/Node.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): This is a weird API.
File Name: ./src/com/google/javascript/jscomp/WhitelistWarningsGuard.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): This needs to be completely rewritten to use scopes
// to do variable lookups. Right now, it assumes that all functions are
// uniquely named variables. There's currently a stopgap scope-check
// to ensure that this doesn't produce invalid code. But in the long run,
// this needs a major refactor.
File Name: ./src/com/google/javascript/jscomp/InlineFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): TypeCheck should never be attaching types to nodes.
// All types should be attached by TypeInference. This is not true today
// for legacy reasons. There are a number of places where TypeInference
// doesn't attach a type, as a signal to TypeCheck that it needs to check
// that node's type.
File Name: ./src/com/google/javascript/jscomp/TypeCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): change this to something that makes sense.
/   public void testComparison1() throws Exception {
/     testTypes("/**@type null */var a;" +
/         "/**@type !Date */var b;" +
/         "if (a==b) {}",
/         "condition always evaluates to false\n" +
/         "left : null\n" +
/         "right: Date");
/   }
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(nicksantos): should these be node annotations?
File Name: ./src/com/google/javascript/jscomp/ControlFlowAnalysis.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(rluble): Serialize this field. If this field is serialized naively, a cycle is introduced
// which results in NPE when attempting to deserialize an HashSet that contains object that are
// only partially deserialized.
File Name: ./src/com/google/javascript/jscomp/newtypes/RawNominalType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): Add a test for import with .js suffix once #1897 is fixed.
File Name: ./test/com/google/javascript/jscomp/deps/JsFileParserTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): Consider simplifying this by reusing the parser or a separate JSON library.
/**
* Parses a JavaScript map of string literals. (eg: {'a': 'b', "c": "d"}).
* @param input A string containing a JavaScript map of string literals.
* @return A map of parsed string literals.
* @throws ParseException Thrown if there is a syntax error with the input.
*/
File Name: ./src/com/google/javascript/jscomp/deps/JsFileLineParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): Remove this option if there's never a reason to turn it on.
File Name: ./test/com/google/javascript/jscomp/CompilerTestCase.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): Replace calls of toAnnotationString with toNonNullAnnotationString and
// then substring off any leading '!' if necessary.  Then delete toAnnotationString
// and consider renaming toNonNullAnnotationString as simply toAnnotationString.
/**
* Returns a string representation of this type, suitable for printing
* in type annotations at code generation time.  In particular, explicit
* non-null modifiers will be added to implicitly nullable types (except
* the outermost type, which is expected to be a reference type).
*/
File Name: ./src/com/google/javascript/rhino/TypeI.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): Replace isWellKnownSymbol with a real type-based
// check once the type system understands the symbol primitive.
// Any @const symbol reference should be allowed for a @struct.
File Name: ./src/com/google/javascript/jscomp/TypeValidator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): This cache should be moved out into a higher level, but is
// currently required due to the API that source maps must be accessible
// via just a path (and not the file contents).
File Name: ./src/com/google/javascript/jscomp/deps/ClosureBundler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): This whole method could be deleted if we don't mind adding
// additional @this annotations where they're not actually necessary.
/**
* Given a method definition node, returns the {@link ObjectTypeI} corresponding
* to the class the method is defined on, or null if it is not a prototype method.
*/
File Name: ./src/com/google/javascript/jscomp/TypedCodeGenerator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): When OTI is gone, these can be renamed to simply isString and isNumber
// (provided we have sufficiently clear JavaDoc to specify that it does *not* include
// the object wrapper type).
/**
* Whether the type is a scalar string. In OTI, the isString method returns true for String
* objects as well.
*/
File Name: ./src/com/google/javascript/rhino/TypeI.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): how to specify naming scheme for sourcemap and original?
//  - if we're not embedding then we need to know how to find them.
//  - probabaly we'll keep 'path' pointing to the original, since that's
//    what's more important and harder to find - we can add some suffix
//    on for the transpiled version as necessary.
File Name: ./src/com/google/javascript/jscomp/transpile/TranspileResult.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): make this method static to emphasize parameter symmetry.
File Name: ./src/com/google/javascript/jscomp/newtypes/FunctionType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): might be a bit nicer for this to be a suffix rather than a whole path?
File Name: ./src/com/google/javascript/jscomp/transpile/TranspileResult.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): migrate callers away and deprecate this constructor
File Name: ./src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(sdh): this is less useful if we end up needing the node for library version detection
File Name: ./src/com/google/javascript/jscomp/parsing/ParserRunner.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Add a method for detecting nodes injected as runtime libraries.
File Name: ./src/com/google/javascript/jscomp/NodeUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Consider moving UNUSED_LOCAL_ASSIGNMENT into its own check pass, so
// that we can run it after goog.scope processing, and get rid of the inGoogScope check.
File Name: ./src/com/google/javascript/jscomp/VariableReferenceCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Deprecate this and keep just the "visibility" group.
File Name: ./src/com/google/javascript/jscomp/DiagnosticGroups.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Disallow nullable types here. If someone writes
// "@this {Foo}" in their JS we automatically treat it as though they'd written
// "@this {!Foo}". But, if the type node is created in the compiler
// (e.g. in the WizPass) we should explicitly add the '!'
/**
* Records a type for {@code @this} annotation.
*
* @return {@code true} if the type was recorded and
*     {@code false} if it is invalid or if it collided with {@code @enum} or
*     {@code @type} annotations
*/
File Name: ./src/com/google/javascript/rhino/JSDocInfoBuilder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Do this for all well-known symbols.
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Investigate and see if we can improve this.
File Name: ./test/com/google/javascript/jscomp/InlineVariablesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Make this package-private by refactoring tests so they
// don't need to call it directly.
File Name: ./src/com/google/javascript/refactoring/RefactoringDriver.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Re-enable this test when we drop Ant.
File Name: ./test/com/google/javascript/jscomp/CommandLineRunnerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Remove this and deprecate the corresponding setter.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Remove this and just use MISSING_REQUIRE_WARNING.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Remove this method after ctemplate issues are solved.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Remove this once we have implemented transpilation for all the features
// we intend to support.
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): These should be a MISPLACED_ANNOTATION warning instead of silently failing.
File Name: ./test/com/google/javascript/jscomp/CheckJsDocTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): Update CodingConvention.extractClassNameIf{Require,Provide} to match this.
File Name: ./src/com/google/javascript/jscomp/CheckRequiresForConstructors.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tbreisacher): When this is false, report an error if there's a goog.provide
// in an externs file.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(tylerg) : update these to EasyMock style tests once available
File Name: ./test/com/google/javascript/jscomp/ScopedAliasesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): An instance of this class should be used during
// compilation. We also want to make all types' constructors package private
// and force usage of this registry instead. This will allow us to evolve the
// types without being tied by an open API.
File Name: ./src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): If we want to support this syntax we have to warn about
// the invalid type of the interface member.
//public void testWarnDataPropertyOnInterface1() throws Exception {
//  testTypes("/** @interface */ u.T = function () {};\n" +
//      "/** @type {number} */u.T.prototype.x;",
//      "interface members can only be plain functions");
//}
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): If we want to support this syntax we should warn about the
// mismatching types in the two tests below.
//public void testErrorMismatchingPropertyOnInterface1() throws Exception {
//  testTypes("/** @interface */ u.T = function () {};\n" +
//      "/** @param {Number} foo */u.T.prototype.x =\n" +
//      "/** @param {String} foo */function(foo) {};",
//      "found   : \n" +
//      "required: ");
//}
//
//public void testErrorMismatchingPropertyOnInterface2() throws Exception {
//  testTypes("/** @interface */ function T() {};\n" +
//      "/** @return {number} */T.prototype.x =\n" +
//      "/** @return {string} */function() {};",
//      "found   : \n" +
//      "required: ");
//}
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): Maps scope to string instead of Node to string.
// Make sure of scope memorization to minimize scope creation cost.
File Name: ./src/com/google/javascript/jscomp/ShadowVariables.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): Maybe we don't need a HashMap to look up.
// I started writing a skip-list like data-structure that would let us
// have O(1) favors() and O(1) reset() but the code got very messy.
// Lets start with a logical implementation first until performance becomes
// a problem.
File Name: ./src/com/google/javascript/jscomp/DefaultNameGenerator.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): Rename this pass to PeepholeReorderConstantExpression
// to follow our naming convention.
File Name: ./src/com/google/javascript/jscomp/ReorderConstantExpression.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): These should be inlinable after the REGEX checks.
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): These should be inlinable.
File Name: ./test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): This is temporary. Once flow sensitive inlining is stable
// Remove this.
File Name: ./src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): This should work for undirected graphs when
// FixedPointGraphTraversal accepts them.
File Name: ./src/com/google/javascript/jscomp/graph/GraphReachability.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): Try eliminating the need for a list of strip names by instead
// recording which field names are assigned to debug types in each JS input.
File Name: ./src/com/google/javascript/jscomp/StripCode.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): We can use DefinitionsRemover and UseSite here. Then all
// we need to do is call getDefinition() and we'll magically know everything
// about the definition.
File Name: ./src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): We probably need to test this more. The current compiler
// assumes that there are more ;'s than ,'s in a real program. However,
// this assumption may be incorrect. We can probably do a quick traverse
// to check this assumption if that's necessary.
File Name: ./src/com/google/javascript/jscomp/StatementFusion.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): We should flag these as invalid. This will probably happen
// when we make sure the interface is never referenced outside of its
// definition. We might want more specific and helpful error messages.
//public void testWarningOnInterfacePrototype() throws Exception {
//  testTypes("/** @interface */ u.T = function() {};\n" +
//      "/** @return {number} */ u.T.prototype = function() { };",
//      "e of its definition");
//}
//
//public void testBadPropertyOnInterface1() throws Exception {
//  testTypes("/** @interface */ u.T = function() {};\n" +
//      "/** @return {number} */ u.T.f = function() { return 1;};",
//      "cannot reference an interface outside of its definition");
//}
//
//public void testBadPropertyOnInterface2() throws Exception {
//  testTypes("/** @interface */ function T() {};\n" +
//      "/** @return {number} */ T.f = function() { return 1;};",
//      "cannot reference an interface outside of its definition");
//}
//
//public void testBadPropertyOnInterface3() throws Exception {
//  testTypes("/** @interface */ u.T = function() {}; u.T.x",
//      "cannot reference an interface outside of its definition");
//}
//
//public void testBadPropertyOnInterface4() throws Exception {
//  testTypes("/** @interface */ function T() {}; T.x;",
//      "cannot reference an interface outside of its definition");
//}
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): We should warn about this (bar is missing an annotation). We
// probably don't want to warn about all missing parameter annotations, but
// we should be as strict as possible regarding interfaces.
//public void testErrorMismatchingPropertyOnInterface3() throws Exception {
//  testTypes("/** @interface */ u.T = function () {};\n" +
//      "/** @param {Number} foo */u.T.prototype.x =\n" +
//      "function(foo, bar) {};",
//      "found   : \n" +
//      "required: ");
//}
File Name: ./test/com/google/javascript/jscomp/TypeCheckTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO(user): extend this class with more tests, as JSTypeRegistry is
// now much larger
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   // TODO: add test cases for isMovableDeclarationStatement()
File Name: ./test/com/google/javascript/jscomp/CrossModuleReferenceCollectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:   //TODO(bellashim):Make the test below pass
File Name: ./test/com/google/javascript/jscomp/InlineFunctionsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  *  TODO(johnlenz): Try to merge this with the ScopeCreator.
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  *  TODO(moz): Handle more ES6 features, such as default parameters.
*/
File Name: ./src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * <p>TODO(ochafik): Add support for `super.x++` (and --, pre/post variants).
*
* @author ochafik@google.com (Olivier Chafik)
*/
File Name: ./src/com/google/javascript/jscomp/DartSuperAccessorsPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * <p>TODO(user):
* This combined pass is currently limited in the type of callbacks it can
* combine due to the difficulty of handling NodeTraversal's methods that
* initiate more recursion (e.g., {@link NodeTraversal#traverse(Node)} and
* {@link NodeTraversal#traverseInnerNode(Node, Node, Scope)}). The
* {@link NodeTraversal} object passed to the individual callbacks should
* be instrumented to emulate the correct behavior. For instance,
* one could create a {@link NodeTraversal} whose
* {@link NodeTraversal#traverseInnerNode(Node, Node, Scope)} ties
* back into this compiler pass to give it context about what combined
* passes are doing.</p>
*
*/
File Name: ./src/com/google/javascript/jscomp/CombinedCompilerPass.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * <p>TODO: This pass could be greatly improved by proper tracking of locals within function bodies.
* Every instance of the call to {@link NodeUtil#evaluatesToLocalValue(Node)} and {@link
* NodeUtil#allArgsUnescapedLocal(Node)} do not actually take into account local variables. They
* only assume literals, primatives, and operations on primatives are local.
*
* @author johnlenz@google.com (John Lenz)
* @author tdeegan@google.com (Thomas Deegan)
*     <p>We will prevail, in peace and freedom from fear, and in true health, through the purity
*     and essence of our natural... fluids. - General Turgidson
*/
File Name: ./src/com/google/javascript/jscomp/PureFunctionIdentifier.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(dimvar): Remove the generic when OTI is gone.
*/
File Name: ./src/com/google/javascript/rhino/TypeIEnv.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(moz): Add GWT compatible super-source replacement
*
*/
File Name: ./src/com/google/javascript/jscomp/OutputCharsetEncoder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(moz): Add a GWT-compatible version in the super-source directory.
*/
File Name: ./src/com/google/javascript/rhino/TokenUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(moz): Make this GWT compatible.
*
*/
File Name: ./src/com/google/javascript/jscomp/XtbMessageBundle.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(moz): Try to use MakeDeclaredNamesUnique
*
* @author moz@google.com (Michael Zhou)
*/
File Name: ./src/com/google/javascript/jscomp/Es6RewriteBlockScopedDeclaration.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(nicksantos): In the initial implementation of this pass, it was
* important to understand namespaced names (e.g., that a.b is distinct from
* a.b.c). Now that this pass comes after CollapseProperties, this is no longer
* necessary. For now, I've changed so that {@code referenceParentNames}
* creates a two-way reference between a.b and a.b.c, so that they're
* effectively the same name. When someone has the time, we should completely
* rip out all the logic that understands namespaces.
*
*/
File Name: ./src/com/google/javascript/jscomp/NameAnalyzer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tbreisacher): Add assertions on the message text, line number, etc.
*/
File Name: ./src/com/google/javascript/jscomp/testing/JSErrorSubject.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tbreisacher): Consider removing this interface, since it now
* has only one class implementing it.
*/
File Name: ./src/com/google/javascript/jscomp/deps/SortedDependencies.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tbreisacher): Move this into the compiler itself (i.e. into the jscomp package). This will
*     make it easier for people adding new warnings to also add fixes for them.
*/
File Name: ./src/com/google/javascript/refactoring/ErrorToFixMapper.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tbreisacher): We can probably nuke this entire class and replace it with
* https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html
*
*/
File Name: ./src/com/google/javascript/jscomp/deps/PathUtil.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tdeegan): In the future the type information for getter/setter properties could be stored
* in the defineProperties functions.  It would reduce the complexity of this pass significantly.
*
* @author mattloring@google.com (Matthew Loring)
* @author tdeegan@google.com (Thomas Deegan)
*/
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3ClassSideInheritance.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(tomnguyen) Handle destructuring of objects/classes as cases where the field is used.
*
* @author johnlenz@google.com (John Lenz)
*/
File Name: ./src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(user): All functionality for removing nodes and edges.
*
*
* @param <N> Value type that the graph node stores.
* @param <E> Value type that the graph edge stores.
*/
File Name: ./src/com/google/javascript/jscomp/graph/Graph.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(user): Revisit all of this logic.<p>
*
* The existing typing logic is hacky.  Unresolved types should get processed
* in a more consistent way, but with the Rhino merge coming, there will be
* much that has to be changed.<p>
*
*/
File Name: ./src/com/google/javascript/rhino/jstype/NamedType.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO(user): This pass currently runs just before the variable and
* property renaming near the end of the optimization pass.  I think
* Mark put it there to minimize the difference between the code
* generated with/without instrumentation; instrumentation makes
* several optimization passes do less, for example inline functions.
*
* My opinion is that we want utilization/profiling information for
* all function.  This pass should run before most passes that modify
* the AST (exception being the localization pass, which makes
* assumptions about the structure of the AST).  We should move the
* pass up, list inlined functions or give clients the option to
* instrument before or after optimization.
*
*/
File Name: ./src/com/google/javascript/jscomp/InstrumentFunctions.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO: A way to get the processed value, rather than the raw value.
*/
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LiteralToken.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  * TODO: Regexp literals should have their own token type.
File Name: ./src/com/google/javascript/jscomp/parsing/parser/LiteralToken.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  // TODO(tbreisacher): Find out if this pass is still actually useful. Delete it if not.
File Name: ./src/com/google/javascript/jscomp/CheckEventfulObjectDisposal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content:  // TODO(user): Pass needs to be updated for listenable interfaces.
File Name: ./src/com/google/javascript/jscomp/CheckEventfulObjectDisposal.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO (simranarora) What should we have as the intended behavior with block scoping?
File Name: /test/com/google/javascript/jscomp/ExploitAssignsTest.java
Time Of Creation: 2017-06-27T10:59:40-07:00
Time Of Deletion: null
Creation Commit Hash: 75101184744ce6e2dde8cc63037dcdff5a5896a0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(bangert): Delete this alias once it has been deprecated for 3 months.
File Name: /src/com/google/javascript/jscomp/CompilerOptions.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Content: // TODO(bangert): Find a non-conflicting name.
File Name: /src/com/google/javascript/refactoring/SuggestedFix.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Content: // TODO(bangert): Remove this -- we want to rewrite code before closure syntax is removed.
File Name: /src/com/google/javascript/refactoring/RefactoringDriver.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Content: // TODO(bangert): make this compatible with preserveSugar. const B = goog.require('b') runs
File Name: /src/com/google/javascript/jscomp/ClosureRewriteModule.java
Time Of Creation: 2017-06-27T11:00:08-07:00
Time Of Deletion: 2017-06-29T11:52:25-07:00
Creation Commit Hash: 931352f95a87823e17d12adbb2aa8ba6d7bb2ba6
Deletion Commit Hash: af285b5a57c38fc6fc4af6f9eeff40cf81e65a94
Time To Complete: P2D; PT52M17S

Content: // TODO(bellashim): Add a non-transpiling version of this test when InlineFunctions
// can run in that mode.
File Name: /test/com/google/javascript/jscomp/IntegrationTest.java
Time Of Creation: 2017-06-26T10:13:08-07:00
Time Of Deletion: null
Creation Commit Hash: 24703f9fd91d42778a5a83c49db8b5d58078154e
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
//   and remove this special case.
File Name: /src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-27T10:58:06-07:00
Time Of Deletion: null
Creation Commit Hash: f07f6a22314d14577f2c4e44688b355577e11c41
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(dimvar): Besides dead code after returns, this pass removes useless live
/ code such as breaks/continues/returns and stms w/out side effects.
/ These things don't require reachability info, consider making them their own
/ pass or putting them in some other, more related pass.
File Name: ./src/com/google/javascript/jscomp/UnreachableCodeElimination.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(johnlenz): Add support for quoted properties
File Name: /test/com/google/javascript/jscomp/DefinitionUseSiteFinderTest.java
Time Of Creation: 2017-06-22T16:48:22-07:00
Time Of Deletion: null
Creation Commit Hash: 7c5377c3c9947212345f084049c096ef920a6ebd
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(johnlenz): Fix this.
File Name: /test/com/google/javascript/jscomp/DefinitionUseSiteFinderTest.java
Time Of Creation: 2017-06-22T16:48:22-07:00
Time Of Deletion: null
Creation Commit Hash: 7c5377c3c9947212345f084049c096ef920a6ebd
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(mknichel): Make this a SmallTest by disabling threads in the JS Compiler.
File Name: ./test/com/google/javascript/refactoring/RefasterJsScannerTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(moz): Implement this using GWT's emulation of ListenableFuture and friends
File Name: ./src/com/google/javascript/jscomp/gwt/super/com/google/javascript/jscomp/PrebuildAst.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(nicksantos): A lot of this code is duplicated from
/ TypedScopeCreatorTest. We should create a common test harness for
/ assertions about type information.
File Name: ./test/com/google/javascript/jscomp/InferJSDocInfoTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(nicksantos): Re-enable with side-effect detection.
/   public void testInlineWithinCalls2() {
/     helperInlineReferenceToFunction(
/         "/** @nosideeffects */ function foo(){return true;}; " +
/         "function x() {1 + _g(foo()) }",
/         "function foo(){return true;}; " +
/         "function x() { {var JSCompiler_inline_result$jscomp$0; " +
/         "JSCompiler_inline_result$jscomp$0=true;}" +
/         "1 + _g(JSCompiler_inline_result$jscomp$0) }",
/         "foo", INLINE_BLOCK, true);
/   }
File Name: ./test/com/google/javascript/jscomp/FunctionInjectorTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(nicksantos): Split some of this up into per-class unit tests.
File Name: ./test/com/google/javascript/rhino/jstype/JSTypeTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(nicksantos): Unify all the JSDocInfo stuff into one package, instead of
/ spreading it across multiple packages.
File Name: ./src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(nicksantos): enable this again once we allow constant aliasing.
/  public void testInlineConstantAlias() {
/    test("var XXX = new Foo(); var YYY = XXX; bar(YYY)",
/         "var XXX = new Foo(); bar(XXX)");
/  }
File Name: ./test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(rluble): Find a better solution to avoid serializing the code cache.
File Name: /src/com/google/javascript/jscomp/SourceFile.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: null
Creation Commit Hash: 9da58006a8bc76caa9562950468667b09a173e43
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(rluble): move these into the general structure for keeping state between pass runs.
//
/** Adds exported names to keep track. */
File Name: /src/com/google/javascript/jscomp/AbstractCompiler.java
Time Of Creation: 2017-06-27T11:00:04-07:00
Time Of Deletion: null
Creation Commit Hash: 59bc85240c923ad6d2ef14755d43a1ea6e063d76
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(rluble): remove the method from the JSTypeRegistry interface and inline the invocations
// when the OTI is removed.
File Name: /src/com/google/javascript/jscomp/GlobalTypeInfo.java
Time Of Creation: 2017-06-22T16:48:21-07:00
Time Of Deletion: null
Creation Commit Hash: a7b25493d52128073bebde63dcc8dae29fefe98a
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(sdh): It's somewhat odd that we treat function namespaces differently
// from object namespaces. The reason is for consistency with OTI, which treats
// most object literals as anonymous objects, but not so for functions. We
// could remove the 'fn' check and simply return true for all namespaces, but
// we'll need to update a bunch of expectations in DisambiguatePropertiesTest
// (which will then differ from OTI).
File Name: /src/com/google/javascript/jscomp/newtypes/ObjectType.java
Time Of Creation: 2017-06-28T09:03:42-07:00
Time Of Deletion: null
Creation Commit Hash: c27f830ca767a61cd09ac2f43c1f3f87689118ed
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(sdh): change the name to getDirectSubTypes()
File Name: /src/com/google/javascript/rhino/FunctionTypeI.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: null
Creation Commit Hash: aa5874513f85b1731b0749cde561141b7dd2bcf8
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(simranarora): Fix the pass so that it produces these correct outputs.
File Name: /test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: 2017-06-23T16:44:24-07:00
Creation Commit Hash: 656f3859d300ec63ee6c4f21fe7330cb354ad9c5
Deletion Commit Hash: b058b4e6748878a9cf6acec79520ef2c63132dcd
Time To Complete: P1D; PT6H7M29S

Content: // TODO(stalcup): delete this class, it's redundant with the new change tracking system.
File Name: ./src/com/google/javascript/jscomp/AstChangeProxy.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(stalcup): save memory by unlinking events older than the oldest marked time.
File Name: ./src/com/google/javascript/jscomp/Timeline.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(stalcup): track useSites in lhs of GET_ELEM nodes as well.
File Name: ./src/com/google/javascript/jscomp/DefinitionUseSiteFinder.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): Consider merging this with CheckAccessControls so that all
/ const-related checks are in the same place.
File Name: ./src/com/google/javascript/jscomp/ConstCheck.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): Fix and enable this test.
File Name: /test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java
Time Of Creation: 2017-06-29T11:52:06-07:00
Time Of Deletion: null
Creation Commit Hash: 9eedf456101ffdd98d8566fa939f5c288727ed5d
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): Rename Compiler to JsCompiler and remove this suppression.
File Name: ./src/com/google/javascript/jscomp/Compiler.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): Rename this to Es6TranspilationIntegrationTest since it's really testing
/ a lot of different passes. Also create a unit test for Es6ToEs3Converter.
File Name: ./test/com/google/javascript/jscomp/Es6ToEs3ConverterTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): Rewrite direct calls to test() to use rewriteGeneratorBody
/ or rewriteGeneratorBodyWithVars.
File Name: ./test/com/google/javascript/jscomp/Es6RewriteGeneratorsTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(tbreisacher): This class does too many things. Break it into smaller passes.
File Name: ./src/com/google/javascript/jscomp/Es6ToEs3Converter.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(user): Figure out why this increase code size most of the time.
/    inFunction("function x() {}; x(); var y = 1; y",
/               "function x() {}; x(); x = 1; x");
/    inFunction("x(); var y = 1; y; function x() {}",
/               "x(); x = 1; x; function x() {}");
/    inFunction("x(); var y = 1; function x() {}; y",
/               "x(); x = 1; function x() {}; x");
/    // Can't merge because of possible escape.
/    inFunction("function x() {return x}; x(); var y = 1; y",
/               "function x() {return x}; x(); var y = 1; y");
/
/    inFunction("var y = 1; y; x; function x() {}",
/               "var y = 1; y; x; function x() {}");
/    inFunction("var y = 1; y; function x() {}; x",
/               "var y = 1; y; function x() {}; x");
/    inFunction("var y = 1; y; function x() {}; x = 1; x",
/               "var y = 1; y; function x() {}; y = 1; y");
/    inFunction("var y = 1; y; x = 1; function x() {}; x",
/               "var y = 1; y; y = 1; function x() {}; y");
File Name: ./test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO(user): We only care about calls to functions that
// passes one of the dependent variable to a non-side-effect free
// function.
File Name: /src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
Time Of Creation: 2017-06-27T10:58:06-07:00
Time Of Deletion: null
Creation Commit Hash: f07f6a22314d14577f2c4e44688b355577e11c41
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: // TODO: stack timers to get inclusive/exclusive times
File Name: ./src/com/google/javascript/jscomp/parsing/parser/util/Timer.java
Time Of Creation: 2017-06-21T16:51:53-07:00
Time Of Deletion: null
Creation Commit Hash: 58bf38e945f99e7ae0a2399133e9dc7f8b8f9fe0
Deletion Commit Hash: null
Time To Complete: Incomplete

Content: //TODO:@BellaShim get this test to pass
File Name: /test/com/google/javascript/jscomp/FunctionArgumentInjectorTest.java
Time Of Creation: 2017-06-22T10:36:55-07:00
Time Of Deletion: 2017-06-26T10:13:08-07:00
Creation Commit Hash: e27df64602114c539e787fea7a4895e4fc250436
Deletion Commit Hash: 24703f9fd91d42778a5a83c49db8b5d58078154e
Time To Complete: P4D; PT-23M-47S

